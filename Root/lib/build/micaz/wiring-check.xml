<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404e3b70"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403dc300"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403dc300"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404cd1c8"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404e1790"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40574010"/></to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40574010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40595460"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404e10b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cddd10"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cddd10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d241d0"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x40516b38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cda630"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40cda630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cd5108"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x404e9100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd9010"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cd9010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd5848"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x4051b100"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd4770"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x4052d1f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd5b70"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40515178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405748e8"/></to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405748e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40595d38"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40515bd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405802c8"/></to>
    </wire>
    <wire loc="79:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405802c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40594718"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x405132c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40580960"/></to>
    </wire>
    <wire loc="80:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40580960"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40594db0"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x405136b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire loc="81:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40593dc0"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x40513e48"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405931a8"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40532a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4055a880"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40562010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a7d4e0"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4131bc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a633d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x419b76e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41986430"/></to>
    </wire>
    <wire loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410d96a0"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40e13d40"/></to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40e41840"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40df0730"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cfae08"/></to>
    </wire>
    <wire loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c2c9f0"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c1f180"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c085b0"/></to>
    </wire>
    <wire loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bf28c0"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b1d8b8"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a8dca8"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a03a48"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4067d828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417c3a68"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b6168"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4060eca8"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404cd560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40348418"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40348418"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403b4978"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404cdb28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403de918"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403de918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403e4d68"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404d8010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e89c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41348388"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e89c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411723d8"/></to>
    </wire>
    <wire loc="26:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e89c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ecfa78"/></to>
    </wire>
    <wire loc="26:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e89c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40756700"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403e8268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b8c08"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403ed620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b8858"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ed218"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40578ba8"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403ed218"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403e3638"/></to>
    </wire>
    <wire loc="46:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403e3638"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403ea5b8"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e3a08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403e89c8"/></to>
    </wire>
    <wire loc="48:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403f4b10"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403f7ea8"/></to>
    </wire>
    <wire loc="141:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403f7ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404486b0"/></to>
    </wire>
    <wire loc="49:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403ef588"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403e3a08"/></to>
    </wire>
    <wire loc="191:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4041b210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40494ee0"/></to>
    </wire>
    <wire loc="165:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40403750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404594f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404594f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416363b0"/></to>
    </wire>
    <wire loc="176:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40411ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40463030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40463030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4164d538"/></to>
    </wire>
    <wire loc="185:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40416ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4046f890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4046f890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41666228"/></to>
    </wire>
    <wire loc="143:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403fc2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40447988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40447988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41544538"/></to>
    </wire>
    <wire loc="183:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4040da98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404675d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404675d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4166ade0"/></to>
    </wire>
    <wire loc="146:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403fb750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4044d888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4044d888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415b7418"/></to>
    </wire>
    <wire loc="157:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403feea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404574f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404574f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415cc228"/></to>
    </wire>
    <wire loc="168:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4040b670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40461170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40461170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41631228"/></to>
    </wire>
    <wire loc="179:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4040fc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40462c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40462c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41647538"/></to>
    </wire>
    <wire loc="138:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403f8010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40440968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40440968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4154c0b0"/></to>
    </wire>
    <wire loc="149:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40402670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4044a5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4044a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415b2228"/></to>
    </wire>
    <wire loc="160:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40406ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40455170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40455170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415c70b0"/></to>
    </wire>
    <wire loc="171:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404094b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40460e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40460e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4162c0b0"/></to>
    </wire>
    <wire loc="188:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40413ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4046d5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4046d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416610b0"/></to>
    </wire>
    <wire loc="194:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404192f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40498dd8"/></to>
    </wire>
    <wire loc="174:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404088e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40465d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40465d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41650010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404486b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41547010"/></to>
    </wire>
    <wire loc="152:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40400590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40452250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40452250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415ad0b0"/></to>
    </wire>
    <wire loc="192:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4041be08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4049d3e8"/></to>
    </wire>
    <wire loc="155:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403ffa08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4044e228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4044e228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415d3de8"/></to>
    </wire>
    <wire loc="166:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4040c210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40459e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40459e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41635d70"/></to>
    </wire>
    <wire loc="177:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40410750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40463988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40463988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4164b010"/></to>
    </wire>
    <wire loc="186:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404158e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4046e250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4046e250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41665c08"/></to>
    </wire>
    <wire loc="144:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403fcce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40446330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40446330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41595010"/></to>
    </wire>
    <wire loc="147:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403fa210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4044c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4044c250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415b6de0"/></to>
    </wire>
    <wire loc="158:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404078e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40457e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40457e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415cbc08"/></to>
    </wire>
    <wire loc="169:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4040a0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40461ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40461ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41630c08"/></to>
    </wire>
    <wire loc="180:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4040e670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4046b6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4046b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41645010"/></to>
    </wire>
    <wire loc="139:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403f8a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043f330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043f330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4154ba88"/></to>
    </wire>
    <wire loc="150:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404010a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4044af28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4044af28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415b1c08"/></to>
    </wire>
    <wire loc="161:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40405750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40455ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40455ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415c6a88"/></to>
    </wire>
    <wire loc="189:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40412750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4046df28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4046df28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41660a88"/></to>
    </wire>
    <wire loc="164:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40404c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4045ab00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4045ab00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415e7938"/></to>
    </wire>
    <wire loc="175:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404112f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404646b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404646b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4164f9e8"/></to>
    </wire>
    <wire loc="184:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404164b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40467f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40467f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416687f8"/></to>
    </wire>
    <wire loc="195:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40419ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a03b0"/></to>
    </wire>
    <wire loc="142:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403f68e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40447030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40447030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415469e8"/></to>
    </wire>
    <wire loc="153:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403ff010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40452ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40452ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415aca88"/></to>
    </wire>
    <wire loc="182:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4040d0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40468c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40468c28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4166b418"/></to>
    </wire>
    <wire loc="156:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403fe4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4044eb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4044eb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415ce7f8"/></to>
    </wire>
    <wire loc="167:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4040cc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404587d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404587d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416337f8"/></to>
    </wire>
    <wire loc="178:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4040f210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40462330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40462330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4164a9e8"/></to>
    </wire>
    <wire loc="187:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404132f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4046eba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4046eba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416636c0"/></to>
    </wire>
    <wire loc="137:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403f1558"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40440010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40440010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4154e6c0"/></to>
    </wire>
    <wire loc="148:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403fac08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4044cba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4044cba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415b47f8"/></to>
    </wire>
    <wire loc="159:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404062f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404567d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404567d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415c96c0"/></to>
    </wire>
    <wire loc="170:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4040aa98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404604f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404604f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4162e6c0"/></to>
    </wire>
    <wire loc="193:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4041a830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4049a8f0"/></to>
    </wire>
    <wire loc="173:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40409ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404653d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404653d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41652538"/></to>
    </wire>
    <wire loc="162:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x40404210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404534f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404534f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415c4538"/></to>
    </wire>
    <wire loc="140:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403f74b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043fc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043fc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41549538"/></to>
    </wire>
    <wire loc="151:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40401b18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40449890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40449890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415af6c0"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403ba1f8"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403bae68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4034f7f8"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403cd370"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406c1010"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x4052f3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x4052fc00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40578ba8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40565c20"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40562cd8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40564c98"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40564c98"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403f8a08"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40561740"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40579760"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40579760"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403f8010"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40560200"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40578220"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40578220"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403f1558"/></to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40595460"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405a4cb8"/></to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40595d38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c82120"/></to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40594db0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40c80190"/></to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40593dc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c7f190"/></to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4057d010"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40acf1a0"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40acf1a0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ac7b20"/></to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4058d980"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4059b660"/></to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4059b660"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405c0c68"/></to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40594718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c82ae0"/></to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059ceb8"/></to>
    </wire>
    <wire loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059ceb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c0310"/></to>
    </wire>
    <wire loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405931a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c80500"/></to>
    </wire>
    <wire loc="92:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057c9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aceb50"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aceb50"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ae8578"/></to>
    </wire>
    <wire loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405a4cb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c72570"/></to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405a6de8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40c7e238"/></to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405aead0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40c7fb88"/></to>
    </wire>
    <wire loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4059c660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x405aaa50"/></to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405aaa50"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405c0c68"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c76f28"/></to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c0310"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ad0010"/></to>
    </wire>
    <wire loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405a5010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x405bf2a0"/></to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405bf2a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c75e50"/></to>
    </wire>
    <wire loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405a82e8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405c08a0"/></to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405c08a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad0b20"/></to>
    </wire>
    <wire loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40c7a4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x405b76f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c7ea88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x405abf18"/></to>
    </wire>
    <wire loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x405abf18"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c30568"/></to>
    </wire>
    <wire loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c7d220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x405aa6b8"/></to>
    </wire>
    <wire loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x405aa6b8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c30cf0"/></to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c7b460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409d0730"/></to>
    </wire>
    <wire loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c7d5b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ac8100"/></to>
    </wire>
    <wire loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c7ddd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ac8f28"/></to>
    </wire>
    <wire loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40c7c390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40610930"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40610930"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4061c798"/></to>
    </wire>
    <wire loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40c7bba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405bb0f0"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405bb0f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405c7010"/></to>
    </wire>
    <wire loc="109:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c7abb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c72570"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c70098"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad0b20"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ac74c8"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c75e50"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c662b0"/></to>
    </wire>
    <wire loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40c30568"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40c29b50"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c76f28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c70cc0"/></to>
    </wire>
    <wire loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x405ab3e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c30198"/></to>
    </wire>
    <wire loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c30198"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40c29780"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40ad0010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40ac89a8"/></to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405b76f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c31318"/></to>
    </wire>
    <wire loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c31318"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c2b870"/></to>
    </wire>
    <wire loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x405b2c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c319e0"/></to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c319e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40c29010"/></to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x405ab7c8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c2f0e8"/></to>
    </wire>
    <wire loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40c2f0e8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c28700"/></to>
    </wire>
    <wire loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40c30cf0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40c28320"/></to>
    </wire>
    <wire loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c70098"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405bc010"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405bc010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c8290"/></to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c2fc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be6810"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40be6810"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c0bea8"/></to>
    </wire>
    <wire loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c0b010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c75750"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c75750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c675e8"/></to>
    </wire>
    <wire loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c675e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c76480"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c76480"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c714c8"/></to>
    </wire>
    <wire loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c714c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405bc618"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405bc618"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405c8898"/></to>
    </wire>
    <wire loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c2f890"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c76b60"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c76b60"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c71c30"/></to>
    </wire>
    <wire loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c71c30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c0c4e0"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c0c4e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c229b8"/></to>
    </wire>
    <wire loc="109:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c0cd30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405bcd18"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405bcd18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a8eb60"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a8eb60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a8aa40"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405c7800"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406098f8"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406098f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4061c060"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x405d19c0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40605a40"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40605a40"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4061b880"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405cf3f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409d8190"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405cf3f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a8e180"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a8e180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a8a060"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409d8190"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a03de8"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x405cb9e0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x409d8618"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x409d8618"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a02330"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405c3278"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409d8d30"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x409d8d30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40a02a68"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405d0810"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405d8010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x405d96e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bee6e0"/></to>
    </wire>
    <wire loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x405e1858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bf6898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40bf6898"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089e100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405d9b28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x405e09a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x405e0198"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x405d4928"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x4060c900"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4061a3e0"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x406181c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x4067ddf0"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x4067ddf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40678a60"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40615bd8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x407c2c48"/></to>
    </wire>
    <wire loc="100:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x407c2c48"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403fb750"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40622680"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x407d8a50"/></to>
    </wire>
    <wire loc="103:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x407d8a50"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403fc2f0"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x406210b0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x407d7e78"/></to>
    </wire>
    <wire loc="105:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x407d7e78"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x403f68e0"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4061d1d8"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x407e5ef0"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407e5ef0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4083e010"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40637a98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4097ce28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4097ce28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4084fd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x406268d0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x409794e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409794e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40626ce8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40979ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40979ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40637678"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x4097bda0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x4097bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40637158"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40997260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40997260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x406285c0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40992190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40992190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40628ac8"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x409912b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409912b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4061f010"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x409916e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409916e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4061f530"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40995270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40995270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4061fa50"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409956a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409956a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x4062adc8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x4098a8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4098a8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4062a878"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x4098a488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4098a488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40629010"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40993bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40993bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40629508"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40995ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40995ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40629a10"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40993368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40993368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40636a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409a0e88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409a0e88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4084fd98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40636268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409a8980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409a8980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4084fd98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4062c1f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409d0730"/></to>
    </wire>
    <wire loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40619828"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x409cf9f0"/></to>
    </wire>
    <wire loc="126:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4062f2c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x40631ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4067d828"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c64b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x407c64b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c77b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40678a60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x416e5688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x416e5688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x416dedd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41737b60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x416e1448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x416e1448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41731210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x41738918"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40782010"/></to>
    </wire>
    <wire loc="33:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40782010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4079a7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41730c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4069caa0"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4069caa0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406adb78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4172de68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406a22f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406949b0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406f0e78"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406a4770"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406eeb88"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a22f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40700a80"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a22f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x406fd6a0"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a22f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x406fb340"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x406f9e98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406bae18"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406bae18"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406c5af0"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406b4498"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406c1470"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aa798"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406c34f8"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406b0608"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b87a8"/></to>
    </wire>
    <wire loc="27:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40756ae8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4069caa0"/></to>
    </wire>
    <wire loc="34:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407a2ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077fa08"/></to>
    </wire>
    <wire loc="31:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4077fa08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40791320"/></to>
    </wire>
    <wire loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40786568"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4069caa0"/></to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x407d9660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403ff010"/></to>
    </wire>
    <wire loc="102:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x407d8068"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x4040fc08"/></to>
    </wire>
    <wire loc="99:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x407c2270"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4040aa98"/></to>
    </wire>
    <wire loc="104:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x407d7490"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4040b670"/></to>
    </wire>
    <wire loc="49:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x407e57f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407e3ad0"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x407cf618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x407ef8e0"/></to>
    </wire>
    <wire loc="50:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x407e2220"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406a4770"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x407efed8"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x407f6c98"/></to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x407f6c98"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082ee68"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x4083e6c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x407c2270"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x407f80b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40820538"/></to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x407f7ad8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40819a08"/></to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x407f55d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082b050"/></to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x407f8930"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4081d6c0"/></to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x407f6418"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40831c70"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x407fb810"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407f23b0"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x407f7258"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4081b7a8"/></to>
    </wire>
    <wire loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407f2b68"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40807148"/></to>
    </wire>
    <wire loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40820cf0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x408075c0"/></to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4081de78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40807a38"/></to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4081a010"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40807eb0"/></to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40818270"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x4080a360"/></to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40830438"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x4080a7d8"/></to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082d630"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x4080ac50"/></to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082b808"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x408091a0"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x4083ded8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40979190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40992a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST0" scoped="" ref="0x4098e2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40992e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40988b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40989a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40979b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DACTST" scoped="" ref="0x4098b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40989190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST0" scoped="" ref="0x4098f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40990880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4097b530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4085b480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40997910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40997c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x4098bc00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40996080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409895c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ADCTST" scoped="" ref="0x4098ccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40995f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x4098c448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST1" scoped="" ref="0x4098e6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x4098c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409886e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40989e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40990cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST2" scoped="" ref="0x4098eb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4098acf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40991b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409a6010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x4097ba48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40996de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409937a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST1" scoped="" ref="0x4098fa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST2" scoped="" ref="0x4098fe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409925c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409963d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40996a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409975b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4098a050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x409882b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x4098f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST3" scoped="" ref="0x4098c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40979840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40990010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40996730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40990448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TOPTST" scoped="" ref="0x4098b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409a66e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40861e18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4085a788"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40860880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40859208"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4085e100"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x408599b0"/></to>
    </wire>
    <wire loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4084fd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4085bc90"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40872178"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x4086cef8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408a0e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x408a0e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089e100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x408725b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40972668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40972668"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408c2f20"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4086f5b0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40972d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40972d20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408c4d58"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4086ca28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40971070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40971070"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408bd790"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408716b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40868520"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4089e100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b6798"/></to>
    </wire>
    <wire loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408bd790"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408bad40"/></to>
    </wire>
    <wire loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408c4d58"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408ba3a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40972330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c49d8"/></to>
    </wire>
    <wire loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408c49d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408ba040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x4095b6f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408bdee0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x4095be28"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403fb750"/></to>
    </wire>
    <wire loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x408bd158"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x408ba728"/></to>
    </wire>
    <wire loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408bdee0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4093be18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4093be18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417c1e18"/></to>
    </wire>
    <wire loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40960e60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x408d2448"/></to>
    </wire>
    <wire loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x408e2320"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x408f52e8"/></to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x408f52e8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x408f36d8"/></to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408b8bf8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ce4c8"/></to>
    </wire>
    <wire loc="294:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x408ec860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40909ce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ce4c8"/></to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x4090b4d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403fb750"/></to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4090bea8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403fa210"/></to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x4090a8d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403fac08"/></to>
    </wire>
    <wire loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x409092e0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40402670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409605a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417c05a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x409609b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417c09b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417c0e70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40960e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417bf2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417c3da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417bf8a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40999bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x4099e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4099a270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40998a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST0" scoped="" ref="0x409b32b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40998e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409adb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x409afa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x4099eb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DACTST" scoped="" ref="0x409b1190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409af190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4099aae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40999368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST0" scoped="" ref="0x409b55c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409b6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409b72b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4099f550"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x4099d910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x4099dc68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x409b1c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x4099c080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409af5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x4099d260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ADCTST" scoped="" ref="0x409b2cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4099af18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4099a6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x4099fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x409b2448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST1" scoped="" ref="0x409b36e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x409b2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409ad6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x409afe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409b6cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST2" scoped="" ref="0x409b3b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409b0cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409b7b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409ac010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x4099fa68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x4099cde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409997a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST1" scoped="" ref="0x409b5a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409b76e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST2" scoped="" ref="0x409b5e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40998190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x4099e4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409985c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x4099c3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x4099ca88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409b08c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409b0488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x4099d5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409b0050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x409ad2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409b5190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST3" scoped="" ref="0x409b2010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x4099e840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x4099eef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409b6010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x4099c730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409b6448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TOPTST" scoped="" ref="0x409b15c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409ac6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409c1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409c7c28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409c06a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST0" scoped="" ref="0x409bce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x409c0ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409d56e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x409d65c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409c66c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DACTST" scoped="" ref="0x409bacb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409d7cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409c26e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409c1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST0" scoped="" ref="0x409bc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409bd468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409c0f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409c7060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409c54e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409c5840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x409b97c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409c5c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409d6190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409c6d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ADCTST" scoped="" ref="0x409ba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409c2b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409c22b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409c78d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x409ba010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST1" scoped="" ref="0x409bb2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x409ba448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409d52b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x409d6a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409bd8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST2" scoped="" ref="0x409bb6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409d78c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409bf7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409d5b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409c7578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409c3a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x409c1448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST1" scoped="" ref="0x409bc5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409bf368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST2" scoped="" ref="0x409bca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409c1db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409c6010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409c0270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409c3010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409c36c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409d7488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409d7050"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409c5190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409b9c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x409d6e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409bdcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST3" scoped="" ref="0x409bbb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409c6368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409c6a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409bfbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409c3368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409bd030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TOPTST" scoped="" ref="0x409b9190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409d4270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x409f7e28"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40a013b0"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x409f62e0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40a01838"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40a01e00"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x4067ddf0"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x409f94f0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x407c2270"/></to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a16010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x407c2c48"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40a16a08"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x407d7490"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40a17e58"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x407e57f0"/></to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a154f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a67e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a67e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4084fd98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a15c48"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a66530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a66530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></to>
    </wire>
    <wire loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a133f0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a66a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40a66a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40a13800"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a64840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40a64840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a13c30"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a64b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a64b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a12088"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a63910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a63910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a14ee0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a60368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a60368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a14238"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a756e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a756e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a149d8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a77190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a77190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a124c8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a616a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a616a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a12f00"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40a5e5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a5e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a11438"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40a5ea00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a5ea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40a12ac0"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40a62730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40a62730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40a10318"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40a766e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40a766e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a11900"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40a77a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40a77a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a11dc8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40a77e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40a77e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a0c120"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a8e620"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a8e620"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a8a500"/></to>
    </wire>
    <wire loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x409fe878"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></to>
    </wire>
    <wire loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409fd108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409fd850"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40acf1a0"/></to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a17788"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40acb308"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40acb308"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ae7cb0"/></to>
    </wire>
    <wire loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a0c648"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a60bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a64190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a61270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST0" scoped="" ref="0x40a7c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a5ee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40a76b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DACTST" scoped="" ref="0x40a79190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40a61ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST0" scoped="" ref="0x40a7d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40a7e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a5d2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40a63c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x40a79c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a62080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a775c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a63260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ADCTST" scoped="" ref="0x40a7acb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a61f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a66da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x40a7a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST1" scoped="" ref="0x40a7c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x40a7a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40a7ecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST2" scoped="" ref="0x40a7cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a78cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a5db20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a75010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40a62de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a607a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST1" scoped="" ref="0x40a7da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a5d6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST2" scoped="" ref="0x40a7de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a5e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40a644e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a623d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40a62a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40a788c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a78488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a635b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a78050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40a762b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a7d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST3" scoped="" ref="0x40a7a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a64ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a7e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a7e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TOPTST" scoped="" ref="0x40a795c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a8d010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a8aed8"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aa20a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a892c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x407c2c48"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a89cc8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x407d9660"/></to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a88768"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x407d8068"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a872a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x407cf618"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a87968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad12c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ad12c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4084fd98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a86128"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40be25c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40be25c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a86ce0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40bcba18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40bcba18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a868b0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40bca190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40bca190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a851f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a85a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a832b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40acf1a0"/></to>
    </wire>
    <wire loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40a84010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40610930"/></to>
    </wire>
    <wire loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a81e58"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40bc6b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bc6b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a80398"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40bc5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bc5010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a81a18"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40bca8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40bca8c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40a7f238"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40be2190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40be2190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40a80860"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40be3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40be3010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40a80d28"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40be3448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40be3448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a7f738"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40be5b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40be5b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40a7fc20"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40ad1e90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40ad1e90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40a9b330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40afe828"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40782010"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae2950"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b1ee70"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ae4420"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b11d80"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b11d80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bb7c60"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b12a78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b92210"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b1d8b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b34458"/></to>
    </wire>
    <wire loc="35:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b34458"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b65010"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40bbb5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b60270"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b705b8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40b34a20"/></to>
    </wire>
    <wire loc="36:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40b34a20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b65448"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bb5638"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40b30768"/></to>
    </wire>
    <wire loc="37:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40b30768"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b64eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40b64eb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x417fcb70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40b65010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417ffc38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b65448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x417fd0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x417fbd60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b0608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x417f7010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406bae18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x417f7838"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406aa798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x417f4278"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406b4498"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40b94010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40bb8798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40bb26e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b12a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40bc6190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40bcc558"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40bc87a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST0" scoped="" ref="0x40bc1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40bc5448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40bcb010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DACTST" scoped="" ref="0x40bbf6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40be56e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40bc7030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bc78a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST0" scoped="" ref="0x40bc3b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40bc4e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40bc5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad1978"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40bcbd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x40bbe190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40bca568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40bcb6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ADCTST" scoped="" ref="0x40bbf2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40bc7468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bc8bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40bcc200"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x40bc0a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST1" scoped="" ref="0x40bc1cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x40bc0e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40be3cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40bc32b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST2" scoped="" ref="0x40bc0190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40be52b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40bc4190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40bc8368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40bc7cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST1" scoped="" ref="0x40bc1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40bc5cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCTST2" scoped="" ref="0x40bc1448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40bc66c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40bcc8b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40bc8010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40bbee38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40bbea00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bbe5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40be3880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40860880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40bc36e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSTST3" scoped="" ref="0x40bc05c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40bccc08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40bcb368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40bc45c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40bcac18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40bc4a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TOPTST" scoped="" ref="0x40bbfb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4085e100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40be2ca0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40861e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40bf1380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bf2de0"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bf4090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bf28c0"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c089a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c0b010"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40c07098"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c0adc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c0adc8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089e100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c07850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c07cf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40c0c908"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40c22de0"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c1f5a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c0cd30"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c1f968"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c28e70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c2fc40"/></to>
    </wire>
    <wire loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c27600"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c2f890"/></to>
    </wire>
    <wire loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c27998"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c261f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></to>
    </wire>
    <wire loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40c267b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40c2cd28"/></to>
    </wire>
    <wire loc="180:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40c60250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40c72be0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40c69d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40c69d20"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4089e100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c66a68"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c0310"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d241d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d1c1d0"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd7770"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd4e08"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40cfae08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d22de8"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d1eca8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40cd7ca8"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cfb360"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d23100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cfba18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d24a90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d1e7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40ef5ae8"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d23100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d90c60"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d24a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d908a0"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40db5400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d1e7a0"/></to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d17500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d1eca8"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40db43f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d1eca8"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40dde500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d1eca8"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40db58e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d15a80"/></to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40db5dc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40d18960"/></to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40d12c10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40de2878"/></to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40d14260"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40de15d8"/></to>
    </wire>
    <wire loc="48:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40de15d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40df7340"/></to>
    </wire>
    <wire loc="80:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40dd8bd8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40de1a58"/></to>
    </wire>
    <wire loc="49:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40de1a58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40df7c30"/></to>
    </wire>
    <wire loc="332:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40d6b1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40d2f518"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40d40970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d6ae08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40db3030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40db3468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40df58f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40df77b0"/></to>
    </wire>
    <wire loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40df77b0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40df0e80"/></to>
    </wire>
    <wire loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40df7c30"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40e2a2b0"/></to>
    </wire>
    <wire loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40df7340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40df0a68"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40df26f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40df3980"/></to>
    </wire>
    <wire loc="33:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40df3980"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ec6170"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e280a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40df26f0"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40e2ab48"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e16a80"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40e16a80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40e421a8"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40e29010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e15010"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40e15010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40e426d8"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40e29448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e15508"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40e15508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40e42bf0"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40e14b80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40e407a0"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40e14178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40e41c90"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40e14688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40e40288"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e3f3c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403e8268"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40e3fb08"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ce4c8"/></to>
    </wire>
    <wire loc="34:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ec43b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e69408"/></to>
    </wire>
    <wire loc="31:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e69408"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ed00c0"/></to>
    </wire>
    <wire loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40eca2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e67d38"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e67d38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e8b230"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e61090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e89530"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40e61d80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e87258"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5ff20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e85128"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5ff20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e83d20"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e5ff20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e81950"/></to>
    </wire>
    <wire loc="27:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ecfe60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e67d38"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ef9a28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4105d2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4105d2c0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ef9a28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x411f9e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x411f9e30"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ef9a28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x411f39d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x411f39d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f28800"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x411f0958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x411f0958"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f28800"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x412296a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x412296a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f28800"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41227330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41227330"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ef8010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee1360"/></to>
    </wire>
    <wire loc="78:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41406278"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403dc300"/></to>
    </wire>
    <wire loc="79:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x414065c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee1360"/></to>
    </wire>
    <wire loc="83:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x41400390"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x412e2e80"/></to>
    </wire>
    <wire loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x412e2e80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4123e488"/></to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x41400818"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40f04df8"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x40f04df8"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40f21628"/></to>
    </wire>
    <wire loc="85:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x413ff538"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x4131ab58"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x4131ab58"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x4131b860"/></to>
    </wire>
    <wire loc="86:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x41400f20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40574010"/></to>
    </wire>
    <wire loc="87:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x413ffcb8"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x41051778"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x41051778"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x41050de8"/></to>
    </wire>
    <wire loc="88:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x413fb3f8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x4147ccc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x4147ccc0"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41428940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41425010"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x413fd4e0"/></to>
    </wire>
    <wire loc="90:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x413fa700"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4145fe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4145fe48"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4147af20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x413fab50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4147bba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4147bba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x4151f538"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x412b2bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x412b2bd8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x419e1030"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f7b100"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ef9a28"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f7bb10"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f28800"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f172c0"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f48460"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f48460"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f741a8"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x40f15890"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40fe7800"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x40f15d50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fe0e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40fe0e08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418fa8a8"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x40f1c4e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4103c2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4103c2c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405802c8"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40f793d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41038778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41038778"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41921358"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40f7a810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41035748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41035748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405802c8"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40f7abf8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41033c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41033c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41909200"/></to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40f7a408"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4102fba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4102fba0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405802c8"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f79ac8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410329a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x410329a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41908010"/></to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f78d58"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ef8010"/></to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f1cb78"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f28800"/></to>
    </wire>
    <wire loc="80:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f21c50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></to>
    </wire>
    <wire loc="81:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f201c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4102ba38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4102ba38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x40f43f08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f6eac8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f7b100"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f735a8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f7bb10"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40f73e18"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40f7a408"/></to>
    </wire>
    <wire loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40f72240"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40f7a810"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40f72628"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x40f7abf8"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40f72d88"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x40f793d8"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f6d528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f79ac8"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f6c230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f78850"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f69a68"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f6c868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40fbcad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40fbcad8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x40f6e280"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x40fbd5d0"/></to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f69e90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f78d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x418fa8a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418f0440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40fdf4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x418f7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x418f7010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fdfb68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x418f76a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418f76a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41041790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x418f6330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x418f6330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x418f0b08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41004dc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x418ef230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41004dc0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fffda0"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41010598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405748e8"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41010c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4100f850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x4100ff28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x4100e370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4103c5d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4103cc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41921358"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4191de80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41038e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x419219f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x419219f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x410374d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41920150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41920150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41036170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41920d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41920d48"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41919560"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41004dc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41919bf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41035a60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41034150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41909200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41905ae8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41032310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41909898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41909898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41908010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x410305d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41908c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41908c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41902260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41004dc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x419028f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4102feb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4102e580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4105d958"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41950dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41950dc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419502b0"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41059798"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41052e60"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410505c8"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x4108f1e8"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x41090238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4108bbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4108bbd8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41085b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x41090238"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41208978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41208978"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41085b10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x41090238"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x412065f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x412065f0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41085b10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x41090238"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41204310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41204310"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41085b10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x41090998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4108b460"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4108b460"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41085028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x41090998"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41208200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41208200"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41085028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x41090998"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41207e58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41207e58"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41085028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x41090998"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41205ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41205ae0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41085028"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x4108f5a8"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x4120f7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x410824e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x4120f7d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41082c40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410dbd10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x41083010"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x410de8b8"/></to>
    </wire>
    <wire loc="36:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x410de8b8"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x410d99f8"/></to>
    </wire>
    <wire loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41111390"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411d3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411d3010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41983438"/></to>
    </wire>
    <wire loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410dbd10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411d4418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411d4418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419848d0"/></to>
    </wire>
    <wire loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41111a98"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411d36a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411d36a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41983ad0"/></to>
    </wire>
    <wire loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x410ff0f0"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x4116b9a0"/></to>
    </wire>
    <wire loc="26:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x4116b9a0"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x411665b8"/></to>
    </wire>
    <wire loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x410fd758"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x41194270"/></to>
    </wire>
    <wire loc="145:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x4112f3b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x4112e3b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411659e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41177a10"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41177a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41195860"/></to>
    </wire>
    <wire loc="29:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x41178170"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x41174210"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x41174210"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x411727b0"/></to>
    </wire>
    <wire loc="30:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x41178488"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x411745b0"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x411745b0"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x41172b50"/></to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x411ae330"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x403f74b0"/></to>
    </wire>
    <wire loc="71:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x411aed08"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x4040a0a0"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x411ac110"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x4040c210"/></to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x411ad730"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x4040cc08"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x411acc58"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x41194270"/></to>
    </wire>
    <wire loc="163:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x4119b728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x411c9368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x411d4b58"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41983030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41982010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x411d3b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41982438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41986768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x419816d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x410824e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x4120f7d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41082c40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410dbd10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x410824e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x4120f7d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41082c40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410dbd10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x410824e0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x4120f7d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41082c40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410dbd10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411fbd60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411f75e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411f75e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419b6a50"/></to>
    </wire>
    <wire loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411f8540"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411f6150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411f6150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x419b55f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x411f7d20"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x419b51e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x419b5ab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x411f6600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x419b5ed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x419b7a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x419b44e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411f4510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419fe060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419fe060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419ff510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x411f2150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419f94e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419f94e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419fa9a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4122a150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419f4948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419f4948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419f5db0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41229e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419eee60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419eee60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419ee350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41227aa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419e83a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x419e83a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x419e9860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x41222d98"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x419e3200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x4123ec60"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x419e19b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x4123aaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x419e4cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4123a028"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4127bb88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x419e0170"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x419e0d88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4123e488"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41239690"/></to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41239e68"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x4123ec60"/></to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41234968"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4123a028"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41233498"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x4123aaf8"/></to>
    </wire>
    <wire loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x412338d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412355c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x412355c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a2e030"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41231010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412869b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x412869b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405802c8"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x412313f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412834b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x412834b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a1aed0"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x41231b78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4127fa18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4127fa18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405802c8"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41231ec0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4127a378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a2e030"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a2ab58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41235c58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a2e6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a2e6c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41288310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a2ed60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a2ed60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41288f08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a2da30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a2da30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a27260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41004dc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a278f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41286cc8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x412853f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a1aed0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a13998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41283b48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a17580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a17580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41282230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a17c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a17c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41282e28"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a16870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a16870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a0f080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41004dc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a0f718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4127fd30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4127e3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></to>
    </wire>
    <wire loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4127bb88"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x412e4bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x412e4bb8"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41a63780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41a63ee8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41a5ce18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41a5ce18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x41a5e3f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x41a5fa80"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41a56618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x41a5f128"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41a59e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41a5e7e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x41a5d430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x41337148"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x4133d710"/></to>
    </wire>
    <wire loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x41337560"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40fe7800"/></to>
    </wire>
    <wire loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="ReprogramGuard" scoped="" ref="0x41334ad0"/></from>
      <to><interface-ref name="ReprogramGuard" scoped="" ref="0x413189c0"/></to>
    </wire>
    <wire loc="11:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <from><interface-ref name="ReprogramGuard" scoped="" ref="0x413189c0"/></from>
      <to><interface-ref name="ReprogramGuard" scoped="" ref="0x41325388"/></to>
    </wire>
    <wire loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41337988"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><function-ref name="initAmAddress" scoped="" ref="0x41335ca0"/></from>
      <to><function-ref name="initAmAddress" scoped="" ref="0x409cdd48"/></to>
    </wire>
    <wire loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x41336630"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4061c798"/></to>
    </wire>
    <wire loc="12:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x41325920"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41407ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41407ef8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41a888f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41a888f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4135e6e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41a87490"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41408470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41357b30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41a87490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413553c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x413523c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413506c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41a87968"/></to>
    </wire>
    <wire loc="30:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4135e6e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x413ec560"/></to>
    </wire>
    <wire loc="31:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x41356b90"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x413e9178"/></to>
    </wire>
    <wire loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x413d3ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413553c0"/></to>
    </wire>
    <wire loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x413e86b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41357b30"/></to>
    </wire>
    <wire loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x413d3280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x413ea1d8"/></to>
    </wire>
    <wire loc="36:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x413e9de8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4134ed38"/></to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4134ed38"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41348bc8"/></to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4134aec0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41347200"/></to>
    </wire>
    <wire loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x413523c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41363420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41363420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a7ca78"/></to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413b8b58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x413506c8"/></to>
    </wire>
    <wire loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x41383a78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41366010"/></to>
    </wire>
    <wire loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x41366010"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x41365c80"/></to>
    </wire>
    <wire loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x41346ea8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403e8268"/></to>
    </wire>
    <wire loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x413b69f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x41348738"/></to>
    </wire>
    <wire loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413b5150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413b8010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413b8010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a7b5f0"/></to>
    </wire>
    <wire loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x413a81f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403ce4c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x41363b60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41a7b1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x413b86a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41a7bc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41a7a218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x413b8b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41a7a640"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41a7d818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41a79890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41ac13b0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x413b69f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41ac17a8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x413b6de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41ac1ac0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413b5150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41ac0230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413b57e8"/></to>
    </wire>
    <wire loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x413dfe90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x413f43d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41402830"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41428940"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41421898"/></to>
    </wire>
    <wire loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x4141eec0"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x41425010"/></to>
    </wire>
    <wire loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41421cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403dc300"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4141f3e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x414230d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x414230d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4141f3e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41446ce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41446ce8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4141f3e0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x414448a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x414448a8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4141f3e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x414424d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x414424d0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4141fe00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4143e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4143e030"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4141fe00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4143dd20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4143dd20"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4141fe00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4143b9b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4143b9b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4141fe00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x414836a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x414836a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41423770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ab1358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ab1358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ab2828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414453f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41aac820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41aac820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41aadc68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41443010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41aa6cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41aa6cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41aa61e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41442b68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41aa01b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41aa01b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41aa1690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4143e7a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a9a6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41a9a6d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41a9cab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4143c4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41af9bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41af9bf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41af90e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4143a150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41af31b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41af31b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41af4690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41483e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41aed6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41aed6d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41aefba0"/></to>
    </wire>
    <wire loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4147af20"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41477cf0"/></to>
    </wire>
    <wire loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41473508"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41475888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41475888"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41473508"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41464520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41464520"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41473508"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41462250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41462250"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41472010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41474030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41474030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ae4cf8"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41472010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41464c98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41464c98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ade168"/></to>
    </wire>
    <wire loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41472010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x414629c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414629c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ad8538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ae4cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ae41e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ade168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41adf640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ad8538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ad9a08"/></to>
    </wire>
    <wire loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/SerialStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x414a2060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cddd10"/></to>
    </wire>
    <wire loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4149f0e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x414a2060"/></to>
    </wire>
    <wire loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x414a2d10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403dc300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41aceb08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b26010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b26010"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41aceb08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b258b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b258b8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41aceb08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b23230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b23230"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41aceb08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b22b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b22b88"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41059798"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41acd2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41b20448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b20448"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41acd2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41b1fea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b1fea8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41acd2c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41b1d8b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b1d8b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41acd2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41b1b2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b1b2c0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41acda50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b28f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b28f20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41acc150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411f8540"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeoutTimer" scoped="" ref="0x41acb010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41b2b238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41b2b238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x41acc568"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41ad3aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41ad3aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b0e690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x41accc20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41ad07c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41ad07c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd9010"/>
      <arguments>
        <value cst="I:83">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41b2d220"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41ad2158"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41ad27f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41ad1410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd7770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41b0ed58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414967e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b0d4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x414967e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41493ed8"/></to>
    </wire>
    <wire loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41492668"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cda630"/></to>
    </wire>
    <wire loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41492d10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41491930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x41490030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x41490468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41ad0ad8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41acf230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b266a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b89ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b89ed8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b893c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b24010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b82358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b82358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b84828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b238c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b7d820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b7d820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b7fc70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b21238"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b78cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b78cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b781e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b20bc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b711b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b711b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b72690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b1e660"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b6c6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b6c6f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b6ebd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b1c070"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b66cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b66cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b661e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b1ba38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41bc7358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bc7358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41bc8828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x41bb9a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41bbe940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41bbe940"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x41bb9010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41bc3900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41bc3900"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41ba7060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x41bb96c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41bc06e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41bc06e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd9010"/>
      <arguments>
        <value cst="I:84">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41bb5150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055a880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x41bba678"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x4151f538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NetProg" scoped="" ref="0x41bb7d10"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x4131ab58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x41bb4548"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40f04df8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="StorageMap" scoped="" ref="0x41bb5dc0"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x41051778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41bb4150"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41bb2cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41bb2cc0"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41428940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41bb4b00"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41bb18d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41bb18d0"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4147af20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bb4ef8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41bb0458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bb0458"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411fbd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><function-ref name="stop" scoped="" ref="0x41bb35e8"/></from>
      <to><function-ref name="stop" scoped="" ref="0x413fd860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41bc2010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41bc26a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41bc1330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd7770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41ba7728"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414967e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41ba7dc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41bc09f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41bbf150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403b6388"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/van9ogh/Projects/tinyos-main/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b2b2f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TThree" ref="0x403b60a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TThree" ref="0x403b60a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403b6680"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="44(DelugePageTransferC.Timer):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CrcC" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/CrcC.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/system/CrcC.nc">
        <short>&#10; Wrapper around the CRC-16 primitive to allow computing the CRC&#10; value of a byte array.</short>
        <long>&#10; Wrapper around the CRC-16 primitive to allow computing the CRC&#10; value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="47(ObjectTransferC.SendAdvMsg):/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="47(ObjectTransferC.SendAdvMsg.SenderC):/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="43(ObjectTransferC.ReceiveAdvMsg):/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="47(ObjectTransferC.SendReqMsg):/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="47(ObjectTransferC.SendReqMsg.SenderC):/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="43(ObjectTransferC.ReceiveReqMsg):/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="47(ObjectTransferC.SendDataMsg):/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="47(ObjectTransferC.SendDataMsg.SenderC):/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="43(ObjectTransferC.ReceiveDataMsg):/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="44(ObjectTransferC.Timer):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="40(DelugeC.BlockReaderDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="37(BlockStorageManagerC.BlockStorageManagerP):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="52:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="90:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="89(At45dbC.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="42(At45dbC.Arbiter.Queue):/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="83(BlockStorageLockC.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="42(BlockStorageLockC.Arbiter.Queue):/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="40(DelugeC.BlockReaderDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="40(DelugeC.BlockReaderDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="40(DelugeC.BlockWriterDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="40(DelugeC.BlockWriterDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="40(DelugeC.BlockWriterDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41220610"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="391:/usr/bin/../lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def _EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def _EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C. *</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <documentation loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReprogramGuardC" loc="1:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <configuration/>
    </component>
    <component qname="ReprogramGuardP" loc="1:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <module/>
    </component>
    <component qname="ReprogramGuardC.VoltageC" loc="39(ReprogramGuardC.VoltageC):/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogramGuardC.VoltageC.AdcReadClientC" loc="21(ReprogramGuardC.VoltageC.AdcReadClientC):/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="44(DelugeC.Timer):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="40(DelugeMetadataC.BlockReaderGoldenImage):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="40(DelugeMetadataC.BlockReaderDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="40(DelugeMetadataC.BlockReaderDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="40(DelugeMetadataC.BlockReaderDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="40(DelugeMetadataC.BlockWriterGoldenImage):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="40(DelugeMetadataC.BlockWriterDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="40(DelugeMetadataC.BlockWriterDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="40(DelugeMetadataC.BlockWriterDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="37(DelugeC.DelugeMetadataClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeVolumeManagerClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeVolumeManagerC.BlockWriterDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeVolumeManagerC.BlockWriterDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeVolumeManagerC.BlockWriterDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="37(DelugeC.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AutoStarterC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AutoStarterP" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC" loc="47(DelugeC.FlashVolumeManagerC.SerialAMSenderC):/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC" loc="43(DelugeC.FlashVolumeManagerC.SerialAMReceiverC):/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP" loc="39(DelugeC.FlashVolumeManagerC.FlashVolumeManagerP):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FlashVolumeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.TimeoutTimer" loc="44(DelugeC.FlashVolumeManagerC.TimeoutTimer):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC" loc="39(DelugeC.DelugeManagerC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerC"/>
        <arguments>
          <value cst="I:84">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC" loc="47(DelugeC.DelugeManagerC.SerialAMSenderC):/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP):/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMReceiverC" loc="43(DelugeC.DelugeManagerC.SerialAMReceiverC):/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.Timer" loc="44(DelugeC.DelugeManagerC.Timer):/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeManagerP" loc="39(DelugeC.DelugeManagerC.DelugeManagerP):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeMetadataClientC" loc="37(DelugeC.DelugeManagerC.DelugeMetadataClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeManagerC.DelugeVolumeManagerClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.BlockStorageLockClientC" loc="37(DelugeC.DelugeManagerC.BlockStorageLockClientC):/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40417b18" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40417d30" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4041e010" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40423f20" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4042a160" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4042a388" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4042a578" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40471010" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40471238" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40471460" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40471650" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40757de8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40757de8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40754030" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40759c28" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40759c28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40760090" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40760090"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40760250" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4077b8f0" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4077b8f0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4077bd38" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4077bd38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4077ed68" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4077ed68"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407981d8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407981d8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40798440" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40798440"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407988b0" loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407988b0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40798b18" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40797010" loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40797010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40785bc8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40785bc8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407b5058" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407b5058"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407b52c0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407b52c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407b5730" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407b5730"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407b5998" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40811218" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40811440" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40811668" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40811858" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4093c720" loc="83:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40936670" loc="42:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ac9dd0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ac9dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b2b2f8" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b2b2f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b2b4b8" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b26570" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b26570"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b26730" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b33e70" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b33e70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b913a8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b913a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b91588" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40fe5540" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40fda120" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40fd8ba0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40ffe340" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x4103faf0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x4105fa28" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x4105b788" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x4104f010" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x4108d3d0" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x411675a8" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x411c45e8" loc="89:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x411bc528" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x411f13d8" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41220610" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41220610"/></type-var>
        </typedef>
        <constant name="key" ref="0x41220800" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41219780" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41219780"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x412b1d58" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x412ad010" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x412ad1f0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x412ad3f8" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x412ac8f8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x412acb08" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x412acce8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x412acef0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x412a9128" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x412b6668" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="39:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4138a5f0" loc="89:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41386870" loc="42:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x413ed950" loc="23:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x413ed950"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4149b120" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x414896b0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FlashVolumeManagerP" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeManagerC" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerC.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41509068" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerC.nc">
          <component-ref qname="DelugeManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeManagerP" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc" abstract="">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403de010" loc="58:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403de1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403dc300" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403dc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403dc4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403e89c8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403e89c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403de918" loc="46:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403de918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403deaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403e8268" loc="50:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403e8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403e8440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403e8520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403e8600"/>
        <function-ref name="actualMicro" scoped="" ref="0x403e86e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403e87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403ed218" loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403ed218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ed3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403e4d68" loc="44:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403e4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ed010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403ed620" loc="46:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403ed620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ed7f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403e3a08" loc="41:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403e3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e3be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403e3638" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403e3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e3810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403ef588" loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403ef588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ef760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403f4b10" loc="44:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403f4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4ce8"/>
        <function-ref name="isInput" scoped="" ref="0x403f4dc8"/>
        <function-ref name="toggle" scoped="" ref="0x403f4ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef010"/>
        <function-ref name="get" scoped="" ref="0x403ef0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef1d0"/>
        <function-ref name="set" scoped="" ref="0x403ef2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ef390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403ea5b8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403ea5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ea790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4041b210" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4041b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b888"/>
        <function-ref name="get" scoped="" ref="0x4041b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ba48"/>
        <function-ref name="set" scoped="" ref="0x4041bb28"/>
        <function-ref name="clr" scoped="" ref="0x4041bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40403750" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40403750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403928"/>
        <function-ref name="isInput" scoped="" ref="0x40403a08"/>
        <function-ref name="toggle" scoped="" ref="0x40403ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40403bc8"/>
        <function-ref name="get" scoped="" ref="0x40403ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403d88"/>
        <function-ref name="set" scoped="" ref="0x40403e68"/>
        <function-ref name="clr" scoped="" ref="0x4040c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40411ce8" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40411ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40410010"/>
        <function-ref name="toggle" scoped="" ref="0x404100f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404101d0"/>
        <function-ref name="get" scoped="" ref="0x404102b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410390"/>
        <function-ref name="set" scoped="" ref="0x40410470"/>
        <function-ref name="clr" scoped="" ref="0x40410550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40416ea8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40416ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404150c0"/>
        <function-ref name="isInput" scoped="" ref="0x404151a0"/>
        <function-ref name="toggle" scoped="" ref="0x40415280"/>
        <function-ref name="isOutput" scoped="" ref="0x40415360"/>
        <function-ref name="get" scoped="" ref="0x40415440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415520"/>
        <function-ref name="set" scoped="" ref="0x40415600"/>
        <function-ref name="clr" scoped="" ref="0x404156e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403fc2f0" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403fc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403fc688"/>
        <function-ref name="isOutput" scoped="" ref="0x403fc768"/>
        <function-ref name="get" scoped="" ref="0x403fc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fc928"/>
        <function-ref name="set" scoped="" ref="0x403fca08"/>
        <function-ref name="clr" scoped="" ref="0x403fcae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4040da98" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4040da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4040dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4040de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4040df10"/>
        <function-ref name="get" scoped="" ref="0x40416010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404160f0"/>
        <function-ref name="set" scoped="" ref="0x404161d0"/>
        <function-ref name="clr" scoped="" ref="0x404162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403fb750" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403fb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fb928"/>
        <function-ref name="isInput" scoped="" ref="0x403fba08"/>
        <function-ref name="toggle" scoped="" ref="0x403fbae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403fbbc8"/>
        <function-ref name="get" scoped="" ref="0x403fbca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fbd88"/>
        <function-ref name="set" scoped="" ref="0x403fbe68"/>
        <function-ref name="clr" scoped="" ref="0x403fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403feea8" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403feea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404070c0"/>
        <function-ref name="isInput" scoped="" ref="0x404071a0"/>
        <function-ref name="toggle" scoped="" ref="0x40407280"/>
        <function-ref name="isOutput" scoped="" ref="0x40407360"/>
        <function-ref name="get" scoped="" ref="0x40407440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407520"/>
        <function-ref name="set" scoped="" ref="0x40407600"/>
        <function-ref name="clr" scoped="" ref="0x404076e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4040b670" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4040b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040b848"/>
        <function-ref name="isInput" scoped="" ref="0x4040b928"/>
        <function-ref name="toggle" scoped="" ref="0x4040ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4040bae8"/>
        <function-ref name="get" scoped="" ref="0x4040bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040bca8"/>
        <function-ref name="set" scoped="" ref="0x4040bd88"/>
        <function-ref name="clr" scoped="" ref="0x4040be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4040fc08" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4040fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4040fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4040e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e0f0"/>
        <function-ref name="get" scoped="" ref="0x4040e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e2b0"/>
        <function-ref name="set" scoped="" ref="0x4040e390"/>
        <function-ref name="clr" scoped="" ref="0x4040e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403f8010" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f81e8"/>
        <function-ref name="isInput" scoped="" ref="0x403f82c8"/>
        <function-ref name="toggle" scoped="" ref="0x403f83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8488"/>
        <function-ref name="get" scoped="" ref="0x403f8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f8648"/>
        <function-ref name="set" scoped="" ref="0x403f8728"/>
        <function-ref name="clr" scoped="" ref="0x403f8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40402670" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40402670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40402848"/>
        <function-ref name="isInput" scoped="" ref="0x40402928"/>
        <function-ref name="toggle" scoped="" ref="0x40402a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40402ae8"/>
        <function-ref name="get" scoped="" ref="0x40402bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40402ca8"/>
        <function-ref name="set" scoped="" ref="0x40402d88"/>
        <function-ref name="clr" scoped="" ref="0x40402e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40406ce8" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40406ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40405010"/>
        <function-ref name="toggle" scoped="" ref="0x404050f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404051d0"/>
        <function-ref name="get" scoped="" ref="0x404052b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405390"/>
        <function-ref name="set" scoped="" ref="0x40405470"/>
        <function-ref name="clr" scoped="" ref="0x40405550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404094b0" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404094b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409688"/>
        <function-ref name="isInput" scoped="" ref="0x40409768"/>
        <function-ref name="toggle" scoped="" ref="0x40409848"/>
        <function-ref name="isOutput" scoped="" ref="0x40409928"/>
        <function-ref name="get" scoped="" ref="0x40409a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409ae8"/>
        <function-ref name="set" scoped="" ref="0x40409bc8"/>
        <function-ref name="clr" scoped="" ref="0x40409ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40413ce8" loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40413ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40412010"/>
        <function-ref name="toggle" scoped="" ref="0x404120f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404121d0"/>
        <function-ref name="get" scoped="" ref="0x404122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412390"/>
        <function-ref name="set" scoped="" ref="0x40412470"/>
        <function-ref name="clr" scoped="" ref="0x40412550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404192f0" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404194c8"/>
        <function-ref name="isInput" scoped="" ref="0x404195a8"/>
        <function-ref name="toggle" scoped="" ref="0x40419688"/>
        <function-ref name="isOutput" scoped="" ref="0x40419768"/>
        <function-ref name="get" scoped="" ref="0x40419848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419928"/>
        <function-ref name="set" scoped="" ref="0x40419a08"/>
        <function-ref name="clr" scoped="" ref="0x40419ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404088e0" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404088e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40408b98"/>
        <function-ref name="toggle" scoped="" ref="0x40408c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40408d58"/>
        <function-ref name="get" scoped="" ref="0x40408e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408f18"/>
        <function-ref name="set" scoped="" ref="0x40411010"/>
        <function-ref name="clr" scoped="" ref="0x404110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403f7ea8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403f7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f60c0"/>
        <function-ref name="isInput" scoped="" ref="0x403f61a0"/>
        <function-ref name="toggle" scoped="" ref="0x403f6280"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6360"/>
        <function-ref name="get" scoped="" ref="0x403f6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6520"/>
        <function-ref name="set" scoped="" ref="0x403f6600"/>
        <function-ref name="clr" scoped="" ref="0x403f66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40400590" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40400590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400768"/>
        <function-ref name="isInput" scoped="" ref="0x40400848"/>
        <function-ref name="toggle" scoped="" ref="0x40400928"/>
        <function-ref name="isOutput" scoped="" ref="0x40400a08"/>
        <function-ref name="get" scoped="" ref="0x40400ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400bc8"/>
        <function-ref name="set" scoped="" ref="0x40400ca8"/>
        <function-ref name="clr" scoped="" ref="0x40400d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4041be08" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4041be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a010"/>
        <function-ref name="isInput" scoped="" ref="0x4041a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4041a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a2b0"/>
        <function-ref name="get" scoped="" ref="0x4041a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a470"/>
        <function-ref name="set" scoped="" ref="0x4041a550"/>
        <function-ref name="clr" scoped="" ref="0x4041a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403ffa08" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403ffa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffbe0"/>
        <function-ref name="isInput" scoped="" ref="0x403ffcc0"/>
        <function-ref name="toggle" scoped="" ref="0x403ffda0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ffe80"/>
        <function-ref name="get" scoped="" ref="0x403fe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe0f0"/>
        <function-ref name="set" scoped="" ref="0x403fe1d0"/>
        <function-ref name="clr" scoped="" ref="0x403fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4040c210" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4040c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4040c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4040c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c688"/>
        <function-ref name="get" scoped="" ref="0x4040c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c848"/>
        <function-ref name="set" scoped="" ref="0x4040c928"/>
        <function-ref name="clr" scoped="" ref="0x4040ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40410750" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40410750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410928"/>
        <function-ref name="isInput" scoped="" ref="0x40410a08"/>
        <function-ref name="toggle" scoped="" ref="0x40410ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40410bc8"/>
        <function-ref name="get" scoped="" ref="0x40410ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410d88"/>
        <function-ref name="set" scoped="" ref="0x40410e68"/>
        <function-ref name="clr" scoped="" ref="0x4040f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404158e0" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404158e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40415b98"/>
        <function-ref name="toggle" scoped="" ref="0x40415c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40415d58"/>
        <function-ref name="get" scoped="" ref="0x40415e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415f18"/>
        <function-ref name="set" scoped="" ref="0x40413010"/>
        <function-ref name="clr" scoped="" ref="0x404130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403fcce8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403fcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fcec0"/>
        <function-ref name="isInput" scoped="" ref="0x403fb010"/>
        <function-ref name="toggle" scoped="" ref="0x403fb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fb1d0"/>
        <function-ref name="get" scoped="" ref="0x403fb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fb390"/>
        <function-ref name="set" scoped="" ref="0x403fb470"/>
        <function-ref name="clr" scoped="" ref="0x403fb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403fa210" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403fa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fa3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403fa4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403fa5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa688"/>
        <function-ref name="get" scoped="" ref="0x403fa768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fa848"/>
        <function-ref name="set" scoped="" ref="0x403fa928"/>
        <function-ref name="clr" scoped="" ref="0x403faa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404078e0" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404078e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40407b98"/>
        <function-ref name="toggle" scoped="" ref="0x40407c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40407d58"/>
        <function-ref name="get" scoped="" ref="0x40407e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407f18"/>
        <function-ref name="set" scoped="" ref="0x40406010"/>
        <function-ref name="clr" scoped="" ref="0x404060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4040a0a0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4040a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a278"/>
        <function-ref name="isInput" scoped="" ref="0x4040a358"/>
        <function-ref name="toggle" scoped="" ref="0x4040a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a518"/>
        <function-ref name="get" scoped="" ref="0x4040a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a6d8"/>
        <function-ref name="set" scoped="" ref="0x4040a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4040a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4040e670" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4040e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e848"/>
        <function-ref name="isInput" scoped="" ref="0x4040e928"/>
        <function-ref name="toggle" scoped="" ref="0x4040ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4040eae8"/>
        <function-ref name="get" scoped="" ref="0x4040ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040eca8"/>
        <function-ref name="set" scoped="" ref="0x4040ed88"/>
        <function-ref name="clr" scoped="" ref="0x4040ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403f8a08" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403f8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8be0"/>
        <function-ref name="isInput" scoped="" ref="0x403f8cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403f8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f8e80"/>
        <function-ref name="get" scoped="" ref="0x403f7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f70f0"/>
        <function-ref name="set" scoped="" ref="0x403f71d0"/>
        <function-ref name="clr" scoped="" ref="0x403f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404010a0" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404010a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404012f8"/>
        <function-ref name="isInput" scoped="" ref="0x404013d8"/>
        <function-ref name="toggle" scoped="" ref="0x404014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40401598"/>
        <function-ref name="get" scoped="" ref="0x40401678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401758"/>
        <function-ref name="set" scoped="" ref="0x40401838"/>
        <function-ref name="clr" scoped="" ref="0x40401918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40405750" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40405750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405928"/>
        <function-ref name="isInput" scoped="" ref="0x40405a08"/>
        <function-ref name="toggle" scoped="" ref="0x40405ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40405bc8"/>
        <function-ref name="get" scoped="" ref="0x40405ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405d88"/>
        <function-ref name="set" scoped="" ref="0x40405e68"/>
        <function-ref name="clr" scoped="" ref="0x40404010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40412750" loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40412750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412928"/>
        <function-ref name="isInput" scoped="" ref="0x40412a08"/>
        <function-ref name="toggle" scoped="" ref="0x40412ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40412bc8"/>
        <function-ref name="get" scoped="" ref="0x40412ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412d88"/>
        <function-ref name="set" scoped="" ref="0x40412e68"/>
        <function-ref name="clr" scoped="" ref="0x4041b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40404c08" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40404c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404ee0"/>
        <function-ref name="isInput" scoped="" ref="0x40403010"/>
        <function-ref name="toggle" scoped="" ref="0x404030f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404031d0"/>
        <function-ref name="get" scoped="" ref="0x404032b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403390"/>
        <function-ref name="set" scoped="" ref="0x40403470"/>
        <function-ref name="clr" scoped="" ref="0x40403550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404112f0" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404114c8"/>
        <function-ref name="isInput" scoped="" ref="0x404115a8"/>
        <function-ref name="toggle" scoped="" ref="0x40411688"/>
        <function-ref name="isOutput" scoped="" ref="0x40411768"/>
        <function-ref name="get" scoped="" ref="0x40411848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411928"/>
        <function-ref name="set" scoped="" ref="0x40411a08"/>
        <function-ref name="clr" scoped="" ref="0x40411ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404164b0" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404164b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416688"/>
        <function-ref name="isInput" scoped="" ref="0x40416768"/>
        <function-ref name="toggle" scoped="" ref="0x40416848"/>
        <function-ref name="isOutput" scoped="" ref="0x40416928"/>
        <function-ref name="get" scoped="" ref="0x40416a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416ae8"/>
        <function-ref name="set" scoped="" ref="0x40416bc8"/>
        <function-ref name="clr" scoped="" ref="0x40416ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40419ce8" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40419ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40418010"/>
        <function-ref name="toggle" scoped="" ref="0x404180f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404181d0"/>
        <function-ref name="get" scoped="" ref="0x404182b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418390"/>
        <function-ref name="set" scoped="" ref="0x40418470"/>
        <function-ref name="clr" scoped="" ref="0x40418550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403f68e0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403f68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403f6b98"/>
        <function-ref name="toggle" scoped="" ref="0x403f6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403f6d58"/>
        <function-ref name="get" scoped="" ref="0x403f6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f6f18"/>
        <function-ref name="set" scoped="" ref="0x403fc010"/>
        <function-ref name="clr" scoped="" ref="0x403fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403ff010" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ff2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ff3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff488"/>
        <function-ref name="get" scoped="" ref="0x403ff568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff648"/>
        <function-ref name="set" scoped="" ref="0x403ff728"/>
        <function-ref name="clr" scoped="" ref="0x403ff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4040d0a0" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4040d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d278"/>
        <function-ref name="isInput" scoped="" ref="0x4040d358"/>
        <function-ref name="toggle" scoped="" ref="0x4040d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d518"/>
        <function-ref name="get" scoped="" ref="0x4040d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d6d8"/>
        <function-ref name="set" scoped="" ref="0x4040d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4040d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403fe4b0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403fe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe688"/>
        <function-ref name="isInput" scoped="" ref="0x403fe768"/>
        <function-ref name="toggle" scoped="" ref="0x403fe848"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe928"/>
        <function-ref name="get" scoped="" ref="0x403fea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403feae8"/>
        <function-ref name="set" scoped="" ref="0x403febc8"/>
        <function-ref name="clr" scoped="" ref="0x403feca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4040cc08" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4040cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4040cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4040b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040b0f0"/>
        <function-ref name="get" scoped="" ref="0x4040b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040b2b0"/>
        <function-ref name="set" scoped="" ref="0x4040b390"/>
        <function-ref name="clr" scoped="" ref="0x4040b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4040f210" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4040f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4040f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4040f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f688"/>
        <function-ref name="get" scoped="" ref="0x4040f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f848"/>
        <function-ref name="set" scoped="" ref="0x4040f928"/>
        <function-ref name="clr" scoped="" ref="0x4040fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404132f0" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404134c8"/>
        <function-ref name="isInput" scoped="" ref="0x404135a8"/>
        <function-ref name="toggle" scoped="" ref="0x40413688"/>
        <function-ref name="isOutput" scoped="" ref="0x40413768"/>
        <function-ref name="get" scoped="" ref="0x40413848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413928"/>
        <function-ref name="set" scoped="" ref="0x40413a08"/>
        <function-ref name="clr" scoped="" ref="0x40413ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403f1558" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403f1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1730"/>
        <function-ref name="isInput" scoped="" ref="0x403f1810"/>
        <function-ref name="toggle" scoped="" ref="0x403f18f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f19d0"/>
        <function-ref name="get" scoped="" ref="0x403f1ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1b90"/>
        <function-ref name="set" scoped="" ref="0x403f1c70"/>
        <function-ref name="clr" scoped="" ref="0x403f1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403fac08" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403fac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fade0"/>
        <function-ref name="isInput" scoped="" ref="0x403faec0"/>
        <function-ref name="toggle" scoped="" ref="0x40402010"/>
        <function-ref name="isOutput" scoped="" ref="0x404020f0"/>
        <function-ref name="get" scoped="" ref="0x404021d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404022b0"/>
        <function-ref name="set" scoped="" ref="0x40402390"/>
        <function-ref name="clr" scoped="" ref="0x40402470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404062f0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404064c8"/>
        <function-ref name="isInput" scoped="" ref="0x404065a8"/>
        <function-ref name="toggle" scoped="" ref="0x40406688"/>
        <function-ref name="isOutput" scoped="" ref="0x40406768"/>
        <function-ref name="get" scoped="" ref="0x40406848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406928"/>
        <function-ref name="set" scoped="" ref="0x40406a08"/>
        <function-ref name="clr" scoped="" ref="0x40406ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4040aa98" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4040aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040ac70"/>
        <function-ref name="isInput" scoped="" ref="0x4040ad50"/>
        <function-ref name="toggle" scoped="" ref="0x4040ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x4040af10"/>
        <function-ref name="get" scoped="" ref="0x40409010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404090f0"/>
        <function-ref name="set" scoped="" ref="0x404091d0"/>
        <function-ref name="clr" scoped="" ref="0x404092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4041a830" loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4041a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041aa08"/>
        <function-ref name="isInput" scoped="" ref="0x4041aae8"/>
        <function-ref name="toggle" scoped="" ref="0x4041abc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041aca8"/>
        <function-ref name="get" scoped="" ref="0x4041ad88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ae68"/>
        <function-ref name="set" scoped="" ref="0x40419010"/>
        <function-ref name="clr" scoped="" ref="0x404190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40409ea8" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40409ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404080c0"/>
        <function-ref name="isInput" scoped="" ref="0x404081a0"/>
        <function-ref name="toggle" scoped="" ref="0x40408280"/>
        <function-ref name="isOutput" scoped="" ref="0x40408360"/>
        <function-ref name="get" scoped="" ref="0x40408440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408520"/>
        <function-ref name="set" scoped="" ref="0x40408600"/>
        <function-ref name="clr" scoped="" ref="0x404086e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x40404210" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x40404210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404043e8"/>
        <function-ref name="isInput" scoped="" ref="0x404044c8"/>
        <function-ref name="toggle" scoped="" ref="0x404045a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40404688"/>
        <function-ref name="get" scoped="" ref="0x40404768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404848"/>
        <function-ref name="set" scoped="" ref="0x40404928"/>
        <function-ref name="clr" scoped="" ref="0x40404a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403f74b0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403f74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f7688"/>
        <function-ref name="isInput" scoped="" ref="0x403f7768"/>
        <function-ref name="toggle" scoped="" ref="0x403f7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403f7928"/>
        <function-ref name="get" scoped="" ref="0x403f7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7ae8"/>
        <function-ref name="set" scoped="" ref="0x403f7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403f7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40401b18" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40401b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40401cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40401dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40401eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40400010"/>
        <function-ref name="get" scoped="" ref="0x404000f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404001d0"/>
        <function-ref name="set" scoped="" ref="0x404002b0"/>
        <function-ref name="clr" scoped="" ref="0x40400390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043f330" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f508"/>
        <function-ref name="isInput" scoped="" ref="0x4043f5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4043f6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f7a8"/>
        <function-ref name="get" scoped="" ref="0x4043f888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f968"/>
        <function-ref name="set" scoped="" ref="0x4043fa48"/>
        <function-ref name="clr" scoped="" ref="0x4043fb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40447030" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40447030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447208"/>
        <function-ref name="isInput" scoped="" ref="0x404472e8"/>
        <function-ref name="toggle" scoped="" ref="0x404473c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404474a8"/>
        <function-ref name="get" scoped="" ref="0x40447588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447668"/>
        <function-ref name="set" scoped="" ref="0x40447748"/>
        <function-ref name="clr" scoped="" ref="0x40447828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40440010" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40440010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404401e8"/>
        <function-ref name="isInput" scoped="" ref="0x404402c8"/>
        <function-ref name="toggle" scoped="" ref="0x404403a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40440488"/>
        <function-ref name="get" scoped="" ref="0x40440568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440648"/>
        <function-ref name="set" scoped="" ref="0x40440728"/>
        <function-ref name="clr" scoped="" ref="0x40440808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043fc88" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043fe60"/>
        <function-ref name="isInput" scoped="" ref="0x40448010"/>
        <function-ref name="toggle" scoped="" ref="0x404480f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404481d0"/>
        <function-ref name="get" scoped="" ref="0x404482b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448390"/>
        <function-ref name="set" scoped="" ref="0x40448470"/>
        <function-ref name="clr" scoped="" ref="0x40448550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40447988" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40447988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447b60"/>
        <function-ref name="isInput" scoped="" ref="0x40447c40"/>
        <function-ref name="toggle" scoped="" ref="0x40447d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40447e00"/>
        <function-ref name="get" scoped="" ref="0x40447ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446010"/>
        <function-ref name="set" scoped="" ref="0x404460f0"/>
        <function-ref name="clr" scoped="" ref="0x404461d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40440968" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40440968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440b40"/>
        <function-ref name="isInput" scoped="" ref="0x40440c20"/>
        <function-ref name="toggle" scoped="" ref="0x40440d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40440de0"/>
        <function-ref name="get" scoped="" ref="0x40440ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f010"/>
        <function-ref name="set" scoped="" ref="0x4043f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4043f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404486b0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404486b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448888"/>
        <function-ref name="isInput" scoped="" ref="0x40448968"/>
        <function-ref name="toggle" scoped="" ref="0x40448a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40448b28"/>
        <function-ref name="get" scoped="" ref="0x40448c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448ce8"/>
        <function-ref name="set" scoped="" ref="0x40448dc8"/>
        <function-ref name="clr" scoped="" ref="0x40448ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40446330" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40446330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446508"/>
        <function-ref name="isInput" scoped="" ref="0x404465e8"/>
        <function-ref name="toggle" scoped="" ref="0x404466c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404467a8"/>
        <function-ref name="get" scoped="" ref="0x40446888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446968"/>
        <function-ref name="set" scoped="" ref="0x40446a48"/>
        <function-ref name="clr" scoped="" ref="0x40446b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4154e6c0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4154e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4154e898"/>
        <function-ref name="isInput" scoped="" ref="0x4154e978"/>
        <function-ref name="toggle" scoped="" ref="0x4154ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x4154eb38"/>
        <function-ref name="get" scoped="" ref="0x4154ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4154ecf8"/>
        <function-ref name="set" scoped="" ref="0x4154edd8"/>
        <function-ref name="clr" scoped="" ref="0x4154eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4154c0b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4154c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4154c288"/>
        <function-ref name="isInput" scoped="" ref="0x4154c368"/>
        <function-ref name="toggle" scoped="" ref="0x4154c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4154c528"/>
        <function-ref name="get" scoped="" ref="0x4154c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4154c6e8"/>
        <function-ref name="set" scoped="" ref="0x4154c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4154c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4154ba88" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4154ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4154bc60"/>
        <function-ref name="isInput" scoped="" ref="0x4154bd40"/>
        <function-ref name="toggle" scoped="" ref="0x4154be20"/>
        <function-ref name="isOutput" scoped="" ref="0x4154bf00"/>
        <function-ref name="get" scoped="" ref="0x4154a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4154a0f0"/>
        <function-ref name="set" scoped="" ref="0x4154a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4154a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41549538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41549538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41549710"/>
        <function-ref name="isInput" scoped="" ref="0x415497f0"/>
        <function-ref name="toggle" scoped="" ref="0x415498d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415499b0"/>
        <function-ref name="get" scoped="" ref="0x41549a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41549b70"/>
        <function-ref name="set" scoped="" ref="0x41549c50"/>
        <function-ref name="clr" scoped="" ref="0x41549d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41547010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41547010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415471e8"/>
        <function-ref name="isInput" scoped="" ref="0x415472c8"/>
        <function-ref name="toggle" scoped="" ref="0x415473a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41547488"/>
        <function-ref name="get" scoped="" ref="0x41547568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41547648"/>
        <function-ref name="set" scoped="" ref="0x41547728"/>
        <function-ref name="clr" scoped="" ref="0x41547808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415469e8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415469e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41546bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41546ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41546d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41546e60"/>
        <function-ref name="get" scoped="" ref="0x41545010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415450f0"/>
        <function-ref name="set" scoped="" ref="0x415451d0"/>
        <function-ref name="clr" scoped="" ref="0x415452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41544538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41544538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41544710"/>
        <function-ref name="isInput" scoped="" ref="0x415447f0"/>
        <function-ref name="toggle" scoped="" ref="0x415448d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415449b0"/>
        <function-ref name="get" scoped="" ref="0x41544a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41544b70"/>
        <function-ref name="set" scoped="" ref="0x41544c50"/>
        <function-ref name="clr" scoped="" ref="0x41544d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41595010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41595010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415951e8"/>
        <function-ref name="isInput" scoped="" ref="0x415952c8"/>
        <function-ref name="toggle" scoped="" ref="0x415953a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41595488"/>
        <function-ref name="get" scoped="" ref="0x41595568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41595648"/>
        <function-ref name="set" scoped="" ref="0x41595728"/>
        <function-ref name="clr" scoped="" ref="0x41595808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4044cba8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4044cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044cd80"/>
        <function-ref name="isInput" scoped="" ref="0x4044ce60"/>
        <function-ref name="toggle" scoped="" ref="0x4044a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a0f0"/>
        <function-ref name="get" scoped="" ref="0x4044a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a2b0"/>
        <function-ref name="set" scoped="" ref="0x4044a390"/>
        <function-ref name="clr" scoped="" ref="0x4044a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40449890" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40449890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449a68"/>
        <function-ref name="isInput" scoped="" ref="0x40449b48"/>
        <function-ref name="toggle" scoped="" ref="0x40449c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40449d08"/>
        <function-ref name="get" scoped="" ref="0x40449de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449ec8"/>
        <function-ref name="set" scoped="" ref="0x40452010"/>
        <function-ref name="clr" scoped="" ref="0x404520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4044d888" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4044d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044da60"/>
        <function-ref name="isInput" scoped="" ref="0x4044db40"/>
        <function-ref name="toggle" scoped="" ref="0x4044dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x4044dd00"/>
        <function-ref name="get" scoped="" ref="0x4044dde0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044dec0"/>
        <function-ref name="set" scoped="" ref="0x4044c010"/>
        <function-ref name="clr" scoped="" ref="0x4044c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4044a5d0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4044a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4044a888"/>
        <function-ref name="toggle" scoped="" ref="0x4044a968"/>
        <function-ref name="isOutput" scoped="" ref="0x4044aa48"/>
        <function-ref name="get" scoped="" ref="0x4044ab28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ac08"/>
        <function-ref name="set" scoped="" ref="0x4044ace8"/>
        <function-ref name="clr" scoped="" ref="0x4044adc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40452250" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40452250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452428"/>
        <function-ref name="isInput" scoped="" ref="0x40452508"/>
        <function-ref name="toggle" scoped="" ref="0x404525e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404526c8"/>
        <function-ref name="get" scoped="" ref="0x404527a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452888"/>
        <function-ref name="set" scoped="" ref="0x40452968"/>
        <function-ref name="clr" scoped="" ref="0x40452a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4044c250" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4044c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c428"/>
        <function-ref name="isInput" scoped="" ref="0x4044c508"/>
        <function-ref name="toggle" scoped="" ref="0x4044c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c6c8"/>
        <function-ref name="get" scoped="" ref="0x4044c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c888"/>
        <function-ref name="set" scoped="" ref="0x4044c968"/>
        <function-ref name="clr" scoped="" ref="0x4044ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4044af28" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4044af28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449110"/>
        <function-ref name="isInput" scoped="" ref="0x404491f0"/>
        <function-ref name="toggle" scoped="" ref="0x404492d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404493b0"/>
        <function-ref name="get" scoped="" ref="0x40449490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449570"/>
        <function-ref name="set" scoped="" ref="0x40449650"/>
        <function-ref name="clr" scoped="" ref="0x40449730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40452ba8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40452ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452d80"/>
        <function-ref name="isInput" scoped="" ref="0x40452e60"/>
        <function-ref name="toggle" scoped="" ref="0x40451010"/>
        <function-ref name="isOutput" scoped="" ref="0x404510f0"/>
        <function-ref name="get" scoped="" ref="0x404511d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404512b0"/>
        <function-ref name="set" scoped="" ref="0x40451390"/>
        <function-ref name="clr" scoped="" ref="0x40451470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415b7418" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415b7418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415b75f0"/>
        <function-ref name="isInput" scoped="" ref="0x415b76d0"/>
        <function-ref name="toggle" scoped="" ref="0x415b77b0"/>
        <function-ref name="isOutput" scoped="" ref="0x415b7890"/>
        <function-ref name="get" scoped="" ref="0x415b7970"/>
        <function-ref name="makeOutput" scoped="" ref="0x415b7a50"/>
        <function-ref name="set" scoped="" ref="0x415b7b30"/>
        <function-ref name="clr" scoped="" ref="0x415b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415b6de0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415b6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415b5010"/>
        <function-ref name="isInput" scoped="" ref="0x415b50f0"/>
        <function-ref name="toggle" scoped="" ref="0x415b51d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415b52b0"/>
        <function-ref name="get" scoped="" ref="0x415b5390"/>
        <function-ref name="makeOutput" scoped="" ref="0x415b5470"/>
        <function-ref name="set" scoped="" ref="0x415b5550"/>
        <function-ref name="clr" scoped="" ref="0x415b5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415b47f8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415b47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415b49d0"/>
        <function-ref name="isInput" scoped="" ref="0x415b4ab0"/>
        <function-ref name="toggle" scoped="" ref="0x415b4b90"/>
        <function-ref name="isOutput" scoped="" ref="0x415b4c70"/>
        <function-ref name="get" scoped="" ref="0x415b4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x415b4e30"/>
        <function-ref name="set" scoped="" ref="0x415b4f10"/>
        <function-ref name="clr" scoped="" ref="0x415b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415b2228" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415b2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415b2400"/>
        <function-ref name="isInput" scoped="" ref="0x415b24e0"/>
        <function-ref name="toggle" scoped="" ref="0x415b25c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415b26a0"/>
        <function-ref name="get" scoped="" ref="0x415b2780"/>
        <function-ref name="makeOutput" scoped="" ref="0x415b2860"/>
        <function-ref name="set" scoped="" ref="0x415b2940"/>
        <function-ref name="clr" scoped="" ref="0x415b2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415b1c08" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415b1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415b1de0"/>
        <function-ref name="isInput" scoped="" ref="0x415b1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x415b0010"/>
        <function-ref name="isOutput" scoped="" ref="0x415b00f0"/>
        <function-ref name="get" scoped="" ref="0x415b01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415b02b0"/>
        <function-ref name="set" scoped="" ref="0x415b0390"/>
        <function-ref name="clr" scoped="" ref="0x415b0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415af6c0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415af6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415af898"/>
        <function-ref name="isInput" scoped="" ref="0x415af978"/>
        <function-ref name="toggle" scoped="" ref="0x415afa58"/>
        <function-ref name="isOutput" scoped="" ref="0x415afb38"/>
        <function-ref name="get" scoped="" ref="0x415afc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x415afcf8"/>
        <function-ref name="set" scoped="" ref="0x415afdd8"/>
        <function-ref name="clr" scoped="" ref="0x415afeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415ad0b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415ad0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415ad288"/>
        <function-ref name="isInput" scoped="" ref="0x415ad368"/>
        <function-ref name="toggle" scoped="" ref="0x415ad448"/>
        <function-ref name="isOutput" scoped="" ref="0x415ad528"/>
        <function-ref name="get" scoped="" ref="0x415ad608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ad6e8"/>
        <function-ref name="set" scoped="" ref="0x415ad7c8"/>
        <function-ref name="clr" scoped="" ref="0x415ad8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415aca88" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415aca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415acc60"/>
        <function-ref name="isInput" scoped="" ref="0x415acd40"/>
        <function-ref name="toggle" scoped="" ref="0x415ace20"/>
        <function-ref name="isOutput" scoped="" ref="0x415acf00"/>
        <function-ref name="get" scoped="" ref="0x415ab010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ab0f0"/>
        <function-ref name="set" scoped="" ref="0x415ab1d0"/>
        <function-ref name="clr" scoped="" ref="0x415ab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404574f0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404574f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404576c8"/>
        <function-ref name="isInput" scoped="" ref="0x404577a8"/>
        <function-ref name="toggle" scoped="" ref="0x40457888"/>
        <function-ref name="isOutput" scoped="" ref="0x40457968"/>
        <function-ref name="get" scoped="" ref="0x40457a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457b28"/>
        <function-ref name="set" scoped="" ref="0x40457c08"/>
        <function-ref name="clr" scoped="" ref="0x40457ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40455170" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40455170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455348"/>
        <function-ref name="isInput" scoped="" ref="0x40455428"/>
        <function-ref name="toggle" scoped="" ref="0x40455508"/>
        <function-ref name="isOutput" scoped="" ref="0x404555e8"/>
        <function-ref name="get" scoped="" ref="0x404556c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404557a8"/>
        <function-ref name="set" scoped="" ref="0x40455888"/>
        <function-ref name="clr" scoped="" ref="0x40455968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4044e228" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4044e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044e400"/>
        <function-ref name="isInput" scoped="" ref="0x4044e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4044e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044e6a0"/>
        <function-ref name="get" scoped="" ref="0x4044e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044e860"/>
        <function-ref name="set" scoped="" ref="0x4044e940"/>
        <function-ref name="clr" scoped="" ref="0x4044ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40457e48" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40457e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40456050"/>
        <function-ref name="isInput" scoped="" ref="0x40456130"/>
        <function-ref name="toggle" scoped="" ref="0x40456210"/>
        <function-ref name="isOutput" scoped="" ref="0x404562f0"/>
        <function-ref name="get" scoped="" ref="0x404563d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404564b0"/>
        <function-ref name="set" scoped="" ref="0x40456590"/>
        <function-ref name="clr" scoped="" ref="0x40456670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40455ac8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40455ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40455d80"/>
        <function-ref name="toggle" scoped="" ref="0x40455e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40453010"/>
        <function-ref name="get" scoped="" ref="0x404530f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404531d0"/>
        <function-ref name="set" scoped="" ref="0x404532b0"/>
        <function-ref name="clr" scoped="" ref="0x40453390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4044eb80" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4044eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044ed58"/>
        <function-ref name="isInput" scoped="" ref="0x4044ee38"/>
        <function-ref name="toggle" scoped="" ref="0x4044ef18"/>
        <function-ref name="isOutput" scoped="" ref="0x40457010"/>
        <function-ref name="get" scoped="" ref="0x404570f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404571d0"/>
        <function-ref name="set" scoped="" ref="0x404572b0"/>
        <function-ref name="clr" scoped="" ref="0x40457390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404567d0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404567d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404569a8"/>
        <function-ref name="isInput" scoped="" ref="0x40456a88"/>
        <function-ref name="toggle" scoped="" ref="0x40456b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40456c48"/>
        <function-ref name="get" scoped="" ref="0x40456d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40456e08"/>
        <function-ref name="set" scoped="" ref="0x40456ee8"/>
        <function-ref name="clr" scoped="" ref="0x40455010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404534f0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404534f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404536c8"/>
        <function-ref name="isInput" scoped="" ref="0x404537a8"/>
        <function-ref name="toggle" scoped="" ref="0x40453888"/>
        <function-ref name="isOutput" scoped="" ref="0x40453968"/>
        <function-ref name="get" scoped="" ref="0x40453a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453b28"/>
        <function-ref name="set" scoped="" ref="0x40453c08"/>
        <function-ref name="clr" scoped="" ref="0x40453ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415d3de8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415d3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415cf010"/>
        <function-ref name="isInput" scoped="" ref="0x415cf0f0"/>
        <function-ref name="toggle" scoped="" ref="0x415cf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415cf2b0"/>
        <function-ref name="get" scoped="" ref="0x415cf390"/>
        <function-ref name="makeOutput" scoped="" ref="0x415cf470"/>
        <function-ref name="set" scoped="" ref="0x415cf550"/>
        <function-ref name="clr" scoped="" ref="0x415cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415ce7f8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415ce7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415ce9d0"/>
        <function-ref name="isInput" scoped="" ref="0x415ceab0"/>
        <function-ref name="toggle" scoped="" ref="0x415ceb90"/>
        <function-ref name="isOutput" scoped="" ref="0x415cec70"/>
        <function-ref name="get" scoped="" ref="0x415ced50"/>
        <function-ref name="makeOutput" scoped="" ref="0x415cee30"/>
        <function-ref name="set" scoped="" ref="0x415cef10"/>
        <function-ref name="clr" scoped="" ref="0x415cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415cc228" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415cc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415cc400"/>
        <function-ref name="isInput" scoped="" ref="0x415cc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x415cc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415cc6a0"/>
        <function-ref name="get" scoped="" ref="0x415cc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x415cc860"/>
        <function-ref name="set" scoped="" ref="0x415cc940"/>
        <function-ref name="clr" scoped="" ref="0x415cca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415cbc08" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415cbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415cbde0"/>
        <function-ref name="isInput" scoped="" ref="0x415cbec0"/>
        <function-ref name="toggle" scoped="" ref="0x415ca010"/>
        <function-ref name="isOutput" scoped="" ref="0x415ca0f0"/>
        <function-ref name="get" scoped="" ref="0x415ca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ca2b0"/>
        <function-ref name="set" scoped="" ref="0x415ca390"/>
        <function-ref name="clr" scoped="" ref="0x415ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415c96c0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415c96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415c9898"/>
        <function-ref name="isInput" scoped="" ref="0x415c9978"/>
        <function-ref name="toggle" scoped="" ref="0x415c9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x415c9b38"/>
        <function-ref name="get" scoped="" ref="0x415c9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x415c9cf8"/>
        <function-ref name="set" scoped="" ref="0x415c9dd8"/>
        <function-ref name="clr" scoped="" ref="0x415c9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415c70b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415c70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415c7288"/>
        <function-ref name="isInput" scoped="" ref="0x415c7368"/>
        <function-ref name="toggle" scoped="" ref="0x415c7448"/>
        <function-ref name="isOutput" scoped="" ref="0x415c7528"/>
        <function-ref name="get" scoped="" ref="0x415c7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415c76e8"/>
        <function-ref name="set" scoped="" ref="0x415c77c8"/>
        <function-ref name="clr" scoped="" ref="0x415c78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415c6a88" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415c6c60"/>
        <function-ref name="isInput" scoped="" ref="0x415c6d40"/>
        <function-ref name="toggle" scoped="" ref="0x415c6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x415c6f00"/>
        <function-ref name="get" scoped="" ref="0x415c5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415c50f0"/>
        <function-ref name="set" scoped="" ref="0x415c51d0"/>
        <function-ref name="clr" scoped="" ref="0x415c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415c4538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415c4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415c4710"/>
        <function-ref name="isInput" scoped="" ref="0x415c47f0"/>
        <function-ref name="toggle" scoped="" ref="0x415c48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415c49b0"/>
        <function-ref name="get" scoped="" ref="0x415c4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415c4b70"/>
        <function-ref name="set" scoped="" ref="0x415c4c50"/>
        <function-ref name="clr" scoped="" ref="0x415c4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40459e48" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40459e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458050"/>
        <function-ref name="isInput" scoped="" ref="0x40458130"/>
        <function-ref name="toggle" scoped="" ref="0x40458210"/>
        <function-ref name="isOutput" scoped="" ref="0x404582f0"/>
        <function-ref name="get" scoped="" ref="0x404583d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404584b0"/>
        <function-ref name="set" scoped="" ref="0x40458590"/>
        <function-ref name="clr" scoped="" ref="0x40458670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40461ac8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40461ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40461d80"/>
        <function-ref name="toggle" scoped="" ref="0x40461e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40460010"/>
        <function-ref name="get" scoped="" ref="0x404600f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404601d0"/>
        <function-ref name="set" scoped="" ref="0x404602b0"/>
        <function-ref name="clr" scoped="" ref="0x40460390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4045ab00" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4045ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045acd8"/>
        <function-ref name="isInput" scoped="" ref="0x4045adb8"/>
        <function-ref name="toggle" scoped="" ref="0x4045ae98"/>
        <function-ref name="isOutput" scoped="" ref="0x40459010"/>
        <function-ref name="get" scoped="" ref="0x404590f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404591d0"/>
        <function-ref name="set" scoped="" ref="0x404592b0"/>
        <function-ref name="clr" scoped="" ref="0x40459390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404587d0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404587d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404589a8"/>
        <function-ref name="isInput" scoped="" ref="0x40458a88"/>
        <function-ref name="toggle" scoped="" ref="0x40458b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40458c48"/>
        <function-ref name="get" scoped="" ref="0x40458d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458e08"/>
        <function-ref name="set" scoped="" ref="0x40458ee8"/>
        <function-ref name="clr" scoped="" ref="0x40461010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404604f0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404604f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404606c8"/>
        <function-ref name="isInput" scoped="" ref="0x404607a8"/>
        <function-ref name="toggle" scoped="" ref="0x40460888"/>
        <function-ref name="isOutput" scoped="" ref="0x40460968"/>
        <function-ref name="get" scoped="" ref="0x40460a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460b28"/>
        <function-ref name="set" scoped="" ref="0x40460c08"/>
        <function-ref name="clr" scoped="" ref="0x40460ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404594f0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404594f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404596c8"/>
        <function-ref name="isInput" scoped="" ref="0x404597a8"/>
        <function-ref name="toggle" scoped="" ref="0x40459888"/>
        <function-ref name="isOutput" scoped="" ref="0x40459968"/>
        <function-ref name="get" scoped="" ref="0x40459a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459b28"/>
        <function-ref name="set" scoped="" ref="0x40459c08"/>
        <function-ref name="clr" scoped="" ref="0x40459ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40461170" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40461170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461348"/>
        <function-ref name="isInput" scoped="" ref="0x40461428"/>
        <function-ref name="toggle" scoped="" ref="0x40461508"/>
        <function-ref name="isOutput" scoped="" ref="0x404615e8"/>
        <function-ref name="get" scoped="" ref="0x404616c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404617a8"/>
        <function-ref name="set" scoped="" ref="0x40461888"/>
        <function-ref name="clr" scoped="" ref="0x40461968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40460e48" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40460e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f050"/>
        <function-ref name="isInput" scoped="" ref="0x4045f130"/>
        <function-ref name="toggle" scoped="" ref="0x4045f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f2f0"/>
        <function-ref name="get" scoped="" ref="0x4045f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f4b0"/>
        <function-ref name="set" scoped="" ref="0x4045f590"/>
        <function-ref name="clr" scoped="" ref="0x4045f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415e7938" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415e7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415e7b10"/>
        <function-ref name="isInput" scoped="" ref="0x415e7bf0"/>
        <function-ref name="toggle" scoped="" ref="0x415e7cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x415e7db0"/>
        <function-ref name="get" scoped="" ref="0x415e7e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415e6010"/>
        <function-ref name="set" scoped="" ref="0x415e60f0"/>
        <function-ref name="clr" scoped="" ref="0x415e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416363b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416363b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41636588"/>
        <function-ref name="isInput" scoped="" ref="0x41636668"/>
        <function-ref name="toggle" scoped="" ref="0x41636748"/>
        <function-ref name="isOutput" scoped="" ref="0x41636828"/>
        <function-ref name="get" scoped="" ref="0x41636908"/>
        <function-ref name="makeOutput" scoped="" ref="0x416369e8"/>
        <function-ref name="set" scoped="" ref="0x41636ac8"/>
        <function-ref name="clr" scoped="" ref="0x41636ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41635d70" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41635d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41634010"/>
        <function-ref name="isInput" scoped="" ref="0x416340f0"/>
        <function-ref name="toggle" scoped="" ref="0x416341d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416342b0"/>
        <function-ref name="get" scoped="" ref="0x41634390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41634470"/>
        <function-ref name="set" scoped="" ref="0x41634550"/>
        <function-ref name="clr" scoped="" ref="0x41634630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416337f8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416337f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416339d0"/>
        <function-ref name="isInput" scoped="" ref="0x41633ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41633b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41633c70"/>
        <function-ref name="get" scoped="" ref="0x41633d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41633e30"/>
        <function-ref name="set" scoped="" ref="0x41633f10"/>
        <function-ref name="clr" scoped="" ref="0x41632010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41631228" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41631228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41631400"/>
        <function-ref name="isInput" scoped="" ref="0x416314e0"/>
        <function-ref name="toggle" scoped="" ref="0x416315c0"/>
        <function-ref name="isOutput" scoped="" ref="0x416316a0"/>
        <function-ref name="get" scoped="" ref="0x41631780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41631860"/>
        <function-ref name="set" scoped="" ref="0x41631940"/>
        <function-ref name="clr" scoped="" ref="0x41631a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41630c08" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41630c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41630de0"/>
        <function-ref name="isInput" scoped="" ref="0x41630ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4162f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4162f0f0"/>
        <function-ref name="get" scoped="" ref="0x4162f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4162f2b0"/>
        <function-ref name="set" scoped="" ref="0x4162f390"/>
        <function-ref name="clr" scoped="" ref="0x4162f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4162e6c0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4162e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4162e898"/>
        <function-ref name="isInput" scoped="" ref="0x4162e978"/>
        <function-ref name="toggle" scoped="" ref="0x4162ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x4162eb38"/>
        <function-ref name="get" scoped="" ref="0x4162ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4162ecf8"/>
        <function-ref name="set" scoped="" ref="0x4162edd8"/>
        <function-ref name="clr" scoped="" ref="0x4162eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4162c0b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4162c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4162c288"/>
        <function-ref name="isInput" scoped="" ref="0x4162c368"/>
        <function-ref name="toggle" scoped="" ref="0x4162c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4162c528"/>
        <function-ref name="get" scoped="" ref="0x4162c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4162c6e8"/>
        <function-ref name="set" scoped="" ref="0x4162c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4162c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404646b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404646b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464888"/>
        <function-ref name="isInput" scoped="" ref="0x40464968"/>
        <function-ref name="toggle" scoped="" ref="0x40464a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40464b28"/>
        <function-ref name="get" scoped="" ref="0x40464c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464ce8"/>
        <function-ref name="set" scoped="" ref="0x40464dc8"/>
        <function-ref name="clr" scoped="" ref="0x40464ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40462330" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40462330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462508"/>
        <function-ref name="isInput" scoped="" ref="0x404625e8"/>
        <function-ref name="toggle" scoped="" ref="0x404626c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404627a8"/>
        <function-ref name="get" scoped="" ref="0x40462888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462968"/>
        <function-ref name="set" scoped="" ref="0x40462a48"/>
        <function-ref name="clr" scoped="" ref="0x40462b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404653d8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404653d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404655b0"/>
        <function-ref name="isInput" scoped="" ref="0x40465690"/>
        <function-ref name="toggle" scoped="" ref="0x40465770"/>
        <function-ref name="isOutput" scoped="" ref="0x40465850"/>
        <function-ref name="get" scoped="" ref="0x40465930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465a10"/>
        <function-ref name="set" scoped="" ref="0x40465af0"/>
        <function-ref name="clr" scoped="" ref="0x40465bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40463030" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40463030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463208"/>
        <function-ref name="isInput" scoped="" ref="0x404632e8"/>
        <function-ref name="toggle" scoped="" ref="0x404633c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404634a8"/>
        <function-ref name="get" scoped="" ref="0x40463588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463668"/>
        <function-ref name="set" scoped="" ref="0x40463748"/>
        <function-ref name="clr" scoped="" ref="0x40463828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40462c88" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40462c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462e60"/>
        <function-ref name="isInput" scoped="" ref="0x4046b010"/>
        <function-ref name="toggle" scoped="" ref="0x4046b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b1d0"/>
        <function-ref name="get" scoped="" ref="0x4046b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b390"/>
        <function-ref name="set" scoped="" ref="0x4046b470"/>
        <function-ref name="clr" scoped="" ref="0x4046b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40465d30" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40465d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465f08"/>
        <function-ref name="isInput" scoped="" ref="0x40464010"/>
        <function-ref name="toggle" scoped="" ref="0x404640f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404641d0"/>
        <function-ref name="get" scoped="" ref="0x404642b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464390"/>
        <function-ref name="set" scoped="" ref="0x40464470"/>
        <function-ref name="clr" scoped="" ref="0x40464550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40463988" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40463988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463b60"/>
        <function-ref name="isInput" scoped="" ref="0x40463c40"/>
        <function-ref name="toggle" scoped="" ref="0x40463d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40463e00"/>
        <function-ref name="get" scoped="" ref="0x40463ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462010"/>
        <function-ref name="set" scoped="" ref="0x404620f0"/>
        <function-ref name="clr" scoped="" ref="0x404621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4046b6b0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4046b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b888"/>
        <function-ref name="isInput" scoped="" ref="0x4046b968"/>
        <function-ref name="toggle" scoped="" ref="0x4046ba48"/>
        <function-ref name="isOutput" scoped="" ref="0x4046bb28"/>
        <function-ref name="get" scoped="" ref="0x4046bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046bce8"/>
        <function-ref name="set" scoped="" ref="0x4046bdc8"/>
        <function-ref name="clr" scoped="" ref="0x4046bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41652538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41652538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41652710"/>
        <function-ref name="isInput" scoped="" ref="0x416527f0"/>
        <function-ref name="toggle" scoped="" ref="0x416528d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416529b0"/>
        <function-ref name="get" scoped="" ref="0x41652a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41652b70"/>
        <function-ref name="set" scoped="" ref="0x41652c50"/>
        <function-ref name="clr" scoped="" ref="0x41652d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41650010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41650010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416501e8"/>
        <function-ref name="isInput" scoped="" ref="0x416502c8"/>
        <function-ref name="toggle" scoped="" ref="0x416503a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41650488"/>
        <function-ref name="get" scoped="" ref="0x41650568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41650648"/>
        <function-ref name="set" scoped="" ref="0x41650728"/>
        <function-ref name="clr" scoped="" ref="0x41650808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4164f9e8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4164f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4164fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4164fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4164fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4164fe60"/>
        <function-ref name="get" scoped="" ref="0x4164e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4164e0f0"/>
        <function-ref name="set" scoped="" ref="0x4164e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4164e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4164d538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4164d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4164d710"/>
        <function-ref name="isInput" scoped="" ref="0x4164d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4164d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4164d9b0"/>
        <function-ref name="get" scoped="" ref="0x4164da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4164db70"/>
        <function-ref name="set" scoped="" ref="0x4164dc50"/>
        <function-ref name="clr" scoped="" ref="0x4164dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4164b010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4164b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4164b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4164b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4164b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4164b488"/>
        <function-ref name="get" scoped="" ref="0x4164b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4164b648"/>
        <function-ref name="set" scoped="" ref="0x4164b728"/>
        <function-ref name="clr" scoped="" ref="0x4164b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4164a9e8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4164a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4164abc0"/>
        <function-ref name="isInput" scoped="" ref="0x4164aca0"/>
        <function-ref name="toggle" scoped="" ref="0x4164ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x4164ae60"/>
        <function-ref name="get" scoped="" ref="0x41648010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416480f0"/>
        <function-ref name="set" scoped="" ref="0x416481d0"/>
        <function-ref name="clr" scoped="" ref="0x416482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41647538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41647538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41647710"/>
        <function-ref name="isInput" scoped="" ref="0x416477f0"/>
        <function-ref name="toggle" scoped="" ref="0x416478d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416479b0"/>
        <function-ref name="get" scoped="" ref="0x41647a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41647b70"/>
        <function-ref name="set" scoped="" ref="0x41647c50"/>
        <function-ref name="clr" scoped="" ref="0x41647d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41645010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41645010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416451e8"/>
        <function-ref name="isInput" scoped="" ref="0x416452c8"/>
        <function-ref name="toggle" scoped="" ref="0x416453a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41645488"/>
        <function-ref name="get" scoped="" ref="0x41645568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41645648"/>
        <function-ref name="set" scoped="" ref="0x41645728"/>
        <function-ref name="clr" scoped="" ref="0x41645808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40467f28" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40467f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f110"/>
        <function-ref name="isInput" scoped="" ref="0x4046f1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4046f2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f3b0"/>
        <function-ref name="get" scoped="" ref="0x4046f490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f570"/>
        <function-ref name="set" scoped="" ref="0x4046f650"/>
        <function-ref name="clr" scoped="" ref="0x4046f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4046eba8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4046eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ed80"/>
        <function-ref name="isInput" scoped="" ref="0x4046ee60"/>
        <function-ref name="toggle" scoped="" ref="0x4046d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d0f0"/>
        <function-ref name="get" scoped="" ref="0x4046d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d2b0"/>
        <function-ref name="set" scoped="" ref="0x4046d390"/>
        <function-ref name="clr" scoped="" ref="0x4046d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40468c28" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40468c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468e00"/>
        <function-ref name="isInput" scoped="" ref="0x40468ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40467010"/>
        <function-ref name="isOutput" scoped="" ref="0x404670f0"/>
        <function-ref name="get" scoped="" ref="0x404671d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404672b0"/>
        <function-ref name="set" scoped="" ref="0x40467390"/>
        <function-ref name="clr" scoped="" ref="0x40467470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4046f890" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4046f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fa68"/>
        <function-ref name="isInput" scoped="" ref="0x4046fb48"/>
        <function-ref name="toggle" scoped="" ref="0x4046fc28"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fd08"/>
        <function-ref name="get" scoped="" ref="0x4046fde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046fec8"/>
        <function-ref name="set" scoped="" ref="0x4046e010"/>
        <function-ref name="clr" scoped="" ref="0x4046e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4046d5d0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4046d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4046d888"/>
        <function-ref name="toggle" scoped="" ref="0x4046d968"/>
        <function-ref name="isOutput" scoped="" ref="0x4046da48"/>
        <function-ref name="get" scoped="" ref="0x4046db28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046dc08"/>
        <function-ref name="set" scoped="" ref="0x4046dce8"/>
        <function-ref name="clr" scoped="" ref="0x4046ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404675d0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404675d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404677a8"/>
        <function-ref name="isInput" scoped="" ref="0x40467888"/>
        <function-ref name="toggle" scoped="" ref="0x40467968"/>
        <function-ref name="isOutput" scoped="" ref="0x40467a48"/>
        <function-ref name="get" scoped="" ref="0x40467b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467c08"/>
        <function-ref name="set" scoped="" ref="0x40467ce8"/>
        <function-ref name="clr" scoped="" ref="0x40467dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4046e250" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4046e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e428"/>
        <function-ref name="isInput" scoped="" ref="0x4046e508"/>
        <function-ref name="toggle" scoped="" ref="0x4046e5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e6c8"/>
        <function-ref name="get" scoped="" ref="0x4046e7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e888"/>
        <function-ref name="set" scoped="" ref="0x4046e968"/>
        <function-ref name="clr" scoped="" ref="0x4046ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4046df28" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4046df28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c110"/>
        <function-ref name="isInput" scoped="" ref="0x4046c1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4046c2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c3b0"/>
        <function-ref name="get" scoped="" ref="0x4046c490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c570"/>
        <function-ref name="set" scoped="" ref="0x4046c650"/>
        <function-ref name="clr" scoped="" ref="0x4046c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4166b418" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4166b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4166b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x4166b6d0"/>
        <function-ref name="toggle" scoped="" ref="0x4166b7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4166b890"/>
        <function-ref name="get" scoped="" ref="0x4166b970"/>
        <function-ref name="makeOutput" scoped="" ref="0x4166ba50"/>
        <function-ref name="set" scoped="" ref="0x4166bb30"/>
        <function-ref name="clr" scoped="" ref="0x4166bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4166ade0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4166ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41669010"/>
        <function-ref name="isInput" scoped="" ref="0x416690f0"/>
        <function-ref name="toggle" scoped="" ref="0x416691d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416692b0"/>
        <function-ref name="get" scoped="" ref="0x41669390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41669470"/>
        <function-ref name="set" scoped="" ref="0x41669550"/>
        <function-ref name="clr" scoped="" ref="0x41669630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416687f8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416687f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416689d0"/>
        <function-ref name="isInput" scoped="" ref="0x41668ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41668b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41668c70"/>
        <function-ref name="get" scoped="" ref="0x41668d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41668e30"/>
        <function-ref name="set" scoped="" ref="0x41668f10"/>
        <function-ref name="clr" scoped="" ref="0x41667010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41666228" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41666228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41666400"/>
        <function-ref name="isInput" scoped="" ref="0x416664e0"/>
        <function-ref name="toggle" scoped="" ref="0x416665c0"/>
        <function-ref name="isOutput" scoped="" ref="0x416666a0"/>
        <function-ref name="get" scoped="" ref="0x41666780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41666860"/>
        <function-ref name="set" scoped="" ref="0x41666940"/>
        <function-ref name="clr" scoped="" ref="0x41666a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41665c08" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41665c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41665de0"/>
        <function-ref name="isInput" scoped="" ref="0x41665ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41664010"/>
        <function-ref name="isOutput" scoped="" ref="0x416640f0"/>
        <function-ref name="get" scoped="" ref="0x416641d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416642b0"/>
        <function-ref name="set" scoped="" ref="0x41664390"/>
        <function-ref name="clr" scoped="" ref="0x41664470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416636c0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41663898"/>
        <function-ref name="isInput" scoped="" ref="0x41663978"/>
        <function-ref name="toggle" scoped="" ref="0x41663a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41663b38"/>
        <function-ref name="get" scoped="" ref="0x41663c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41663cf8"/>
        <function-ref name="set" scoped="" ref="0x41663dd8"/>
        <function-ref name="clr" scoped="" ref="0x41663eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416610b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416610b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41661288"/>
        <function-ref name="isInput" scoped="" ref="0x41661368"/>
        <function-ref name="toggle" scoped="" ref="0x41661448"/>
        <function-ref name="isOutput" scoped="" ref="0x41661528"/>
        <function-ref name="get" scoped="" ref="0x41661608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416616e8"/>
        <function-ref name="set" scoped="" ref="0x416617c8"/>
        <function-ref name="clr" scoped="" ref="0x416618a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41660a88" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41660a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41660c60"/>
        <function-ref name="isInput" scoped="" ref="0x41660d40"/>
        <function-ref name="toggle" scoped="" ref="0x41660e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41660f00"/>
        <function-ref name="get" scoped="" ref="0x416b2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416b20f0"/>
        <function-ref name="set" scoped="" ref="0x416b21d0"/>
        <function-ref name="clr" scoped="" ref="0x416b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40473e60" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40473e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472050"/>
        <function-ref name="isInput" scoped="" ref="0x40472130"/>
        <function-ref name="toggle" scoped="" ref="0x40472210"/>
        <function-ref name="isOutput" scoped="" ref="0x404722f0"/>
        <function-ref name="get" scoped="" ref="0x404723d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404724b0"/>
        <function-ref name="set" scoped="" ref="0x40472590"/>
        <function-ref name="clr" scoped="" ref="0x40472670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40483458" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40483458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483630"/>
        <function-ref name="isInput" scoped="" ref="0x40483710"/>
        <function-ref name="toggle" scoped="" ref="0x404837f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404838d0"/>
        <function-ref name="get" scoped="" ref="0x404839b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483a90"/>
        <function-ref name="set" scoped="" ref="0x40483b70"/>
        <function-ref name="clr" scoped="" ref="0x40483c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40480a30" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40480a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480c08"/>
        <function-ref name="isInput" scoped="" ref="0x40480ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40480dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40480ea8"/>
        <function-ref name="get" scoped="" ref="0x4048b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b0f0"/>
        <function-ref name="set" scoped="" ref="0x4048b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40489090" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40489090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489268"/>
        <function-ref name="isInput" scoped="" ref="0x40489348"/>
        <function-ref name="toggle" scoped="" ref="0x40489428"/>
        <function-ref name="isOutput" scoped="" ref="0x40489508"/>
        <function-ref name="get" scoped="" ref="0x404895e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404896c8"/>
        <function-ref name="set" scoped="" ref="0x404897a8"/>
        <function-ref name="clr" scoped="" ref="0x40489888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404876c0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404876c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487898"/>
        <function-ref name="isInput" scoped="" ref="0x40487978"/>
        <function-ref name="toggle" scoped="" ref="0x40487a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40487b38"/>
        <function-ref name="get" scoped="" ref="0x40487c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487cf8"/>
        <function-ref name="set" scoped="" ref="0x40487dd8"/>
        <function-ref name="clr" scoped="" ref="0x40487eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40490cb8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40490cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490e90"/>
        <function-ref name="isInput" scoped="" ref="0x4048f010"/>
        <function-ref name="toggle" scoped="" ref="0x4048f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f1d0"/>
        <function-ref name="get" scoped="" ref="0x4048f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f390"/>
        <function-ref name="set" scoped="" ref="0x4048f470"/>
        <function-ref name="clr" scoped="" ref="0x4048f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4048d3b0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4048d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d588"/>
        <function-ref name="isInput" scoped="" ref="0x4048d668"/>
        <function-ref name="toggle" scoped="" ref="0x4048d748"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d828"/>
        <function-ref name="get" scoped="" ref="0x4048d908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048d9e8"/>
        <function-ref name="set" scoped="" ref="0x4048dac8"/>
        <function-ref name="clr" scoped="" ref="0x4048dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40496978" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40496978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496b50"/>
        <function-ref name="isInput" scoped="" ref="0x40496c30"/>
        <function-ref name="toggle" scoped="" ref="0x40496d10"/>
        <function-ref name="isOutput" scoped="" ref="0x40496df0"/>
        <function-ref name="get" scoped="" ref="0x40496ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495010"/>
        <function-ref name="set" scoped="" ref="0x404950f0"/>
        <function-ref name="clr" scoped="" ref="0x404951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40494ee0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40494ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404930e0"/>
        <function-ref name="isInput" scoped="" ref="0x404931c0"/>
        <function-ref name="toggle" scoped="" ref="0x404932a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40493380"/>
        <function-ref name="get" scoped="" ref="0x40493460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40493540"/>
        <function-ref name="set" scoped="" ref="0x40493620"/>
        <function-ref name="clr" scoped="" ref="0x40493700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049d3e8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d5c0"/>
        <function-ref name="isInput" scoped="" ref="0x4049d6a0"/>
        <function-ref name="toggle" scoped="" ref="0x4049d780"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d860"/>
        <function-ref name="get" scoped="" ref="0x4049d940"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049da20"/>
        <function-ref name="set" scoped="" ref="0x4049db00"/>
        <function-ref name="clr" scoped="" ref="0x4049dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049a8f0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049aac8"/>
        <function-ref name="isInput" scoped="" ref="0x4049aba8"/>
        <function-ref name="toggle" scoped="" ref="0x4049ac88"/>
        <function-ref name="isOutput" scoped="" ref="0x4049ad68"/>
        <function-ref name="get" scoped="" ref="0x4049ae48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049af28"/>
        <function-ref name="set" scoped="" ref="0x40499018"/>
        <function-ref name="clr" scoped="" ref="0x404990f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40498dd8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40498dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3010"/>
        <function-ref name="isInput" scoped="" ref="0x404a30f0"/>
        <function-ref name="toggle" scoped="" ref="0x404a31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a32b0"/>
        <function-ref name="get" scoped="" ref="0x404a3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3470"/>
        <function-ref name="set" scoped="" ref="0x404a3550"/>
        <function-ref name="clr" scoped="" ref="0x404a3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a03b0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a0588"/>
        <function-ref name="isInput" scoped="" ref="0x404a0668"/>
        <function-ref name="toggle" scoped="" ref="0x404a0748"/>
        <function-ref name="isOutput" scoped="" ref="0x404a0828"/>
        <function-ref name="get" scoped="" ref="0x404a0908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a09e8"/>
        <function-ref name="set" scoped="" ref="0x404a0ac8"/>
        <function-ref name="clr" scoped="" ref="0x404a0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b8858" loc="27:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b8858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x40342ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x40342ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b8a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404b8c08" loc="28:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404b8de0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404b8ec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404c6010"/>
        <function-ref name="actualMicro" scoped="" ref="0x404c60f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404c61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404d8010" loc="60:/home/van9ogh/Projects/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404cd1c8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404cd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404cdb28" loc="59:/home/van9ogh/Projects/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404cdb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cdd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404cd560" loc="58:/home/van9ogh/Projects/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404cd560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cd738"/>
        <function-ref name="taskLoop" scoped="" ref="0x404cd818"/>
        <function-ref name="runNextTask" scoped="" ref="0x404cd8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4034abc0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4034abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4034ad98"/>
        <function-ref name="runTask" scoped="" ref="0x4034ae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40348418" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40348418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403485f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403486d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403487b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403ba1f8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403ba1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403ba3d0"/>
        <function-ref name="runTask" scoped="" ref="0x403ba4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403bae68" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403bae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403b9050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403b4978" loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403b4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b4b50"/>
        <function-ref name="taskLoop" scoped="" ref="0x403b4c30"/>
        <function-ref name="runNextTask" scoped="" ref="0x403b4d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403cd370" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403cd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403cd548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4034f7f8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4034f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4034f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403ce4c8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403ce4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403ce6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404e3b70" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404e3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404e3d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404e10b8" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404e10b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e1290"/>
        <function-ref name="stopDone" scoped="" ref="0x404e1370"/>
        <function-ref name="start" scoped="" ref="0x404e1450"/>
        <function-ref name="stop" scoped="" ref="0x404e1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x404e9100" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x404e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404e92d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x40513e48" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x40513e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4052b050"/>
        <function-ref name="source" scoped="" ref="0x4052b130"/>
        <function-ref name="address" scoped="" ref="0x4052b210"/>
        <function-ref name="destination" scoped="" ref="0x4052b2f0"/>
        <function-ref name="setSource" scoped="" ref="0x4052b3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4052b4b0"/>
        <function-ref name="type" scoped="" ref="0x4052b590"/>
        <function-ref name="setType" scoped="" ref="0x4052b670"/>
        <function-ref name="isForMe" scoped="" ref="0x4052b750"/>
        <function-ref name="setGroup" scoped="" ref="0x4052b830"/>
        <function-ref name="localGroup" scoped="" ref="0x4052b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x4052f3f0" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x4052f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052f5c8"/>
        <function-ref name="runTask" scoped="" ref="0x4052f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404e1790" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404e1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e1968"/>
        <function-ref name="stopDone" scoped="" ref="0x404e1a48"/>
        <function-ref name="start" scoped="" ref="0x404e1b28"/>
        <function-ref name="stop" scoped="" ref="0x404e1c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x405136b0" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x405136b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40513888"/>
        <function-ref name="payloadLength" scoped="" ref="0x40513968"/>
        <function-ref name="getPayload" scoped="" ref="0x40513a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40513b28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40513c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40515bd8" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40515bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40515db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x4052fc00" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x4052fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052fdd8"/>
        <function-ref name="runTask" scoped="" ref="0x4052feb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40532a18" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40532a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40532c70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40532d50"/>
        <function-ref name="led1On" scoped="" ref="0x40532e30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40532f10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4052a010"/>
        <function-ref name="get" scoped="" ref="0x4052a0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4052a1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4052a550"/>
        <function-ref name="set" scoped="" ref="0x4052a2b0"/>
        <function-ref name="led0On" scoped="" ref="0x4052a390"/>
        <function-ref name="led2On" scoped="" ref="0x4052a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x4051b100" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x4051b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4051b2d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4051b3b8"/>
        <function-ref name="getPayload" scoped="" ref="0x4051b498"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4051b578"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4051b658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40515178" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40515178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40515350"/>
        <function-ref name="getPayload" scoped="" ref="0x40515430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40515510"/>
        <function-ref name="cancel" scoped="" ref="0x405155f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405156d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x40516b38" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x40516b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40516d10"/>
        <function-ref name="getPayload" scoped="" ref="0x40516df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40516ed0"/>
        <function-ref name="cancel" scoped="" ref="0x404e0010"/>
        <function-ref name="sendDone" scoped="" ref="0x404e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x4052d1f0" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x4052d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4052d3c8"/>
        <function-ref name="source" scoped="" ref="0x4052d4a8"/>
        <function-ref name="address" scoped="" ref="0x4052d588"/>
        <function-ref name="destination" scoped="" ref="0x4052d668"/>
        <function-ref name="setSource" scoped="" ref="0x4052d748"/>
        <function-ref name="setDestination" scoped="" ref="0x4052d828"/>
        <function-ref name="type" scoped="" ref="0x4052d908"/>
        <function-ref name="setType" scoped="" ref="0x4052d9e8"/>
        <function-ref name="isForMe" scoped="" ref="0x4052dac8"/>
        <function-ref name="setGroup" scoped="" ref="0x4052dba8"/>
        <function-ref name="localGroup" scoped="" ref="0x4052dc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x405132c8" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x405132c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405134a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4055a880" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4055a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4055aa58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4055ab38"/>
        <function-ref name="led1On" scoped="" ref="0x4055ac18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4055acf8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4055add8"/>
        <function-ref name="get" scoped="" ref="0x4055aeb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40565010"/>
        <function-ref name="led2Off" scoped="" ref="0x40565390"/>
        <function-ref name="set" scoped="" ref="0x405650f0"/>
        <function-ref name="led0On" scoped="" ref="0x405651d0"/>
        <function-ref name="led2On" scoped="" ref="0x405652b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40562cd8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40562cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40562eb0"/>
        <function-ref name="isInput" scoped="" ref="0x40561010"/>
        <function-ref name="toggle" scoped="" ref="0x405610f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405611d0"/>
        <function-ref name="get" scoped="" ref="0x405612b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40561390"/>
        <function-ref name="set" scoped="" ref="0x40561470"/>
        <function-ref name="clr" scoped="" ref="0x40561550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40565c20" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40565c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40565df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40561740" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40561740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40561918"/>
        <function-ref name="isInput" scoped="" ref="0x405619f8"/>
        <function-ref name="toggle" scoped="" ref="0x40561ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40561bb8"/>
        <function-ref name="get" scoped="" ref="0x40561c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40561d78"/>
        <function-ref name="set" scoped="" ref="0x40561e58"/>
        <function-ref name="clr" scoped="" ref="0x40560010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40562010" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40562010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405621e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405622c8"/>
        <function-ref name="led1On" scoped="" ref="0x405623a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40562488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40562568"/>
        <function-ref name="get" scoped="" ref="0x40562648"/>
        <function-ref name="led1Off" scoped="" ref="0x40562728"/>
        <function-ref name="led2Off" scoped="" ref="0x40562aa8"/>
        <function-ref name="set" scoped="" ref="0x40562808"/>
        <function-ref name="led0On" scoped="" ref="0x405628e8"/>
        <function-ref name="led2On" scoped="" ref="0x405629c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40560200" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40560200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405603d8"/>
        <function-ref name="isInput" scoped="" ref="0x405604b8"/>
        <function-ref name="toggle" scoped="" ref="0x40560598"/>
        <function-ref name="isOutput" scoped="" ref="0x40560678"/>
        <function-ref name="get" scoped="" ref="0x40560758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560838"/>
        <function-ref name="set" scoped="" ref="0x40560918"/>
        <function-ref name="clr" scoped="" ref="0x405609f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40564c98" loc="44:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40564c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40564e70"/>
        <function-ref name="isInput" scoped="" ref="0x40579010"/>
        <function-ref name="toggle" scoped="" ref="0x405790f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405791d0"/>
        <function-ref name="get" scoped="" ref="0x405792b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40579390"/>
        <function-ref name="set" scoped="" ref="0x40579470"/>
        <function-ref name="clr" scoped="" ref="0x40579550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40579760" loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40579760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40579938"/>
        <function-ref name="isInput" scoped="" ref="0x40579a18"/>
        <function-ref name="toggle" scoped="" ref="0x40579af8"/>
        <function-ref name="isOutput" scoped="" ref="0x40579bd8"/>
        <function-ref name="get" scoped="" ref="0x40579cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40579d98"/>
        <function-ref name="set" scoped="" ref="0x40579e78"/>
        <function-ref name="clr" scoped="" ref="0x40578010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40578ba8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40578ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40578d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40578220" loc="46:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40578220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405783f8"/>
        <function-ref name="isInput" scoped="" ref="0x405784d8"/>
        <function-ref name="toggle" scoped="" ref="0x405785b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40578698"/>
        <function-ref name="get" scoped="" ref="0x40578778"/>
        <function-ref name="makeOutput" scoped="" ref="0x40578858"/>
        <function-ref name="set" scoped="" ref="0x40578938"/>
        <function-ref name="clr" scoped="" ref="0x40578a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40574010" loc="55:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40574010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405741e8"/>
        <function-ref name="stopDone" scoped="" ref="0x405742c8"/>
        <function-ref name="start" scoped="" ref="0x405743a8"/>
        <function-ref name="stop" scoped="" ref="0x40574488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405748e8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405748e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40574ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x40574ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40574c80"/>
        <function-ref name="cancel" scoped="" ref="0x40574d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40574e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40580960" loc="59:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40580960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40580b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40580cb8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40580cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40580e90"/>
        <function-ref name="payloadLength" scoped="" ref="0x4057f010"/>
        <function-ref name="getPayload" scoped="" ref="0x4057f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4057f1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4057f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x4057d010" loc="64:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4057d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4057db10"/>
        <function-ref name="clear" scoped="" ref="0x4057dec0"/>
        <function-ref name="isValid" scoped="" ref="0x4057d760"/>
        <function-ref name="set" scoped="" ref="0x4057c2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4058d980" loc="66:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4058d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4058db58"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4058dc38"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4058dd18"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4058ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405802c8" loc="58:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405802c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405804a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4057b640" loc="63:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4057b818"/>
        <function-ref name="noAck" scoped="" ref="0x4057b8f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4057b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4057f448" loc="62:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4057f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4057f620"/>
        <function-ref name="source" scoped="" ref="0x4057f700"/>
        <function-ref name="address" scoped="" ref="0x4057f7e0"/>
        <function-ref name="destination" scoped="" ref="0x4057f8c0"/>
        <function-ref name="setSource" scoped="" ref="0x4057f9a0"/>
        <function-ref name="setDestination" scoped="" ref="0x4057fa80"/>
        <function-ref name="type" scoped="" ref="0x4057fb60"/>
        <function-ref name="setType" scoped="" ref="0x4057fc40"/>
        <function-ref name="isForMe" scoped="" ref="0x4057fd20"/>
        <function-ref name="setGroup" scoped="" ref="0x4057fe00"/>
        <function-ref name="localGroup" scoped="" ref="0x4057fee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4057c9d8" loc="65:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4057c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405855b0"/>
        <function-ref name="clear" scoped="" ref="0x40585960"/>
        <function-ref name="isValid" scoped="" ref="0x40585200"/>
        <function-ref name="set" scoped="" ref="0x40585d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40595460" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40595460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40595638"/>
        <function-ref name="stopDone" scoped="" ref="0x40595718"/>
        <function-ref name="start" scoped="" ref="0x405957f8"/>
        <function-ref name="stop" scoped="" ref="0x405958d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405a6de8" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405a6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4059b010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4059b0f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4059b1d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4059b2b0"/>
        <function-ref name="setCca" scoped="" ref="0x4059b390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4059b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405aead0" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405aed28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40593dc0" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40593dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40592010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405920f0"/>
        <function-ref name="getPayload" scoped="" ref="0x405921d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405922b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40592390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40595d38" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40595d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40595f10"/>
        <function-ref name="getPayload" scoped="" ref="0x40594010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405940f0"/>
        <function-ref name="cancel" scoped="" ref="0x405941d0"/>
        <function-ref name="sendDone" scoped="" ref="0x405942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40594db0" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40594db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40593010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x4059c660" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4059c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4059c838"/>
        <function-ref name="setNetwork" scoped="" ref="0x4059c918"/>
        <function-ref name="getRssi" scoped="" ref="0x4059c9f8"/>
        <function-ref name="getNetwork" scoped="" ref="0x4059cad8"/>
        <function-ref name="getPower" scoped="" ref="0x4059cbb8"/>
        <function-ref name="getLqi" scoped="" ref="0x4059cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4059b660" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4059b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4059b838"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4059b918"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4059b9f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4059bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40594718" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40594718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4059ceb8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405a10c0"/>
        <function-ref name="noAck" scoped="" ref="0x405a11a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405a1280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405a5010" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405a51e8"/>
        <function-ref name="setRetries" scoped="" ref="0x405a52c8"/>
        <function-ref name="getRetries" scoped="" ref="0x405a53a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405a5488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405a5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405931a8" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405931a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40593380"/>
        <function-ref name="source" scoped="" ref="0x40593460"/>
        <function-ref name="address" scoped="" ref="0x40593540"/>
        <function-ref name="destination" scoped="" ref="0x40593620"/>
        <function-ref name="setSource" scoped="" ref="0x40593700"/>
        <function-ref name="setDestination" scoped="" ref="0x405937e0"/>
        <function-ref name="type" scoped="" ref="0x405938c0"/>
        <function-ref name="setType" scoped="" ref="0x405939a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40593a80"/>
        <function-ref name="setGroup" scoped="" ref="0x40593b60"/>
        <function-ref name="localGroup" scoped="" ref="0x40593c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405a82e8" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405a82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405a84c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405a4cb8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405a4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405a4e90"/>
        <function-ref name="stopDone" scoped="" ref="0x405ac010"/>
        <function-ref name="start" scoped="" ref="0x405ac0f0"/>
        <function-ref name="stop" scoped="" ref="0x405ac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x405c08a0" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x405c08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x405c0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405bf2a0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405bf2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405bf478"/>
        <function-ref name="setRetries" scoped="" ref="0x405bf558"/>
        <function-ref name="getRetries" scoped="" ref="0x405bf638"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405bf718"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405bf7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x405aaa50" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405aaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405aac28"/>
        <function-ref name="setNetwork" scoped="" ref="0x405aad08"/>
        <function-ref name="getRssi" scoped="" ref="0x405aade8"/>
        <function-ref name="getNetwork" scoped="" ref="0x405aaec8"/>
        <function-ref name="getPower" scoped="" ref="0x405c0010"/>
        <function-ref name="getLqi" scoped="" ref="0x405c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x405abf18" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x405abf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405aa108"/>
        <function-ref name="getPayload" scoped="" ref="0x405aa1e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405aa2c8"/>
        <function-ref name="cancel" scoped="" ref="0x405aa3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x405aa488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405c0c68" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405c0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x405c0e40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x405c0f20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x405bf018"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x405bf0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x405ab3e8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x405ab3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405ab5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405c0310" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405c0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405c04e8"/>
        <function-ref name="noAck" scoped="" ref="0x405c05c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405c06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x405b76f8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405b76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405b78d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405b79b0"/>
        <function-ref name="request" scoped="" ref="0x405b7a90"/>
        <function-ref name="granted" scoped="" ref="0x405b7b70"/>
        <function-ref name="isOwner" scoped="" ref="0x405b7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x405b2c20" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x405b2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405b2df8"/>
        <function-ref name="getPayload" scoped="" ref="0x405b2ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405ab010"/>
        <function-ref name="cancel" scoped="" ref="0x405ab0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x405ab7c8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x405ab7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405ab9a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x405aba80"/>
        <function-ref name="getPayload" scoped="" ref="0x405abb60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405abc40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405abd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x405aa6b8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x405aa6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405aa890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405bc010" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405bc1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x405bc2c8"/>
        <function-ref name="start" scoped="" ref="0x405bc3a8"/>
        <function-ref name="stop" scoped="" ref="0x405bc488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405bb0f0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405bb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405bb2c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405bb3a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405bb488"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405bb568"/>
        <function-ref name="setCca" scoped="" ref="0x405bb648"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405bb728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405bc618" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405bc618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405bc7f0"/>
        <function-ref name="getPayload" scoped="" ref="0x405bc8d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405bc9b0"/>
        <function-ref name="cancel" scoped="" ref="0x405bca90"/>
        <function-ref name="sendDone" scoped="" ref="0x405bcb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405bcd18" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405bcd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405bcef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c8290" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c8290"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c8468"/>
        <function-ref name="stopDone" scoped="" ref="0x405c8548"/>
        <function-ref name="start" scoped="" ref="0x405c8628"/>
        <function-ref name="stop" scoped="" ref="0x405c8708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405c7010" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c71e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405c72c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405c73a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405c7488"/>
        <function-ref name="setCca" scoped="" ref="0x405c7568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405c7648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405c3278" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405c3278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c3450"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405c3530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405c3610"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405c36f0"/>
        <function-ref name="setCca" scoped="" ref="0x405c37d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405c38b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x405d0810" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405d0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405d09e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x405d0ac8"/>
        <function-ref name="getRssi" scoped="" ref="0x405d0ba8"/>
        <function-ref name="getNetwork" scoped="" ref="0x405d0c88"/>
        <function-ref name="getPower" scoped="" ref="0x405d0d68"/>
        <function-ref name="getLqi" scoped="" ref="0x405d0e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x405cb9e0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x405cb9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405cbbb8"/>
        <function-ref name="cancel" scoped="" ref="0x405cbc98"/>
        <function-ref name="modify" scoped="" ref="0x405cbd78"/>
        <function-ref name="sendDone" scoped="" ref="0x405cbe58"/>
        <function-ref name="resend" scoped="" ref="0x405c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405c8898" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405c8898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c8a70"/>
        <function-ref name="getPayload" scoped="" ref="0x405c8b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c8c30"/>
        <function-ref name="cancel" scoped="" ref="0x405c8d10"/>
        <function-ref name="sendDone" scoped="" ref="0x405c8df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x405d96e0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x405d96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x405d98b8"/>
        <function-ref name="rand32" scoped="" ref="0x405d9998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x405cf3f0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x405cf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405cf5c8"/>
        <function-ref name="stop" scoped="" ref="0x405cf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405d8010" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x405d81e8"/>
        <function-ref name="getHeader" scoped="" ref="0x405d82c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x405d83a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x405d19c0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x405d19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x405d1b98"/>
        <function-ref name="rfOff" scoped="" ref="0x405d1c78"/>
        <function-ref name="rxOn" scoped="" ref="0x405d1d58"/>
        <function-ref name="startVReg" scoped="" ref="0x405d1e38"/>
        <function-ref name="stopVReg" scoped="" ref="0x405d1f18"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x405c4010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x405c40f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x405c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405d9b28" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405d9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405d9d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405d9de0"/>
        <function-ref name="led1On" scoped="" ref="0x405d9ec0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405d0010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405d00f0"/>
        <function-ref name="get" scoped="" ref="0x405d01d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405d02b0"/>
        <function-ref name="led2Off" scoped="" ref="0x405d0630"/>
        <function-ref name="set" scoped="" ref="0x405d0390"/>
        <function-ref name="led0On" scoped="" ref="0x405d0470"/>
        <function-ref name="led2On" scoped="" ref="0x405d0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x405c7800" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405c7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405c79d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405c7ab8"/>
        <function-ref name="request" scoped="" ref="0x405c7b98"/>
        <function-ref name="granted" scoped="" ref="0x405c7c78"/>
        <function-ref name="isOwner" scoped="" ref="0x405c7d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x405e1858" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x405e1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x405e1ab0"/>
        <function-ref name="toIdle" scoped="" ref="0x405e1b90"/>
        <function-ref name="isState" scoped="" ref="0x405e1c70"/>
        <function-ref name="isIdle" scoped="" ref="0x405e1d50"/>
        <function-ref name="requestState" scoped="" ref="0x405e1e30"/>
        <function-ref name="forceState" scoped="" ref="0x405e1f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x405e09a8" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x405e09a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e0b80"/>
        <function-ref name="runTask" scoped="" ref="0x405e0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x405e0198" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x405e0198"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e0370"/>
        <function-ref name="runTask" scoped="" ref="0x405e0450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x405d4928" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x405d4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405d4b00"/>
        <function-ref name="runTask" scoped="" ref="0x405d4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40610930" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40610930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40610b08"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40610be8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40610cc8"/>
        <function-ref name="syncDone" scoped="" ref="0x40610da8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40610e88"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40605010"/>
        <function-ref name="setChannel" scoped="" ref="0x406050f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x406051d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x406052b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40605390"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40605470"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40605550"/>
        <function-ref name="sync" scoped="" ref="0x40605630"/>
        <function-ref name="getChannel" scoped="" ref="0x40605790"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40605870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4060c900" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4060c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4060cf28"/>
        <function-ref name="readDone" scoped="" ref="0x4060e190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40605a40" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40605a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40605c18"/>
        <function-ref name="rfOff" scoped="" ref="0x40605cf8"/>
        <function-ref name="rxOn" scoped="" ref="0x40605dd8"/>
        <function-ref name="startVReg" scoped="" ref="0x40605eb8"/>
        <function-ref name="stopVReg" scoped="" ref="0x40604010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x406040f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x406041d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x406042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406098f8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406098f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40609ad0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40609bb0"/>
        <function-ref name="request" scoped="" ref="0x40609c90"/>
        <function-ref name="granted" scoped="" ref="0x40609d70"/>
        <function-ref name="isOwner" scoped="" ref="0x40609e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x4061c798" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4061c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4061c970"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4061ca50"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4061cb30"/>
        <function-ref name="syncDone" scoped="" ref="0x4061cc10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4061ccf0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4061cdd0"/>
        <function-ref name="setChannel" scoped="" ref="0x4061ceb0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4061b010"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4061b0f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4061b1d0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x4061b2b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4061b390"/>
        <function-ref name="sync" scoped="" ref="0x4061b470"/>
        <function-ref name="getChannel" scoped="" ref="0x4061b5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4061b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40629010" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40629010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406291e8"/>
        <function-ref name="write" scoped="" ref="0x406292c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40619828" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40619828"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40619a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x406181c8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x406181c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40615690"/>
        <function-ref name="fired" scoped="" ref="0x40618e30"/>
        <function-ref name="startAt" scoped="" ref="0x40615350"/>
        <function-ref name="isRunning" scoped="" ref="0x406150d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40615908"/>
        <function-ref name="start" scoped="" ref="0x40618918"/>
        <function-ref name="stop" scoped="" ref="0x40618bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4061f530" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4061f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4061f708"/>
        <function-ref name="write" scoped="" ref="0x4061f7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40622680" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40622680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40622858"/>
        <function-ref name="isInput" scoped="" ref="0x40622938"/>
        <function-ref name="toggle" scoped="" ref="0x40622a18"/>
        <function-ref name="isOutput" scoped="" ref="0x40622af8"/>
        <function-ref name="get" scoped="" ref="0x40622bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40622cb8"/>
        <function-ref name="set" scoped="" ref="0x40622d98"/>
        <function-ref name="clr" scoped="" ref="0x40622e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4061a3e0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4061a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4061aa08"/>
        <function-ref name="readDone" scoped="" ref="0x4061ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4062f2c8" loc="126:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4062f2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062f4a0"/>
        <function-ref name="runTask" scoped="" ref="0x4062f580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40629508" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40629508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406296e0"/>
        <function-ref name="write" scoped="" ref="0x406297c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40629a10" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40629a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40629be8"/>
        <function-ref name="write" scoped="" ref="0x40629cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40628ac8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40628ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40628ca0"/>
        <function-ref name="write" scoped="" ref="0x40628d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4062c1f8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4062c1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4062c3d0"/>
        <function-ref name="changed" scoped="" ref="0x4062c4b0"/>
        <function-ref name="amGroup" scoped="" ref="0x4062c590"/>
        <function-ref name="setAddress" scoped="" ref="0x4062c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40615bd8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40615bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40615db0"/>
        <function-ref name="isInput" scoped="" ref="0x40615e90"/>
        <function-ref name="toggle" scoped="" ref="0x40622010"/>
        <function-ref name="isOutput" scoped="" ref="0x406220f0"/>
        <function-ref name="get" scoped="" ref="0x406221d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406222b0"/>
        <function-ref name="set" scoped="" ref="0x40622390"/>
        <function-ref name="clr" scoped="" ref="0x40622470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40637158" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40637158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40637430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x406210b0" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x406210b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40621288"/>
        <function-ref name="isInput" scoped="" ref="0x40621368"/>
        <function-ref name="toggle" scoped="" ref="0x40621448"/>
        <function-ref name="isOutput" scoped="" ref="0x40621528"/>
        <function-ref name="get" scoped="" ref="0x40621608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406216e8"/>
        <function-ref name="set" scoped="" ref="0x406217c8"/>
        <function-ref name="clr" scoped="" ref="0x406218a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4060eca8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4060eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x4061fa50" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4061fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4061fc28"/>
        <function-ref name="write" scoped="" ref="0x4061fd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40637678" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40637678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40637850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40637a98" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40637a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40637c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40637d50"/>
        <function-ref name="request" scoped="" ref="0x40637e30"/>
        <function-ref name="granted" scoped="" ref="0x40637f10"/>
        <function-ref name="isOwner" scoped="" ref="0x40636010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40636a18" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40636a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40636bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40636cd0"/>
        <function-ref name="request" scoped="" ref="0x40636db0"/>
        <function-ref name="granted" scoped="" ref="0x40636e90"/>
        <function-ref name="isOwner" scoped="" ref="0x40635010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4061b880" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4061b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4061ba58"/>
        <function-ref name="rfOff" scoped="" ref="0x4061bb38"/>
        <function-ref name="rxOn" scoped="" ref="0x4061bc18"/>
        <function-ref name="startVReg" scoped="" ref="0x4061bcf8"/>
        <function-ref name="stopVReg" scoped="" ref="0x4061bdd8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4061beb8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4061a010"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4061a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4061f010" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4061f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4061f1e8"/>
        <function-ref name="write" scoped="" ref="0x4061f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x406285c0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x406285c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40628798"/>
        <function-ref name="write" scoped="" ref="0x40628878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x406268d0" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x406268d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40626aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406351a0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406351a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40635378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40635458"/>
        <function-ref name="led1On" scoped="" ref="0x40635538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40635618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406356f8"/>
        <function-ref name="get" scoped="" ref="0x406357d8"/>
        <function-ref name="led1Off" scoped="" ref="0x406358b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40635c38"/>
        <function-ref name="set" scoped="" ref="0x40635998"/>
        <function-ref name="led0On" scoped="" ref="0x40635a78"/>
        <function-ref name="led2On" scoped="" ref="0x40635b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x40631ad0" loc="125:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x40631ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40631ca8"/>
        <function-ref name="runTask" scoped="" ref="0x40631d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4061c060" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4061c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4061c238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4061c318"/>
        <function-ref name="request" scoped="" ref="0x4061c3f8"/>
        <function-ref name="granted" scoped="" ref="0x4061c4d8"/>
        <function-ref name="isOwner" scoped="" ref="0x4061c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x4062adc8" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4062adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40620010"/>
        <function-ref name="write" scoped="" ref="0x406200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x4062a878" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4062a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4062aad0"/>
        <function-ref name="write" scoped="" ref="0x4062abb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x4061d1d8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4061d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4061d3b0"/>
        <function-ref name="disable" scoped="" ref="0x4061d490"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4061d570"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4061d650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40636268" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40636268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40636440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40636520"/>
        <function-ref name="request" scoped="" ref="0x40636600"/>
        <function-ref name="granted" scoped="" ref="0x406366e0"/>
        <function-ref name="isOwner" scoped="" ref="0x406367c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40626ce8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40626ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40626ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4067d828" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4067d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4067da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x4067ddf0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x4067ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40679350"/>
        <function-ref name="fired" scoped="" ref="0x4067aa88"/>
        <function-ref name="startAt" scoped="" ref="0x40679010"/>
        <function-ref name="isRunning" scoped="" ref="0x4067ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x406795c8"/>
        <function-ref name="start" scoped="" ref="0x4067a570"/>
        <function-ref name="stop" scoped="" ref="0x4067a810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40678a60" loc="86:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40678a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c6010"/>
        <function-ref name="fired" scoped="" ref="0x40677718"/>
        <function-ref name="startAt" scoped="" ref="0x40677c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40677990"/>
        <function-ref name="getAlarm" scoped="" ref="0x407c6288"/>
        <function-ref name="start" scoped="" ref="0x40677200"/>
        <function-ref name="stop" scoped="" ref="0x406774a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c64b8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x416e5688" loc="28:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x416e5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416e3b30"/>
        <function-ref name="fired" scoped="" ref="0x416e3300"/>
        <function-ref name="startAt" scoped="" ref="0x416e37f0"/>
        <function-ref name="isRunning" scoped="" ref="0x416e3578"/>
        <function-ref name="getAlarm" scoped="" ref="0x416e3da8"/>
        <function-ref name="start" scoped="" ref="0x416e5dd8"/>
        <function-ref name="stop" scoped="" ref="0x416e3088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x416e1448" loc="30:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x416e1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416e0908"/>
        <function-ref name="fired" scoped="" ref="0x416e00d8"/>
        <function-ref name="startAt" scoped="" ref="0x416e05c8"/>
        <function-ref name="isRunning" scoped="" ref="0x416e0350"/>
        <function-ref name="getAlarm" scoped="" ref="0x416e0b80"/>
        <function-ref name="start" scoped="" ref="0x416e1b98"/>
        <function-ref name="stop" scoped="" ref="0x416e1e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406949b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406949b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40694b88"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40694c68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40694d48"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40694e28"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40694f08"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4069a010"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4069a0f0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4069a1d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4069a2b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4069a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406a4770" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406a4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406a7288"/>
        <function-ref name="test" scoped="" ref="0x40699cf0"/>
        <function-ref name="get" scoped="" ref="0x406a4db8"/>
        <function-ref name="captured" scoped="" ref="0x406992e8"/>
        <function-ref name="reset" scoped="" ref="0x40699588"/>
        <function-ref name="isOn" scoped="" ref="0x406a7010"/>
        <function-ref name="set" scoped="" ref="0x40699048"/>
        <function-ref name="start" scoped="" ref="0x40699800"/>
        <function-ref name="stop" scoped="" ref="0x40699a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406a22f0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406a1840"/>
        <function-ref name="fired" scoped="" ref="0x406a2e50"/>
        <function-ref name="get" scoped="" ref="0x406a2938"/>
        <function-ref name="reset" scoped="" ref="0x406a10d8"/>
        <function-ref name="isOn" scoped="" ref="0x406a1ab8"/>
        <function-ref name="set" scoped="" ref="0x406a2bb0"/>
        <function-ref name="start" scoped="" ref="0x406a1350"/>
        <function-ref name="stop" scoped="" ref="0x406a15c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4069caa0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4069caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4069b538"/>
        <function-ref name="test" scoped="" ref="0x4069b048"/>
        <function-ref name="get" scoped="" ref="0x4068e120"/>
        <function-ref name="setScale" scoped="" ref="0x4069b7b0"/>
        <function-ref name="getScale" scoped="" ref="0x4069ba50"/>
        <function-ref name="reset" scoped="" ref="0x4068e8b0"/>
        <function-ref name="overflow" scoped="" ref="0x4068e638"/>
        <function-ref name="isOn" scoped="" ref="0x4069b2c0"/>
        <function-ref name="set" scoped="" ref="0x4068e398"/>
        <function-ref name="start" scoped="" ref="0x4068eb28"/>
        <function-ref name="stop" scoped="" ref="0x4068eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406bae18" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406bae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406aa010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406aa0f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406aa1d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406aa2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406aa390"/>
        <function-ref name="setControl" scoped="" ref="0x406aa470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406b4498" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406b4498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406b4670"/>
        <function-ref name="compareBusy" scoped="" ref="0x406b4750"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406b4830"/>
        <function-ref name="countBusy" scoped="" ref="0x406b4910"/>
        <function-ref name="getAssr" scoped="" ref="0x406b49f0"/>
        <function-ref name="setAssr" scoped="" ref="0x406b4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406aa798" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406aa798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406a9ce8"/>
        <function-ref name="fired" scoped="" ref="0x406a9308"/>
        <function-ref name="get" scoped="" ref="0x406aade0"/>
        <function-ref name="reset" scoped="" ref="0x406a9580"/>
        <function-ref name="isOn" scoped="" ref="0x406b9010"/>
        <function-ref name="set" scoped="" ref="0x406a9068"/>
        <function-ref name="start" scoped="" ref="0x406a97f8"/>
        <function-ref name="stop" scoped="" ref="0x406a9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b0608" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b0608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406ab088"/>
        <function-ref name="test" scoped="" ref="0x406acb70"/>
        <function-ref name="get" scoped="" ref="0x406b0c50"/>
        <function-ref name="setScale" scoped="" ref="0x406ab300"/>
        <function-ref name="getScale" scoped="" ref="0x406ab5a0"/>
        <function-ref name="reset" scoped="" ref="0x406ac408"/>
        <function-ref name="overflow" scoped="" ref="0x406ac190"/>
        <function-ref name="isOn" scoped="" ref="0x406acde8"/>
        <function-ref name="set" scoped="" ref="0x406b0ec8"/>
        <function-ref name="start" scoped="" ref="0x406ac680"/>
        <function-ref name="stop" scoped="" ref="0x406ac8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406c5af0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406c5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406c5cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406c5da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406c5e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406c3010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406c30f0"/>
        <function-ref name="setControl" scoped="" ref="0x406c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406c1010" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406c11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406c1470" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406c1648"/>
        <function-ref name="compareBusy" scoped="" ref="0x406c1728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406c1808"/>
        <function-ref name="countBusy" scoped="" ref="0x406c18e8"/>
        <function-ref name="getAssr" scoped="" ref="0x406c19c8"/>
        <function-ref name="setAssr" scoped="" ref="0x406c1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406c34f8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406c34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406c2a48"/>
        <function-ref name="fired" scoped="" ref="0x406c2068"/>
        <function-ref name="get" scoped="" ref="0x406c3b40"/>
        <function-ref name="reset" scoped="" ref="0x406c22e0"/>
        <function-ref name="isOn" scoped="" ref="0x406c2cc0"/>
        <function-ref name="set" scoped="" ref="0x406c3db8"/>
        <function-ref name="start" scoped="" ref="0x406c2558"/>
        <function-ref name="stop" scoped="" ref="0x406c27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b87a8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406c5288"/>
        <function-ref name="test" scoped="" ref="0x406b2d08"/>
        <function-ref name="get" scoped="" ref="0x406b8df0"/>
        <function-ref name="setScale" scoped="" ref="0x406c5500"/>
        <function-ref name="getScale" scoped="" ref="0x406c57a0"/>
        <function-ref name="reset" scoped="" ref="0x406b25a0"/>
        <function-ref name="overflow" scoped="" ref="0x406b2328"/>
        <function-ref name="isOn" scoped="" ref="0x406c5010"/>
        <function-ref name="set" scoped="" ref="0x406b2088"/>
        <function-ref name="start" scoped="" ref="0x406b2818"/>
        <function-ref name="stop" scoped="" ref="0x406b2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406f0e78" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406f0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406ee070"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406ee150"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406ee230"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406ee310"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406ee3f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406ee4d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406ee5b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406ee690"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406ee770"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406ee850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x406f9e98" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x406f9e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406f80c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406f81a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406f8280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406f8360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406f8440"/>
        <function-ref name="setControl" scoped="" ref="0x406f8520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40700a80" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40700a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406fd010"/>
        <function-ref name="fired" scoped="" ref="0x406ff610"/>
        <function-ref name="get" scoped="" ref="0x406ff0f8"/>
        <function-ref name="reset" scoped="" ref="0x406ff888"/>
        <function-ref name="isOn" scoped="" ref="0x406fd288"/>
        <function-ref name="set" scoped="" ref="0x406ff370"/>
        <function-ref name="start" scoped="" ref="0x406ffb00"/>
        <function-ref name="stop" scoped="" ref="0x406ffd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406eeb88" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406eeb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40700640"/>
        <function-ref name="test" scoped="" ref="0x40700150"/>
        <function-ref name="get" scoped="" ref="0x40701200"/>
        <function-ref name="captured" scoped="" ref="0x40701718"/>
        <function-ref name="reset" scoped="" ref="0x407019b8"/>
        <function-ref name="isOn" scoped="" ref="0x407003c8"/>
        <function-ref name="set" scoped="" ref="0x40701478"/>
        <function-ref name="start" scoped="" ref="0x40701c30"/>
        <function-ref name="stop" scoped="" ref="0x40701ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x406fd6a0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x406fd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406fcc90"/>
        <function-ref name="fired" scoped="" ref="0x406fc2b0"/>
        <function-ref name="get" scoped="" ref="0x406fdce8"/>
        <function-ref name="reset" scoped="" ref="0x406fc528"/>
        <function-ref name="isOn" scoped="" ref="0x406fcf08"/>
        <function-ref name="set" scoped="" ref="0x406fc010"/>
        <function-ref name="start" scoped="" ref="0x406fc7a0"/>
        <function-ref name="stop" scoped="" ref="0x406fca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x406fb340" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x406fb340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406f9898"/>
        <function-ref name="fired" scoped="" ref="0x406fbea0"/>
        <function-ref name="get" scoped="" ref="0x406fb988"/>
        <function-ref name="reset" scoped="" ref="0x406f9130"/>
        <function-ref name="isOn" scoped="" ref="0x406f9b10"/>
        <function-ref name="set" scoped="" ref="0x406fbc00"/>
        <function-ref name="start" scoped="" ref="0x406f93a8"/>
        <function-ref name="stop" scoped="" ref="0x406f9620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406adb78" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406adb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406f0600"/>
        <function-ref name="test" scoped="" ref="0x406f0110"/>
        <function-ref name="get" scoped="" ref="0x406f1200"/>
        <function-ref name="setScale" scoped="" ref="0x406f0878"/>
        <function-ref name="getScale" scoped="" ref="0x406f0b18"/>
        <function-ref name="reset" scoped="" ref="0x406f1990"/>
        <function-ref name="overflow" scoped="" ref="0x406f1718"/>
        <function-ref name="isOn" scoped="" ref="0x406f0388"/>
        <function-ref name="set" scoped="" ref="0x406f1478"/>
        <function-ref name="start" scoped="" ref="0x406f1c08"/>
        <function-ref name="stop" scoped="" ref="0x406f1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40756700" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40756700"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x40342ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x40342ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407568d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40756ae8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40756ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40763600"/>
        <function-ref name="test" scoped="" ref="0x40763110"/>
        <function-ref name="get" scoped="" ref="0x40755200"/>
        <function-ref name="setScale" scoped="" ref="0x40763878"/>
        <function-ref name="getScale" scoped="" ref="0x40763b18"/>
        <function-ref name="reset" scoped="" ref="0x40755990"/>
        <function-ref name="overflow" scoped="" ref="0x40755718"/>
        <function-ref name="isOn" scoped="" ref="0x40763388"/>
        <function-ref name="set" scoped="" ref="0x40755478"/>
        <function-ref name="start" scoped="" ref="0x40755c08"/>
        <function-ref name="stop" scoped="" ref="0x40755e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41731210" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41731210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403428e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403428e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x417306c8"/>
        <function-ref name="fired" scoped="" ref="0x41731e78"/>
        <function-ref name="startAt" scoped="" ref="0x41730388"/>
        <function-ref name="isRunning" scoped="" ref="0x41730110"/>
        <function-ref name="getAlarm" scoped="" ref="0x41730940"/>
        <function-ref name="start" scoped="" ref="0x41731960"/>
        <function-ref name="stop" scoped="" ref="0x41731c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4172de68" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4172de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4172b3e8"/>
        <function-ref name="fired" scoped="" ref="0x4172c9f0"/>
        <function-ref name="get" scoped="" ref="0x4172c4d8"/>
        <function-ref name="reset" scoped="" ref="0x4172cc68"/>
        <function-ref name="isOn" scoped="" ref="0x4172b660"/>
        <function-ref name="set" scoped="" ref="0x4172c750"/>
        <function-ref name="start" scoped="" ref="0x4172cee0"/>
        <function-ref name="stop" scoped="" ref="0x4172b170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41730c00" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41730c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4172d690"/>
        <function-ref name="test" scoped="" ref="0x4172d1a0"/>
        <function-ref name="get" scoped="" ref="0x4172f278"/>
        <function-ref name="setScale" scoped="" ref="0x4172d908"/>
        <function-ref name="getScale" scoped="" ref="0x4172dba8"/>
        <function-ref name="reset" scoped="" ref="0x4172fa08"/>
        <function-ref name="overflow" scoped="" ref="0x4172f790"/>
        <function-ref name="isOn" scoped="" ref="0x4172d418"/>
        <function-ref name="set" scoped="" ref="0x4172f4f0"/>
        <function-ref name="start" scoped="" ref="0x4172fc80"/>
        <function-ref name="stop" scoped="" ref="0x4172fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40782010" loc="24:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40782010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40782760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40782c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407829d8"/>
        <function-ref name="overflow" scoped="" ref="0x40782ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077fa08" loc="24:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077c200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077c6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077c478"/>
        <function-ref name="overflow" scoped="" ref="0x4077c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40791320" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40791320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40791a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40786010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40791ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40786288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40786568" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40786568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4079c010"/>
        <function-ref name="test" scoped="" ref="0x4079dad8"/>
        <function-ref name="get" scoped="" ref="0x40786bb0"/>
        <function-ref name="setScale" scoped="" ref="0x4079c288"/>
        <function-ref name="getScale" scoped="" ref="0x4079c528"/>
        <function-ref name="reset" scoped="" ref="0x4079d370"/>
        <function-ref name="overflow" scoped="" ref="0x4079d0f8"/>
        <function-ref name="isOn" scoped="" ref="0x4079dd50"/>
        <function-ref name="set" scoped="" ref="0x40786e28"/>
        <function-ref name="start" scoped="" ref="0x4079d5e8"/>
        <function-ref name="stop" scoped="" ref="0x4079d860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407a2ae8" loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407a2ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a1308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a17f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a1580"/>
        <function-ref name="overflow" scoped="" ref="0x407a1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4079a7f0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4079a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a2010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a2500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a2288"/>
        <function-ref name="overflow" scoped="" ref="0x407a2778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x416dedd0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x416dedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41738350"/>
        <function-ref name="fired" scoped="" ref="0x416dda88"/>
        <function-ref name="startAt" scoped="" ref="0x41738010"/>
        <function-ref name="isRunning" scoped="" ref="0x416ddd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x417385c8"/>
        <function-ref name="start" scoped="" ref="0x416dd570"/>
        <function-ref name="stop" scoped="" ref="0x416dd810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41737b60" loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41737b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="TOne" ref="0x403b7e70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41734068"/>
        <function-ref name="fired" scoped="" ref="0x41736820"/>
        <function-ref name="startAt" scoped="" ref="0x41736d10"/>
        <function-ref name="isRunning" scoped="" ref="0x41736a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x417342e0"/>
        <function-ref name="start" scoped="" ref="0x41736308"/>
        <function-ref name="stop" scoped="" ref="0x417365a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41738918" loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41738918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41737088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41737578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41737300"/>
        <function-ref name="overflow" scoped="" ref="0x417377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c77b0" loc="18:/home/van9ogh/Projects/tinyos-main/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x407d9660" loc="87:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x407d9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d9838"/>
        <function-ref name="isInput" scoped="" ref="0x407d9918"/>
        <function-ref name="toggle" scoped="" ref="0x407d99f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407d9ad8"/>
        <function-ref name="get" scoped="" ref="0x407d9bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d9c98"/>
        <function-ref name="set" scoped="" ref="0x407d9d78"/>
        <function-ref name="clr" scoped="" ref="0x407d9e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x407d8068" loc="88:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x407d8068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d8240"/>
        <function-ref name="isInput" scoped="" ref="0x407d8320"/>
        <function-ref name="toggle" scoped="" ref="0x407d8400"/>
        <function-ref name="isOutput" scoped="" ref="0x407d84e0"/>
        <function-ref name="get" scoped="" ref="0x407d85c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d86a0"/>
        <function-ref name="set" scoped="" ref="0x407d8780"/>
        <function-ref name="clr" scoped="" ref="0x407d8860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x407d8a50" loc="89:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x407d8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d8c28"/>
        <function-ref name="isInput" scoped="" ref="0x407d8d08"/>
        <function-ref name="toggle" scoped="" ref="0x407d8de8"/>
        <function-ref name="isOutput" scoped="" ref="0x407d8ec8"/>
        <function-ref name="get" scoped="" ref="0x407d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d70f0"/>
        <function-ref name="set" scoped="" ref="0x407d71d0"/>
        <function-ref name="clr" scoped="" ref="0x407d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x407c2c48" loc="86:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x407c2c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c2e20"/>
        <function-ref name="isInput" scoped="" ref="0x407c2f00"/>
        <function-ref name="toggle" scoped="" ref="0x407d9010"/>
        <function-ref name="isOutput" scoped="" ref="0x407d90f0"/>
        <function-ref name="get" scoped="" ref="0x407d91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d92b0"/>
        <function-ref name="set" scoped="" ref="0x407d9390"/>
        <function-ref name="clr" scoped="" ref="0x407d9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x407d7e78" loc="91:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x407d7e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d6070"/>
        <function-ref name="isInput" scoped="" ref="0x407d6150"/>
        <function-ref name="toggle" scoped="" ref="0x407d6230"/>
        <function-ref name="isOutput" scoped="" ref="0x407d6310"/>
        <function-ref name="get" scoped="" ref="0x407d63f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d64d0"/>
        <function-ref name="set" scoped="" ref="0x407d65b0"/>
        <function-ref name="clr" scoped="" ref="0x407d6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x407c2270" loc="85:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x407c2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c2448"/>
        <function-ref name="isInput" scoped="" ref="0x407c2528"/>
        <function-ref name="toggle" scoped="" ref="0x407c2608"/>
        <function-ref name="isOutput" scoped="" ref="0x407c26e8"/>
        <function-ref name="get" scoped="" ref="0x407c27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c28a8"/>
        <function-ref name="set" scoped="" ref="0x407c2988"/>
        <function-ref name="clr" scoped="" ref="0x407c2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x407d7490" loc="90:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x407d7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d7668"/>
        <function-ref name="isInput" scoped="" ref="0x407d7748"/>
        <function-ref name="toggle" scoped="" ref="0x407d7828"/>
        <function-ref name="isOutput" scoped="" ref="0x407d7908"/>
        <function-ref name="get" scoped="" ref="0x407d79e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d7ac8"/>
        <function-ref name="set" scoped="" ref="0x407d7ba8"/>
        <function-ref name="clr" scoped="" ref="0x407d7c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x407e57f0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x407e57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407e59c8"/>
        <function-ref name="disable" scoped="" ref="0x407e5aa8"/>
        <function-ref name="captured" scoped="" ref="0x407e5b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407e5c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x407e5ef0" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407e5ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cf0e0"/>
        <function-ref name="disable" scoped="" ref="0x407cf1c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407cf2a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407cf380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x407cf618" loc="41:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x407cf618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cf7f0"/>
        <function-ref name="disable" scoped="" ref="0x407cf8d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407cf9b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407cfa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407e3ad0" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407e3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407e3ca8"/>
        <function-ref name="disable" scoped="" ref="0x407e3d88"/>
        <function-ref name="captured" scoped="" ref="0x407e3e68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x407e2220" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x407e2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407f1ca0"/>
        <function-ref name="test" scoped="" ref="0x407f17b0"/>
        <function-ref name="get" scoped="" ref="0x407e2868"/>
        <function-ref name="captured" scoped="" ref="0x407e2d80"/>
        <function-ref name="reset" scoped="" ref="0x407f1048"/>
        <function-ref name="isOn" scoped="" ref="0x407f1a28"/>
        <function-ref name="set" scoped="" ref="0x407e2ae0"/>
        <function-ref name="start" scoped="" ref="0x407f12c0"/>
        <function-ref name="stop" scoped="" ref="0x407f1538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x407efed8" loc="9:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x407efed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ee0c0"/>
        <function-ref name="fired" scoped="" ref="0x407ee1a0"/>
        <function-ref name="disable" scoped="" ref="0x407ee280"/>
        <function-ref name="edge" scoped="" ref="0x407ee360"/>
        <function-ref name="enable" scoped="" ref="0x407ee440"/>
        <function-ref name="getValue" scoped="" ref="0x407ee520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x407ef8e0" loc="8:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x407ef8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407efab8"/>
        <function-ref name="disable" scoped="" ref="0x407efb98"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407efc78"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407efd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x407f6c98" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x407f6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f6e70"/>
        <function-ref name="fired" scoped="" ref="0x407f5010"/>
        <function-ref name="disable" scoped="" ref="0x407f50f0"/>
        <function-ref name="edge" scoped="" ref="0x407f51d0"/>
        <function-ref name="enable" scoped="" ref="0x407f52b0"/>
        <function-ref name="getValue" scoped="" ref="0x407f5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x407f80b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x407f80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f8288"/>
        <function-ref name="fired" scoped="" ref="0x407f8368"/>
        <function-ref name="disable" scoped="" ref="0x407f8448"/>
        <function-ref name="edge" scoped="" ref="0x407f8528"/>
        <function-ref name="enable" scoped="" ref="0x407f8608"/>
        <function-ref name="getValue" scoped="" ref="0x407f86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x407f7ad8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x407f7ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f7cb0"/>
        <function-ref name="fired" scoped="" ref="0x407f7d90"/>
        <function-ref name="disable" scoped="" ref="0x407f7e70"/>
        <function-ref name="edge" scoped="" ref="0x407f6010"/>
        <function-ref name="enable" scoped="" ref="0x407f60f0"/>
        <function-ref name="getValue" scoped="" ref="0x407f61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x407f55d8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x407f55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f57b0"/>
        <function-ref name="fired" scoped="" ref="0x407f5890"/>
        <function-ref name="disable" scoped="" ref="0x407f5970"/>
        <function-ref name="edge" scoped="" ref="0x407f5a50"/>
        <function-ref name="enable" scoped="" ref="0x407f5b30"/>
        <function-ref name="getValue" scoped="" ref="0x407f5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x407f8930" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x407f8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f8b08"/>
        <function-ref name="fired" scoped="" ref="0x407f8be8"/>
        <function-ref name="disable" scoped="" ref="0x407f8cc8"/>
        <function-ref name="edge" scoped="" ref="0x407f8da8"/>
        <function-ref name="enable" scoped="" ref="0x407f8e88"/>
        <function-ref name="getValue" scoped="" ref="0x407f7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x407f6418" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x407f6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f65f0"/>
        <function-ref name="fired" scoped="" ref="0x407f66d0"/>
        <function-ref name="disable" scoped="" ref="0x407f67b0"/>
        <function-ref name="edge" scoped="" ref="0x407f6890"/>
        <function-ref name="enable" scoped="" ref="0x407f6970"/>
        <function-ref name="getValue" scoped="" ref="0x407f6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x407fb810" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x407fb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407fb9e8"/>
        <function-ref name="fired" scoped="" ref="0x407fbac8"/>
        <function-ref name="disable" scoped="" ref="0x407fbba8"/>
        <function-ref name="edge" scoped="" ref="0x407fbc88"/>
        <function-ref name="enable" scoped="" ref="0x407fbd68"/>
        <function-ref name="getValue" scoped="" ref="0x407fbe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x407f7258" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x407f7258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f7430"/>
        <function-ref name="fired" scoped="" ref="0x407f7510"/>
        <function-ref name="disable" scoped="" ref="0x407f75f0"/>
        <function-ref name="edge" scoped="" ref="0x407f76d0"/>
        <function-ref name="enable" scoped="" ref="0x407f77b0"/>
        <function-ref name="getValue" scoped="" ref="0x407f7890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x4080ac50" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x4080ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4080ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x408075c0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x408075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40807798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x4080a360" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x4080a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4080a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x408091a0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x408091a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40809378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40807a38" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40807a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40807c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x4080a7d8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x4080a7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4080a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40807148" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40807148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40807320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40807eb0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40807eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4080a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407f23b0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407f23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f2588"/>
        <function-ref name="fired" scoped="" ref="0x407f2668"/>
        <function-ref name="disable" scoped="" ref="0x407f2748"/>
        <function-ref name="edge" scoped="" ref="0x407f2828"/>
        <function-ref name="enable" scoped="" ref="0x407f2908"/>
        <function-ref name="getValue" scoped="" ref="0x407f29e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407f2b68" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407f2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40820538" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40820538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40820710"/>
        <function-ref name="fired" scoped="" ref="0x408207f0"/>
        <function-ref name="disable" scoped="" ref="0x408208d0"/>
        <function-ref name="edge" scoped="" ref="0x408209b0"/>
        <function-ref name="enable" scoped="" ref="0x40820a90"/>
        <function-ref name="getValue" scoped="" ref="0x40820b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40820cf0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40820cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40820ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4081d6c0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4081d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081d898"/>
        <function-ref name="fired" scoped="" ref="0x4081d978"/>
        <function-ref name="disable" scoped="" ref="0x4081da58"/>
        <function-ref name="edge" scoped="" ref="0x4081db38"/>
        <function-ref name="enable" scoped="" ref="0x4081dc18"/>
        <function-ref name="getValue" scoped="" ref="0x4081dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4081de78" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4081de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081c070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4081b7a8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4081b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081b980"/>
        <function-ref name="fired" scoped="" ref="0x4081ba60"/>
        <function-ref name="disable" scoped="" ref="0x4081bb40"/>
        <function-ref name="edge" scoped="" ref="0x4081bc20"/>
        <function-ref name="enable" scoped="" ref="0x4081bd00"/>
        <function-ref name="getValue" scoped="" ref="0x4081bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4081a010" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4081a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40819a08" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40819a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40819be0"/>
        <function-ref name="fired" scoped="" ref="0x40819cc0"/>
        <function-ref name="disable" scoped="" ref="0x40819da0"/>
        <function-ref name="edge" scoped="" ref="0x40819e80"/>
        <function-ref name="enable" scoped="" ref="0x40818010"/>
        <function-ref name="getValue" scoped="" ref="0x408180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40818270" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40818270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40818448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40831c70" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40831c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40831e48"/>
        <function-ref name="fired" scoped="" ref="0x40831f28"/>
        <function-ref name="disable" scoped="" ref="0x40830018"/>
        <function-ref name="edge" scoped="" ref="0x408300f8"/>
        <function-ref name="enable" scoped="" ref="0x408301d8"/>
        <function-ref name="getValue" scoped="" ref="0x408302b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40830438" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40830438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40830610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082ee68" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082d050"/>
        <function-ref name="fired" scoped="" ref="0x4082d130"/>
        <function-ref name="disable" scoped="" ref="0x4082d210"/>
        <function-ref name="edge" scoped="" ref="0x4082d2f0"/>
        <function-ref name="enable" scoped="" ref="0x4082d3d0"/>
        <function-ref name="getValue" scoped="" ref="0x4082d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082d630" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082b050" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082b228"/>
        <function-ref name="fired" scoped="" ref="0x4082b308"/>
        <function-ref name="disable" scoped="" ref="0x4082b3e8"/>
        <function-ref name="edge" scoped="" ref="0x4082b4c8"/>
        <function-ref name="enable" scoped="" ref="0x4082b5a8"/>
        <function-ref name="getValue" scoped="" ref="0x4082b688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082b808" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x4083e6c8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x4083e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083e8a0"/>
        <function-ref name="isInput" scoped="" ref="0x4083e980"/>
        <function-ref name="toggle" scoped="" ref="0x4083ea60"/>
        <function-ref name="isOutput" scoped="" ref="0x4083eb40"/>
        <function-ref name="get" scoped="" ref="0x4083ec20"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083ed00"/>
        <function-ref name="set" scoped="" ref="0x4083ede0"/>
        <function-ref name="clr" scoped="" ref="0x4083eec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4083e010" loc="47:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4083e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4083e1e8"/>
        <function-ref name="disable" scoped="" ref="0x4083e2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4083e3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4083e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x4083ded8" loc="69:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x4083ded8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4083c0c0"/>
        <function-ref name="runTask" scoped="" ref="0x4083c1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40993bd8" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40993bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40993eb0"/>
        <function-ref name="write" scoped="" ref="0x40992010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40979190" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40979190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40979368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40995270" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40995270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40995448"/>
        <function-ref name="write" scoped="" ref="0x40995528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40992a00" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40992a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40992bd8"/>
        <function-ref name="write" scoped="" ref="0x40992cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x4098e2b0" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST0" scoped="" ref="0x4098e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e488"/>
        <function-ref name="write" scoped="" ref="0x4098e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40992e38" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40992e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40991050"/>
        <function-ref name="write" scoped="" ref="0x40991130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40988b20" loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40988b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40988cf8"/>
        <function-ref name="write" scoped="" ref="0x40988dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40989a00" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40989a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40989bd8"/>
        <function-ref name="write" scoped="" ref="0x40989cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40979b98" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40979b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40979d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x4098b190" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DACTST" scoped="" ref="0x4098b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098b368"/>
        <function-ref name="write" scoped="" ref="0x4098b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40989190" loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40989190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40989368"/>
        <function-ref name="write" scoped="" ref="0x40989448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40995ae0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40995ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40995cb8"/>
        <function-ref name="write" scoped="" ref="0x40995d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40993368" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40993368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40993540"/>
        <function-ref name="write" scoped="" ref="0x40993620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x4098f5c8" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST0" scoped="" ref="0x4098f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098f7a0"/>
        <function-ref name="write" scoped="" ref="0x4098f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40990880" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40990880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40990a58"/>
        <function-ref name="write" scoped="" ref="0x40990b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409912b0" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409912b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40991488"/>
        <function-ref name="write" scoped="" ref="0x40991568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4097b530" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4097b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4097b708"/>
        <function-ref name="abortRelease" scoped="" ref="0x4097b7e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4097b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40997910" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40997910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40997ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40997c68" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40997c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40997ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x4098bc00" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x4098bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098bdd8"/>
        <function-ref name="write" scoped="" ref="0x4098beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40996080" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40996080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40996258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409895c8" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409895c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409897a0"/>
        <function-ref name="write" scoped="" ref="0x40989880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40997260" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40997260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40997438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x4098ccb8" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADCTST" scoped="" ref="0x4098ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ce90"/>
        <function-ref name="write" scoped="" ref="0x4098b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40995f18" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40995f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40993108"/>
        <function-ref name="write" scoped="" ref="0x409931e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409956a8" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409956a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40995880"/>
        <function-ref name="write" scoped="" ref="0x40995960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x4097bda0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x4097bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40979010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x4098c448" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXBPFTST" scoped="" ref="0x4098c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098c620"/>
        <function-ref name="write" scoped="" ref="0x4098c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x4098e6e8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST1" scoped="" ref="0x4098e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e8c0"/>
        <function-ref name="write" scoped="" ref="0x4098e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x4098c880" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMSTATE" scoped="" ref="0x4098c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ca58"/>
        <function-ref name="write" scoped="" ref="0x4098cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409886e8" loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409886e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409888c0"/>
        <function-ref name="write" scoped="" ref="0x409889a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40989e38" loc="105:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40989e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40988050"/>
        <function-ref name="write" scoped="" ref="0x40988130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40990cb8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40990cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40990e90"/>
        <function-ref name="write" scoped="" ref="0x4098f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x4098eb20" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST2" scoped="" ref="0x4098eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ecf8"/>
        <function-ref name="write" scoped="" ref="0x4098edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4098acf8" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4098acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098aed0"/>
        <function-ref name="write" scoped="" ref="0x40989010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40991b20" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40991b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40991cf8"/>
        <function-ref name="write" scoped="" ref="0x40991dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409a6010" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a61e8"/>
        <function-ref name="writeDone" scoped="" ref="0x409a62c8"/>
        <function-ref name="write" scoped="" ref="0x409a63a8"/>
        <function-ref name="beginRead" scoped="" ref="0x409a6488"/>
        <function-ref name="readDone" scoped="" ref="0x409a6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x4097ba48" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x4097ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4097bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40996de0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40996de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40995010"/>
        <function-ref name="write" scoped="" ref="0x409950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409937a0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409937a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40993978"/>
        <function-ref name="write" scoped="" ref="0x40993a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x4098fa00" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST1" scoped="" ref="0x4098fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098fbd8"/>
        <function-ref name="write" scoped="" ref="0x4098fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409916e8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409916e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409918c0"/>
        <function-ref name="write" scoped="" ref="0x409919a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x4098fe38" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST2" scoped="" ref="0x4098fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e050"/>
        <function-ref name="write" scoped="" ref="0x4098e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40992190" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40992190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40992368"/>
        <function-ref name="write" scoped="" ref="0x40992448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409794e8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409794e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409796c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409925c8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409925c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409927a0"/>
        <function-ref name="write" scoped="" ref="0x40992880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4097ce28" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4097ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4097b050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4097b130"/>
        <function-ref name="request" scoped="" ref="0x4097b210"/>
        <function-ref name="granted" scoped="" ref="0x4097b2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4097b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409963d8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409963d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40996a88" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40996a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40996c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4098a8c0" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4098a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098aa98"/>
        <function-ref name="write" scoped="" ref="0x4098ab78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4098a488" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4098a488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098a660"/>
        <function-ref name="write" scoped="" ref="0x4098a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409975b8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409975b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40997790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x4098a050" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4098a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098a228"/>
        <function-ref name="write" scoped="" ref="0x4098a308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409882b0" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409882b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40988488"/>
        <function-ref name="write" scoped="" ref="0x40988568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x4098f190" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x4098f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098f368"/>
        <function-ref name="write" scoped="" ref="0x4098f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x4098c010" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST3" scoped="" ref="0x4098c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098c1e8"/>
        <function-ref name="write" scoped="" ref="0x4098c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40979840" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40979840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40979a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40979ef0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40979ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409970e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40990010" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40990010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409901e8"/>
        <function-ref name="write" scoped="" ref="0x409902c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40996730" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40996730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40996908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40990448" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40990448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40990620"/>
        <function-ref name="write" scoped="" ref="0x40990700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x4098b5c8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOPTST" scoped="" ref="0x4098b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098b9a0"/>
        <function-ref name="write" scoped="" ref="0x4098ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409a66e8" loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409a66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a68c0"/>
        <function-ref name="writeDone" scoped="" ref="0x409a69a0"/>
        <function-ref name="write" scoped="" ref="0x409a6a80"/>
        <function-ref name="beginRead" scoped="" ref="0x409a6b60"/>
        <function-ref name="readDone" scoped="" ref="0x409a6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40861e18" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40861e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40860010"/>
        <function-ref name="writeDone" scoped="" ref="0x408600f0"/>
        <function-ref name="write" scoped="" ref="0x408601d0"/>
        <function-ref name="beginRead" scoped="" ref="0x408602b0"/>
        <function-ref name="readDone" scoped="" ref="0x40860390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40861588" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40861588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40861760"/>
        <function-ref name="abortRelease" scoped="" ref="0x40861840"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40861920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40860880" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40860880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40860a58"/>
        <function-ref name="write" scoped="" ref="0x40860b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4085e100" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4085e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085e2d8"/>
        <function-ref name="write" scoped="" ref="0x4085e3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4084fd98" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4084fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40861010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408610f0"/>
        <function-ref name="request" scoped="" ref="0x408611d0"/>
        <function-ref name="granted" scoped="" ref="0x408612b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40861390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4085e8d8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4085e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4085eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x4086ca28" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4086ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086cc00"/>
        <function-ref name="sendDone" scoped="" ref="0x4086cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4085a788" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4085a788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4085a960"/>
        <function-ref name="writeDone" scoped="" ref="0x4085aa40"/>
        <function-ref name="write" scoped="" ref="0x4085ab20"/>
        <function-ref name="beginRead" scoped="" ref="0x4085ac00"/>
        <function-ref name="readDone" scoped="" ref="0x4085ace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4085b480" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4085b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4085b658"/>
        <function-ref name="abortRelease" scoped="" ref="0x4085b738"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4085b818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4086f5b0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4086f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4086f788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x4086cef8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x4086cef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408710e0"/>
        <function-ref name="toIdle" scoped="" ref="0x408711c0"/>
        <function-ref name="isState" scoped="" ref="0x408712a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40871380"/>
        <function-ref name="requestState" scoped="" ref="0x40871460"/>
        <function-ref name="forceState" scoped="" ref="0x40871540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x408725b8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x408725b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40872790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40872870"/>
        <function-ref name="request" scoped="" ref="0x40872950"/>
        <function-ref name="granted" scoped="" ref="0x40872a30"/>
        <function-ref name="isOwner" scoped="" ref="0x40872b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40859208" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40859208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408593e0"/>
        <function-ref name="write" scoped="" ref="0x408594c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x408599b0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x408599b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40859b88"/>
        <function-ref name="write" scoped="" ref="0x40859c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408716b0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408716b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40871888"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40871968"/>
        <function-ref name="led1On" scoped="" ref="0x40871a48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40871b28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40871c08"/>
        <function-ref name="get" scoped="" ref="0x40871ce8"/>
        <function-ref name="led1Off" scoped="" ref="0x40871dc8"/>
        <function-ref name="led2Off" scoped="" ref="0x408701d0"/>
        <function-ref name="set" scoped="" ref="0x40871ea8"/>
        <function-ref name="led0On" scoped="" ref="0x40870010"/>
        <function-ref name="led2On" scoped="" ref="0x408700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4085bc90" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4085bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4085be68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4085a010"/>
        <function-ref name="request" scoped="" ref="0x4085a0f0"/>
        <function-ref name="granted" scoped="" ref="0x4085a1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4085a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40868520" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40868520"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408686f8"/>
        <function-ref name="runTask" scoped="" ref="0x408687d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40872178" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40872178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40872350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408a0e40" loc="67:/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408a0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408a3050"/>
        <function-ref name="toIdle" scoped="" ref="0x408a3130"/>
        <function-ref name="isState" scoped="" ref="0x408a3210"/>
        <function-ref name="isIdle" scoped="" ref="0x408a32f0"/>
        <function-ref name="requestState" scoped="" ref="0x408a33d0"/>
        <function-ref name="forceState" scoped="" ref="0x408a34b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4089e100" loc="66:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4089e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4089e2d8"/>
        <function-ref name="toIdle" scoped="" ref="0x4089e3b8"/>
        <function-ref name="isState" scoped="" ref="0x4089e498"/>
        <function-ref name="isIdle" scoped="" ref="0x4089e578"/>
        <function-ref name="requestState" scoped="" ref="0x4089e658"/>
        <function-ref name="forceState" scoped="" ref="0x4089e738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b6168" loc="66:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b6168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408b6798" loc="67:/home/van9ogh/Projects/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408b6798"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408b6970"/>
        <function-ref name="toIdle" scoped="" ref="0x408b6a50"/>
        <function-ref name="isState" scoped="" ref="0x408b6b30"/>
        <function-ref name="isIdle" scoped="" ref="0x408b6c10"/>
        <function-ref name="requestState" scoped="" ref="0x408b6cf0"/>
        <function-ref name="forceState" scoped="" ref="0x408b6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40971070" loc="43:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40971070"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40971248"/>
        <function-ref name="sendDone" scoped="" ref="0x40971328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40972d20" loc="42:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40972d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40972ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40972330" loc="39:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40972330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40972508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40972668" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40972668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40972840"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40972920"/>
        <function-ref name="request" scoped="" ref="0x40972a00"/>
        <function-ref name="granted" scoped="" ref="0x40972ae0"/>
        <function-ref name="isOwner" scoped="" ref="0x40972bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408bd790" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408bd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408bd968"/>
        <function-ref name="sendDone" scoped="" ref="0x408bda48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408c4d58" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408c4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c49d8" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c49d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408bd158" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408bd158"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408bd330"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408bd410"/>
        <function-ref name="splitRead" scoped="" ref="0x408bd4f0"/>
        <function-ref name="write" scoped="" ref="0x408bd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408bdee0" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408bdee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408bf0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408bf1c0"/>
        <function-ref name="request" scoped="" ref="0x408bf2a0"/>
        <function-ref name="granted" scoped="" ref="0x408bf380"/>
        <function-ref name="isOwner" scoped="" ref="0x408bf460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x408d2448" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x408d2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x408d2620"/>
        <function-ref name="configure" scoped="" ref="0x408d2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x408ec860" loc="294:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x408ec860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408eca38"/>
        <function-ref name="runTask" scoped="" ref="0x408ecb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408bad40" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408bad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408baf18"/>
        <function-ref name="sendDone" scoped="" ref="0x408b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408ba3a0" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408ba3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408ba578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408ba040" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408ba040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ba218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x408e2320" loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x408e2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408e24f8"/>
        <function-ref name="sleep" scoped="" ref="0x408b8950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408e26b8"/>
        <function-ref name="dataReady" scoped="" ref="0x408b8a30"/>
        <function-ref name="initMaster" scoped="" ref="0x408e2878"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408e2958"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408e2a38"/>
        <function-ref name="read" scoped="" ref="0x408e2b18"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408e2bf8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408e2cd8"/>
        <function-ref name="setClock" scoped="" ref="0x408e2db8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408e2e98"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408b8010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408b8170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408b8250"/>
        <function-ref name="write" scoped="" ref="0x408b8330"/>
        <function-ref name="enableSpi" scoped="" ref="0x408b8410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408b84f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408b85d0"/>
        <function-ref name="getClock" scoped="" ref="0x408b86b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408b8790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408e25d8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408e2798"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408b8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x408ba728" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x408ba728"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x408ba900"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x408ba9e0"/>
        <function-ref name="splitRead" scoped="" ref="0x408baac0"/>
        <function-ref name="write" scoped="" ref="0x408baba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408b8bf8" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408b8bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408b8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x408f52e8" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x408f52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408f54c0"/>
        <function-ref name="sleep" scoped="" ref="0x408f4950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408f5680"/>
        <function-ref name="dataReady" scoped="" ref="0x408f4a30"/>
        <function-ref name="initMaster" scoped="" ref="0x408f5840"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408f5920"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408f5a00"/>
        <function-ref name="read" scoped="" ref="0x408f5ae0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408f5bc0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408f5ca0"/>
        <function-ref name="setClock" scoped="" ref="0x408f5d80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408f5e60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408f4010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408f4170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408f4250"/>
        <function-ref name="write" scoped="" ref="0x408f4330"/>
        <function-ref name="enableSpi" scoped="" ref="0x408f4410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408f44f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408f45d0"/>
        <function-ref name="getClock" scoped="" ref="0x408f46b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408f4790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408f55a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408f5760"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408f4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x409092e0" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x409092e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409094b8"/>
        <function-ref name="isInput" scoped="" ref="0x40909598"/>
        <function-ref name="toggle" scoped="" ref="0x40909678"/>
        <function-ref name="isOutput" scoped="" ref="0x40909758"/>
        <function-ref name="get" scoped="" ref="0x40909838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40909918"/>
        <function-ref name="set" scoped="" ref="0x409099f8"/>
        <function-ref name="clr" scoped="" ref="0x40909ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x4090bea8" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4090bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4090a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4090a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4090a360"/>
        <function-ref name="get" scoped="" ref="0x4090a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090a520"/>
        <function-ref name="set" scoped="" ref="0x4090a600"/>
        <function-ref name="clr" scoped="" ref="0x4090a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4090b4d0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4090b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090b6a8"/>
        <function-ref name="isInput" scoped="" ref="0x4090b788"/>
        <function-ref name="toggle" scoped="" ref="0x4090b868"/>
        <function-ref name="isOutput" scoped="" ref="0x4090b948"/>
        <function-ref name="get" scoped="" ref="0x4090ba28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090bb08"/>
        <function-ref name="set" scoped="" ref="0x4090bbe8"/>
        <function-ref name="clr" scoped="" ref="0x4090bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x4090b010" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4090b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4090b1e8"/>
        <function-ref name="stop" scoped="" ref="0x4090b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40909ce0" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40909ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40909eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x408f36d8" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x408f36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408f38b0"/>
        <function-ref name="sleep" scoped="" ref="0x4090dcd0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408f3a70"/>
        <function-ref name="dataReady" scoped="" ref="0x4090ddb0"/>
        <function-ref name="initMaster" scoped="" ref="0x408f3c30"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408f3d10"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408f3df0"/>
        <function-ref name="read" scoped="" ref="0x408f3ed0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4090d010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4090d0f0"/>
        <function-ref name="setClock" scoped="" ref="0x4090d1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4090d2b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4090d390"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4090d4f0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4090d5d0"/>
        <function-ref name="write" scoped="" ref="0x4090d6b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x4090d790"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4090d870"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4090d950"/>
        <function-ref name="getClock" scoped="" ref="0x4090da30"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4090db10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408f3990"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408f3b50"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4090dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x4090a8d0" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x4090a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090aaa8"/>
        <function-ref name="isInput" scoped="" ref="0x4090ab88"/>
        <function-ref name="toggle" scoped="" ref="0x4090ac68"/>
        <function-ref name="isOutput" scoped="" ref="0x4090ad48"/>
        <function-ref name="get" scoped="" ref="0x4090ae28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090af08"/>
        <function-ref name="set" scoped="" ref="0x40909010"/>
        <function-ref name="clr" scoped="" ref="0x409090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409605a8" loc="86:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409605a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40960790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40960870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40960e60" loc="89:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40960e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4095f070"/>
        <function-ref name="configure" scoped="" ref="0x4095f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4093be18" loc="85:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4093be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40960050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40960130"/>
        <function-ref name="request" scoped="" ref="0x40960210"/>
        <function-ref name="granted" scoped="" ref="0x409602f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409603d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409609b0" loc="87:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40960b88"/>
        <function-ref name="userId" scoped="" ref="0x40960c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417c3a68" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417c3a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417c3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417c3da0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417c3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417c1010"/>
        <function-ref name="isEmpty" scoped="" ref="0x417c10f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417c11d0"/>
        <function-ref name="dequeue" scoped="" ref="0x417c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417c05a8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417c05a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417c0790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417c0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417c0e70" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417c0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417bf070"/>
        <function-ref name="configure" scoped="" ref="0x417bf150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417bf2b0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417bf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417bf488"/>
        <function-ref name="isEmpty" scoped="" ref="0x417bf568"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417bf648"/>
        <function-ref name="dequeue" scoped="" ref="0x417bf728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417c1e18" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417c1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417c0050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417c0130"/>
        <function-ref name="request" scoped="" ref="0x417c0210"/>
        <function-ref name="granted" scoped="" ref="0x417c02f0"/>
        <function-ref name="isOwner" scoped="" ref="0x417c03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417c09b0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417c09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417c0b88"/>
        <function-ref name="userId" scoped="" ref="0x417c0c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417bf8a8" loc="68:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417bf8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417bfa80"/>
        <function-ref name="runTask" scoped="" ref="0x417bfb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4095be28" loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4095be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40978050"/>
        <function-ref name="isInput" scoped="" ref="0x40978130"/>
        <function-ref name="toggle" scoped="" ref="0x40978210"/>
        <function-ref name="isOutput" scoped="" ref="0x409782f0"/>
        <function-ref name="get" scoped="" ref="0x409783d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409784b0"/>
        <function-ref name="set" scoped="" ref="0x40978590"/>
        <function-ref name="clr" scoped="" ref="0x40978670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408c2f20" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408c2f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095b110"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095b1f0"/>
        <function-ref name="request" scoped="" ref="0x4095b2d0"/>
        <function-ref name="granted" scoped="" ref="0x4095b3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4095b490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x4095b6f8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x4095b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095b8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095b9b0"/>
        <function-ref name="request" scoped="" ref="0x4095ba90"/>
        <function-ref name="granted" scoped="" ref="0x4095bb70"/>
        <function-ref name="isOwner" scoped="" ref="0x4095bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40999bd8" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40999bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40999eb0"/>
        <function-ref name="write" scoped="" ref="0x40998010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x4099e190" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x4099e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4099a270" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4099a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099a448"/>
        <function-ref name="write" scoped="" ref="0x4099a528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40998a00" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40998a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40998bd8"/>
        <function-ref name="write" scoped="" ref="0x40998cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x409b32b0" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST0" scoped="" ref="0x409b32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3488"/>
        <function-ref name="write" scoped="" ref="0x409b3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40998e38" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40998e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b7050"/>
        <function-ref name="write" scoped="" ref="0x409b7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409adb20" loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409adb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409adcf8"/>
        <function-ref name="write" scoped="" ref="0x409addd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409afa00" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409afa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409afbd8"/>
        <function-ref name="write" scoped="" ref="0x409afcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x4099eb98" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x4099eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x409b1190" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DACTST" scoped="" ref="0x409b1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b1368"/>
        <function-ref name="write" scoped="" ref="0x409b1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409af190" loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409af190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409af368"/>
        <function-ref name="write" scoped="" ref="0x409af448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4099aae0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4099aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099acb8"/>
        <function-ref name="write" scoped="" ref="0x4099ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40999368" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40999368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40999540"/>
        <function-ref name="write" scoped="" ref="0x40999620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x409b55c8" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST0" scoped="" ref="0x409b55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b57a0"/>
        <function-ref name="write" scoped="" ref="0x409b5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409b6880" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409b6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b6a58"/>
        <function-ref name="write" scoped="" ref="0x409b6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409b72b0" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409b72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b7488"/>
        <function-ref name="write" scoped="" ref="0x409b7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4099f550" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4099f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4099f728"/>
        <function-ref name="abortRelease" scoped="" ref="0x4099f808"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4099f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x4099d910" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x4099d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x4099dc68" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x4099dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x409b1c00" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x409b1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b1dd8"/>
        <function-ref name="write" scoped="" ref="0x409b1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x4099c080" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x4099c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099c258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409af5c8" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409af5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409af7a0"/>
        <function-ref name="write" scoped="" ref="0x409af880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x4099d260" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x4099d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x409b2cb8" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADCTST" scoped="" ref="0x409b2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2e90"/>
        <function-ref name="write" scoped="" ref="0x409b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4099af18" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x4099af18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40999108"/>
        <function-ref name="write" scoped="" ref="0x409991e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4099a6a8" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4099a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099a880"/>
        <function-ref name="write" scoped="" ref="0x4099a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x4099fdc0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x4099fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x409b2448" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXBPFTST" scoped="" ref="0x409b2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2620"/>
        <function-ref name="write" scoped="" ref="0x409b2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x409b36e8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST1" scoped="" ref="0x409b36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b38c0"/>
        <function-ref name="write" scoped="" ref="0x409b39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x409b2880" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMSTATE" scoped="" ref="0x409b2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2a58"/>
        <function-ref name="write" scoped="" ref="0x409b2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409ad6e8" loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409ad6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad8c0"/>
        <function-ref name="write" scoped="" ref="0x409ad9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409afe38" loc="105:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409afe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad050"/>
        <function-ref name="write" scoped="" ref="0x409ad130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409b6cb8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409b6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b6e90"/>
        <function-ref name="write" scoped="" ref="0x409b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x409b3b20" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST2" scoped="" ref="0x409b3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3cf8"/>
        <function-ref name="write" scoped="" ref="0x409b3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409b0cf8" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409b0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b0ed0"/>
        <function-ref name="write" scoped="" ref="0x409af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409b7b20" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409b7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b7cf8"/>
        <function-ref name="write" scoped="" ref="0x409b7dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409ac010" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409ac1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x409ac2c8"/>
        <function-ref name="write" scoped="" ref="0x409ac3a8"/>
        <function-ref name="beginRead" scoped="" ref="0x409ac488"/>
        <function-ref name="readDone" scoped="" ref="0x409ac568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x4099fa68" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x4099fa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x4099cde0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x4099cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099a010"/>
        <function-ref name="write" scoped="" ref="0x4099a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409997a0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40999978"/>
        <function-ref name="write" scoped="" ref="0x40999a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x409b5a00" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST1" scoped="" ref="0x409b5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b5bd8"/>
        <function-ref name="write" scoped="" ref="0x409b5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409b76e8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409b76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b78c0"/>
        <function-ref name="write" scoped="" ref="0x409b79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x409b5e38" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST2" scoped="" ref="0x409b5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b3050"/>
        <function-ref name="write" scoped="" ref="0x409b3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40998190" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40998190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40998368"/>
        <function-ref name="write" scoped="" ref="0x40998448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x4099e4e8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x4099e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409985c8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409985c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409987a0"/>
        <function-ref name="write" scoped="" ref="0x40998880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409a0e88" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409a0e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4099f070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4099f150"/>
        <function-ref name="request" scoped="" ref="0x4099f230"/>
        <function-ref name="granted" scoped="" ref="0x4099f310"/>
        <function-ref name="isOwner" scoped="" ref="0x4099f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x4099c3d8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x4099c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4099ca88" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x4099ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409b08c0" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409b08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b0a98"/>
        <function-ref name="write" scoped="" ref="0x409b0b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409b0488" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409b0488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b0660"/>
        <function-ref name="write" scoped="" ref="0x409b0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x4099d5b8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x4099d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409b0050" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409b0050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b0228"/>
        <function-ref name="write" scoped="" ref="0x409b0308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409ad2b0" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409ad2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad488"/>
        <function-ref name="write" scoped="" ref="0x409ad568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409b5190" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409b5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b5368"/>
        <function-ref name="write" scoped="" ref="0x409b5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x409b2010" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST3" scoped="" ref="0x409b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b21e8"/>
        <function-ref name="write" scoped="" ref="0x409b22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x4099e840" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x4099e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x4099eef0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x4099eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409b6010" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b61e8"/>
        <function-ref name="write" scoped="" ref="0x409b62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x4099c730" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x4099c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4099c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409b6448" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409b6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b6620"/>
        <function-ref name="write" scoped="" ref="0x409b6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x409b15c8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOPTST" scoped="" ref="0x409b15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b19a0"/>
        <function-ref name="write" scoped="" ref="0x409b1a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409ac6e8" loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409ac6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409ac8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x409ac9a0"/>
        <function-ref name="write" scoped="" ref="0x409aca80"/>
        <function-ref name="beginRead" scoped="" ref="0x409acb60"/>
        <function-ref name="readDone" scoped="" ref="0x409acc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409c1880" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409c1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c1b58"/>
        <function-ref name="write" scoped="" ref="0x409c1c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409c7c28" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409c7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409c3e50" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2050"/>
        <function-ref name="write" scoped="" ref="0x409c2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409c06a8" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409c06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c0880"/>
        <function-ref name="write" scoped="" ref="0x409c0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x409bce38" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST0" scoped="" ref="0x409bce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb050"/>
        <function-ref name="write" scoped="" ref="0x409bb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x409c0ae0" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x409c0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c0cb8"/>
        <function-ref name="write" scoped="" ref="0x409c0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409d56e8" loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409d56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d58c0"/>
        <function-ref name="write" scoped="" ref="0x409d59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409d65c8" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409d65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d67a0"/>
        <function-ref name="write" scoped="" ref="0x409d6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409c66c0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409c66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x409bacb8" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DACTST" scoped="" ref="0x409bacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bae90"/>
        <function-ref name="write" scoped="" ref="0x409b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409d7cf8" loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409d7cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d7ed0"/>
        <function-ref name="write" scoped="" ref="0x409d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409c26e8" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409c26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c28c0"/>
        <function-ref name="write" scoped="" ref="0x409c29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409c1010" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c11e8"/>
        <function-ref name="write" scoped="" ref="0x409c12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x409bc190" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST0" scoped="" ref="0x409bc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bc368"/>
        <function-ref name="write" scoped="" ref="0x409bc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409bd468" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409bd468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bd640"/>
        <function-ref name="write" scoped="" ref="0x409bd720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409c0f18" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409c0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bf108"/>
        <function-ref name="write" scoped="" ref="0x409bf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409c7060" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409c7238"/>
        <function-ref name="abortRelease" scoped="" ref="0x409c7318"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409c73f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409c54e8" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409c54e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409c5840" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409c5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x409b97c8" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x409b97c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b99a0"/>
        <function-ref name="write" scoped="" ref="0x409b9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409c5c18" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409c5c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409d6190" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409d6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d6368"/>
        <function-ref name="write" scoped="" ref="0x409d6448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409c6d70" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409c6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x409ba880" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADCTST" scoped="" ref="0x409ba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409baa58"/>
        <function-ref name="write" scoped="" ref="0x409bab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409c2b20" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409c2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2cf8"/>
        <function-ref name="write" scoped="" ref="0x409c2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409c22b0" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409c22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c2488"/>
        <function-ref name="write" scoped="" ref="0x409c2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409c78d0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409c78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x409ba010" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXBPFTST" scoped="" ref="0x409ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba1e8"/>
        <function-ref name="write" scoped="" ref="0x409ba2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x409bb2b0" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST1" scoped="" ref="0x409bb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb488"/>
        <function-ref name="write" scoped="" ref="0x409bb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x409ba448" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMSTATE" scoped="" ref="0x409ba448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba620"/>
        <function-ref name="write" scoped="" ref="0x409ba700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409d52b0" loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409d52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d5488"/>
        <function-ref name="write" scoped="" ref="0x409d5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x409d6a00" loc="105:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x409d6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d6bd8"/>
        <function-ref name="write" scoped="" ref="0x409d6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409bd8a0" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409bd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bda78"/>
        <function-ref name="write" scoped="" ref="0x409bdb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x409bb6e8" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST2" scoped="" ref="0x409bb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb8c0"/>
        <function-ref name="write" scoped="" ref="0x409bb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409d78c0" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409d78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d7a98"/>
        <function-ref name="write" scoped="" ref="0x409d7b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409bf7a0" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bf978"/>
        <function-ref name="write" scoped="" ref="0x409bfa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409d5b20" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409d5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d5cf8"/>
        <function-ref name="writeDone" scoped="" ref="0x409d5dd8"/>
        <function-ref name="write" scoped="" ref="0x409d5eb8"/>
        <function-ref name="beginRead" scoped="" ref="0x409d4010"/>
        <function-ref name="readDone" scoped="" ref="0x409d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409c7578" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409c7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c7750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409c3a18" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409c3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c3bf0"/>
        <function-ref name="write" scoped="" ref="0x409c3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x409c1448" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x409c1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c1620"/>
        <function-ref name="write" scoped="" ref="0x409c1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x409bc5c8" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST1" scoped="" ref="0x409bc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bc7a0"/>
        <function-ref name="write" scoped="" ref="0x409bc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409bf368" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409bf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bf540"/>
        <function-ref name="write" scoped="" ref="0x409bf620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x409bca00" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST2" scoped="" ref="0x409bca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bcbd8"/>
        <function-ref name="write" scoped="" ref="0x409bccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409c1db8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409c1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c0010"/>
        <function-ref name="write" scoped="" ref="0x409c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409c6010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409c6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409c0270" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409c0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c0448"/>
        <function-ref name="write" scoped="" ref="0x409c0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409a8980" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409a8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409a8b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409a8c38"/>
        <function-ref name="request" scoped="" ref="0x409a8d18"/>
        <function-ref name="granted" scoped="" ref="0x409a8df8"/>
        <function-ref name="isOwner" scoped="" ref="0x409a8ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409c3010" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409c36c0" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409c36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409d7488" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409d7488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d7660"/>
        <function-ref name="write" scoped="" ref="0x409d7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409d7050" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409d7050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d7228"/>
        <function-ref name="write" scoped="" ref="0x409d7308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409c5190" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409c5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c5368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409b9c00" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409b9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b9dd8"/>
        <function-ref name="write" scoped="" ref="0x409b9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409d6e38" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409d6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d5050"/>
        <function-ref name="write" scoped="" ref="0x409d5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409bdcd8" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409bdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bdeb0"/>
        <function-ref name="write" scoped="" ref="0x409bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x409bbb20" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST3" scoped="" ref="0x409bbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bbcf8"/>
        <function-ref name="write" scoped="" ref="0x409bbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409c6368" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409c6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c6540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409c6a18" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409c6a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409bfbd8" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409bfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bfdb0"/>
        <function-ref name="write" scoped="" ref="0x409bfe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409c3368" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409c3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409c3540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409bd030" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409bd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bd208"/>
        <function-ref name="write" scoped="" ref="0x409bd2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x409b9190" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOPTST" scoped="" ref="0x409b9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b9568"/>
        <function-ref name="write" scoped="" ref="0x409b9648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409d4270" loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409d4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409d4448"/>
        <function-ref name="writeDone" scoped="" ref="0x409d4528"/>
        <function-ref name="write" scoped="" ref="0x409d4608"/>
        <function-ref name="beginRead" scoped="" ref="0x409d46e8"/>
        <function-ref name="readDone" scoped="" ref="0x409d47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409d0730" loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409d0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409d0908"/>
        <function-ref name="changed" scoped="" ref="0x409d09e8"/>
        <function-ref name="amGroup" scoped="" ref="0x409d0ac8"/>
        <function-ref name="setAddress" scoped="" ref="0x409d0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x409cf9f0" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x409cf9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x409cfbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409d8d30" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409d8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409d8f08"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409f7010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409f70f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409f71d0"/>
        <function-ref name="setCca" scoped="" ref="0x409f72b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409f7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409f7e28" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409f7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x409d8618" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x409d8618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d87f0"/>
        <function-ref name="cancel" scoped="" ref="0x409d88d0"/>
        <function-ref name="modify" scoped="" ref="0x409d89b0"/>
        <function-ref name="sendDone" scoped="" ref="0x409d8a90"/>
        <function-ref name="resend" scoped="" ref="0x409d8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409d8190" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409d8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d8368"/>
        <function-ref name="stop" scoped="" ref="0x409d8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409f62e0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409f62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40a02a68" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40a02a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40a02c40"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40a02d20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40a02e00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40a02ee0"/>
        <function-ref name="setCca" scoped="" ref="0x40a01010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40a010f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409fd850" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409fd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409fc3c0"/>
        <function-ref name="clear" scoped="" ref="0x409fc770"/>
        <function-ref name="isValid" scoped="" ref="0x409fc010"/>
        <function-ref name="set" scoped="" ref="0x409fcb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40a11438" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a11438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a11610"/>
        <function-ref name="write" scoped="" ref="0x40a116f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40a11900" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a11900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a11ad8"/>
        <function-ref name="write" scoped="" ref="0x40a11bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40a013b0" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40a013b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a01588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40a13c30" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a13c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a13e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40a17e58" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40a17e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409f9050"/>
        <function-ref name="disable" scoped="" ref="0x409f9130"/>
        <function-ref name="captured" scoped="" ref="0x409f9210"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409f92f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40a01e00" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40a01e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409fe350"/>
        <function-ref name="fired" scoped="" ref="0x40a00a88"/>
        <function-ref name="startAt" scoped="" ref="0x409fe010"/>
        <function-ref name="isRunning" scoped="" ref="0x40a00d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x409fe5c8"/>
        <function-ref name="start" scoped="" ref="0x40a00570"/>
        <function-ref name="stop" scoped="" ref="0x40a00810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x409fe878" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x409fe878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x409fea50"/>
        <function-ref name="setNetwork" scoped="" ref="0x409feb30"/>
        <function-ref name="getRssi" scoped="" ref="0x409fec10"/>
        <function-ref name="getNetwork" scoped="" ref="0x409fecf0"/>
        <function-ref name="getPower" scoped="" ref="0x409fedd0"/>
        <function-ref name="getLqi" scoped="" ref="0x409feeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40a149d8" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a149d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a14bb0"/>
        <function-ref name="write" scoped="" ref="0x40a14c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40a14ee0" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a14ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a130e0"/>
        <function-ref name="write" scoped="" ref="0x40a131c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40a0c120" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a0c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0c2f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a0c3d8"/>
        <function-ref name="sfd" scoped="" ref="0x40a0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a02330" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a02330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a02508"/>
        <function-ref name="cancel" scoped="" ref="0x40a025e8"/>
        <function-ref name="modify" scoped="" ref="0x40a026c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a027a8"/>
        <function-ref name="resend" scoped="" ref="0x40a02888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40a15c48" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a15c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a15e20"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a15f00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a14010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40a12088" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a12088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a12260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a16010" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a161e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a162c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a163a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a16488"/>
        <function-ref name="get" scoped="" ref="0x40a16568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a16648"/>
        <function-ref name="set" scoped="" ref="0x40a16728"/>
        <function-ref name="clr" scoped="" ref="0x40a16808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a03a48" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a03a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a03c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409fd108" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409fd108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x409fd2e0"/>
        <function-ref name="getHeader" scoped="" ref="0x409fd3c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x409fd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40a17788" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a17788"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a17960"/>
        <function-ref name="isSet" scoped="" ref="0x40a17a40"/>
        <function-ref name="cancel" scoped="" ref="0x40a17b20"/>
        <function-ref name="set" scoped="" ref="0x40a17c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40a124c8" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a124c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a127a0"/>
        <function-ref name="write" scoped="" ref="0x40a12880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a154f8" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a154f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a156d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a157b0"/>
        <function-ref name="request" scoped="" ref="0x40a15890"/>
        <function-ref name="granted" scoped="" ref="0x40a15970"/>
        <function-ref name="isOwner" scoped="" ref="0x40a15a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x409f94f0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409f94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f9748"/>
        <function-ref name="isInput" scoped="" ref="0x409f9828"/>
        <function-ref name="toggle" scoped="" ref="0x409f9908"/>
        <function-ref name="isOutput" scoped="" ref="0x409f99e8"/>
        <function-ref name="get" scoped="" ref="0x409f9ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f9ba8"/>
        <function-ref name="set" scoped="" ref="0x409f9c88"/>
        <function-ref name="clr" scoped="" ref="0x409f9d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40a11dc8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a11dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a10010"/>
        <function-ref name="write" scoped="" ref="0x40a100f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40a10318" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40a10318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a104f0"/>
        <function-ref name="write" scoped="" ref="0x40a105d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a133f0" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a133f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a135c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40a16a08" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40a16a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a16be0"/>
        <function-ref name="isInput" scoped="" ref="0x40a16cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40a16da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a16e80"/>
        <function-ref name="get" scoped="" ref="0x40a15010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a150f0"/>
        <function-ref name="set" scoped="" ref="0x40a151d0"/>
        <function-ref name="clr" scoped="" ref="0x40a152b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a0c648" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a0c648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a0c820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a0c900"/>
        <function-ref name="led1On" scoped="" ref="0x40a0c9e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a0cac0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a0cba0"/>
        <function-ref name="get" scoped="" ref="0x40a0cc80"/>
        <function-ref name="led1Off" scoped="" ref="0x40a0cd60"/>
        <function-ref name="led2Off" scoped="" ref="0x40a0f0f8"/>
        <function-ref name="set" scoped="" ref="0x40a0ce40"/>
        <function-ref name="led0On" scoped="" ref="0x40a0cf20"/>
        <function-ref name="led2On" scoped="" ref="0x40a0f018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40a12f00" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a12f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a110f0"/>
        <function-ref name="write" scoped="" ref="0x40a111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a03de8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a03de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a02010"/>
        <function-ref name="stop" scoped="" ref="0x40a020f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40a14238" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a14238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a14410"/>
        <function-ref name="writeDone" scoped="" ref="0x40a144f0"/>
        <function-ref name="write" scoped="" ref="0x40a145d0"/>
        <function-ref name="beginRead" scoped="" ref="0x40a146b0"/>
        <function-ref name="readDone" scoped="" ref="0x40a14790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40a13800" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a13800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a139d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40a12ac0" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a12ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a12c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40a01838" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40a01838"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a01a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a60bd8" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a60bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a60eb0"/>
        <function-ref name="write" scoped="" ref="0x40a5e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a64190" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a64190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a64368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a61270" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a61270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a61448"/>
        <function-ref name="write" scoped="" ref="0x40a61528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a5ea00" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a5ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5ebd8"/>
        <function-ref name="write" scoped="" ref="0x40a5ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x40a7c2b0" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST0" scoped="" ref="0x40a7c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7c488"/>
        <function-ref name="write" scoped="" ref="0x40a7c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a5ee38" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a5ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5d050"/>
        <function-ref name="write" scoped="" ref="0x40a5d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40a76b20" loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40a76b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a76cf8"/>
        <function-ref name="write" scoped="" ref="0x40a76dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40a77a00" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a77a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a77bd8"/>
        <function-ref name="write" scoped="" ref="0x40a77cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a64b98" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a64b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a64d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x40a79190" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DACTST" scoped="" ref="0x40a79190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a79368"/>
        <function-ref name="write" scoped="" ref="0x40a79448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a77190" loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a77190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a77368"/>
        <function-ref name="write" scoped="" ref="0x40a77448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a61ae0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a61ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a61cb8"/>
        <function-ref name="write" scoped="" ref="0x40a61d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a60368" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a60368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a60540"/>
        <function-ref name="write" scoped="" ref="0x40a60620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x40a7d5c8" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST0" scoped="" ref="0x40a7d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7d7a0"/>
        <function-ref name="write" scoped="" ref="0x40a7d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a7e880" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a7e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ea58"/>
        <function-ref name="write" scoped="" ref="0x40a7eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a5d2b0" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a5d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5d488"/>
        <function-ref name="write" scoped="" ref="0x40a5d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a66530" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a66530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a66708"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a667e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a668c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a63910" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a63910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a63ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a63c68" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a63c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a63ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x40a79c00" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x40a79c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a79dd8"/>
        <function-ref name="write" scoped="" ref="0x40a79eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a62080" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a62080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a62258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40a775c8" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a775c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a777a0"/>
        <function-ref name="write" scoped="" ref="0x40a77880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a63260" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a63260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a63438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x40a7acb8" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADCTST" scoped="" ref="0x40a7acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ae90"/>
        <function-ref name="write" scoped="" ref="0x40a79010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a61f18" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a61f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a60108"/>
        <function-ref name="write" scoped="" ref="0x40a601e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a616a8" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a616a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a61880"/>
        <function-ref name="write" scoped="" ref="0x40a61960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a66da0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a66da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x40a7a448" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXBPFTST" scoped="" ref="0x40a7a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7a620"/>
        <function-ref name="write" scoped="" ref="0x40a7a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x40a7c6e8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST1" scoped="" ref="0x40a7c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7c8c0"/>
        <function-ref name="write" scoped="" ref="0x40a7c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x40a7a880" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMSTATE" scoped="" ref="0x40a7a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7aa58"/>
        <function-ref name="write" scoped="" ref="0x40a7ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40a766e8" loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40a766e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a768c0"/>
        <function-ref name="write" scoped="" ref="0x40a769a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40a77e38" loc="105:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a77e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a76050"/>
        <function-ref name="write" scoped="" ref="0x40a76130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a7ecb8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a7ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ee90"/>
        <function-ref name="write" scoped="" ref="0x40a7d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x40a7cb20" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST2" scoped="" ref="0x40a7cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7ccf8"/>
        <function-ref name="write" scoped="" ref="0x40a7cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a78cf8" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a78cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a78ed0"/>
        <function-ref name="write" scoped="" ref="0x40a77010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a5db20" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a5db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5dcf8"/>
        <function-ref name="write" scoped="" ref="0x40a5ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a75010" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a75010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a751e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40a752c8"/>
        <function-ref name="write" scoped="" ref="0x40a753a8"/>
        <function-ref name="beginRead" scoped="" ref="0x40a75488"/>
        <function-ref name="readDone" scoped="" ref="0x40a75568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a66a48" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a66a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a66c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a62de0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a62de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a61010"/>
        <function-ref name="write" scoped="" ref="0x40a610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a607a0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a607a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a60978"/>
        <function-ref name="write" scoped="" ref="0x40a60a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x40a7da00" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST1" scoped="" ref="0x40a7da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7dbd8"/>
        <function-ref name="write" scoped="" ref="0x40a7dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a5d6e8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a5d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5d8c0"/>
        <function-ref name="write" scoped="" ref="0x40a5d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x40a7de38" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST2" scoped="" ref="0x40a7de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7c050"/>
        <function-ref name="write" scoped="" ref="0x40a7c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a5e190" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a5e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5e368"/>
        <function-ref name="write" scoped="" ref="0x40a5e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a644e8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a644e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a646c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a5e5c8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a5e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5e7a0"/>
        <function-ref name="write" scoped="" ref="0x40a5e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a67e60" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a67e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a66050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a66130"/>
        <function-ref name="request" scoped="" ref="0x40a66210"/>
        <function-ref name="granted" scoped="" ref="0x40a662f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a663d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a623d8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a623d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a62a88" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a62a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a62c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a788c0" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a788c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a78a98"/>
        <function-ref name="write" scoped="" ref="0x40a78b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a78488" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a78488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a78660"/>
        <function-ref name="write" scoped="" ref="0x40a78740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a635b8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a63790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40a78050" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a78050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a78228"/>
        <function-ref name="write" scoped="" ref="0x40a78308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40a762b0" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40a762b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a76488"/>
        <function-ref name="write" scoped="" ref="0x40a76568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a7d190" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a7d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7d368"/>
        <function-ref name="write" scoped="" ref="0x40a7d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x40a7a010" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST3" scoped="" ref="0x40a7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7a1e8"/>
        <function-ref name="write" scoped="" ref="0x40a7a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a64840" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a64840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a64a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a64ef0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a64ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a630e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a7e010" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a7e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7e1e8"/>
        <function-ref name="write" scoped="" ref="0x40a7e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a62730" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a62730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a62908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a7e448" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a7e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7e620"/>
        <function-ref name="write" scoped="" ref="0x40a7e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x40a795c8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOPTST" scoped="" ref="0x40a795c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a799a0"/>
        <function-ref name="write" scoped="" ref="0x40a79a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a756e8" loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a756e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a758c0"/>
        <function-ref name="writeDone" scoped="" ref="0x40a759a0"/>
        <function-ref name="write" scoped="" ref="0x40a75a80"/>
        <function-ref name="beginRead" scoped="" ref="0x40a75b60"/>
        <function-ref name="readDone" scoped="" ref="0x40a75c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a8e620" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a8e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8e7f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a8e8d8"/>
        <function-ref name="sfd" scoped="" ref="0x40a8e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a8eb60" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a8eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8ed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a8d010" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a8d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a8d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a8e180" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a8e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a8e358"/>
        <function-ref name="stop" scoped="" ref="0x40a8e438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a89cc8" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a89cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a89ea0"/>
        <function-ref name="isInput" scoped="" ref="0x40a88010"/>
        <function-ref name="toggle" scoped="" ref="0x40a880f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a881d0"/>
        <function-ref name="get" scoped="" ref="0x40a882b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a88390"/>
        <function-ref name="set" scoped="" ref="0x40a88470"/>
        <function-ref name="clr" scoped="" ref="0x40a88550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40a84010" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40a84010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40a841e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40a842c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40a843a8"/>
        <function-ref name="syncDone" scoped="" ref="0x40a84488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40a84568"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40a84648"/>
        <function-ref name="setChannel" scoped="" ref="0x40a84728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40a84808"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40a848e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40a849c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40a84aa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40a84b88"/>
        <function-ref name="sync" scoped="" ref="0x40a84c68"/>
        <function-ref name="getChannel" scoped="" ref="0x40a84dc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40a84ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40a9b330" loc="148:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40a9b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a9b508"/>
        <function-ref name="runTask" scoped="" ref="0x40a9b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a832b0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a832b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a83db0"/>
        <function-ref name="clear" scoped="" ref="0x40a81170"/>
        <function-ref name="isValid" scoped="" ref="0x40a83a00"/>
        <function-ref name="set" scoped="" ref="0x40a81520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a88768" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a88768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a88940"/>
        <function-ref name="isInput" scoped="" ref="0x40a88a20"/>
        <function-ref name="toggle" scoped="" ref="0x40a88b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40a88be0"/>
        <function-ref name="get" scoped="" ref="0x40a88cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a88da0"/>
        <function-ref name="set" scoped="" ref="0x40a88e80"/>
        <function-ref name="clr" scoped="" ref="0x40a87010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40a80398" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a80398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a80570"/>
        <function-ref name="write" scoped="" ref="0x40a80650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40a80860" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40a80860"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a80a38"/>
        <function-ref name="write" scoped="" ref="0x40a80b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40a7f238" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40a7f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7f410"/>
        <function-ref name="write" scoped="" ref="0x40a7f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a851f0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a851f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a853c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40a854a8"/>
        <function-ref name="getRssi" scoped="" ref="0x40a85588"/>
        <function-ref name="getNetwork" scoped="" ref="0x40a85668"/>
        <function-ref name="getPower" scoped="" ref="0x40a85748"/>
        <function-ref name="getLqi" scoped="" ref="0x40a85828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a8a500" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a8a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8a6d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a8a7b8"/>
        <function-ref name="sfd" scoped="" ref="0x40a8a898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40a868b0" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a868b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a86a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a892c0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a892c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a89498"/>
        <function-ref name="isInput" scoped="" ref="0x40a89578"/>
        <function-ref name="toggle" scoped="" ref="0x40a89658"/>
        <function-ref name="isOutput" scoped="" ref="0x40a89738"/>
        <function-ref name="get" scoped="" ref="0x40a89818"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a898f8"/>
        <function-ref name="set" scoped="" ref="0x40a899d8"/>
        <function-ref name="clr" scoped="" ref="0x40a89ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40a7f738" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40a7f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7f910"/>
        <function-ref name="write" scoped="" ref="0x40a7f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a8dca8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a8dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a8de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a85a30" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a85a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40a85c08"/>
        <function-ref name="getHeader" scoped="" ref="0x40a85ce8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a85dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a8aa40" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a8aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8ac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a87968" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a87968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a87b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a87c20"/>
        <function-ref name="request" scoped="" ref="0x40a87d00"/>
        <function-ref name="granted" scoped="" ref="0x40a87de0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a87ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40a80d28" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40a80d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a80f00"/>
        <function-ref name="write" scoped="" ref="0x40a7f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40a86128" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a86128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a86300"/>
        <function-ref name="writeDone" scoped="" ref="0x40a863e0"/>
        <function-ref name="write" scoped="" ref="0x40a864c0"/>
        <function-ref name="beginRead" scoped="" ref="0x40a865a0"/>
        <function-ref name="readDone" scoped="" ref="0x40a86680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40a7fc20" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a7fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a7fef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a8aed8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a8aed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a890c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aa20a0" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aa20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aa2278"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aa2358"/>
        <function-ref name="led1On" scoped="" ref="0x40aa2438"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aa2518"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aa25f8"/>
        <function-ref name="get" scoped="" ref="0x40aa26d8"/>
        <function-ref name="led1Off" scoped="" ref="0x40aa27b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40aa2b38"/>
        <function-ref name="set" scoped="" ref="0x40aa2898"/>
        <function-ref name="led0On" scoped="" ref="0x40aa2978"/>
        <function-ref name="led2On" scoped="" ref="0x40aa2a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40a81e58" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a81e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a80050"/>
        <function-ref name="write" scoped="" ref="0x40a80130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40a81a18" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a81a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a81bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a872a8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a872a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a87480"/>
        <function-ref name="disable" scoped="" ref="0x40a87560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a87640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a87720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40a86ce0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a86ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a8a060" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a8a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a8a238"/>
        <function-ref name="stop" scoped="" ref="0x40a8a318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ad0b20" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ad0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ad0cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ad36b0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ad36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ad3888"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ad3968"/>
        <function-ref name="getRssi" scoped="" ref="0x40ad3a48"/>
        <function-ref name="getNetwork" scoped="" ref="0x40ad3b28"/>
        <function-ref name="getPower" scoped="" ref="0x40ad3c08"/>
        <function-ref name="getLqi" scoped="" ref="0x40ad3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40acf1a0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40acf1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40acfca0"/>
        <function-ref name="clear" scoped="" ref="0x40ace068"/>
        <function-ref name="isValid" scoped="" ref="0x40acf8f0"/>
        <function-ref name="set" scoped="" ref="0x40ace418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ad0590" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ad0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40ad0768"/>
        <function-ref name="getHeader" scoped="" ref="0x40ad0848"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ad0928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40acb308" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40acb308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40acb4e0"/>
        <function-ref name="isSet" scoped="" ref="0x40acb5c0"/>
        <function-ref name="cancel" scoped="" ref="0x40acb6a0"/>
        <function-ref name="set" scoped="" ref="0x40acb780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40aceb50" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aceb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40acc6b8"/>
        <function-ref name="clear" scoped="" ref="0x40acca68"/>
        <function-ref name="isValid" scoped="" ref="0x40acc308"/>
        <function-ref name="set" scoped="" ref="0x40acce18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ad0010" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ad0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ad01e8"/>
        <function-ref name="noAck" scoped="" ref="0x40ad02c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ad03a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ac74c8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ac74c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ac76a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40ac8100" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40ac8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ac82d8"/>
        <function-ref name="setNetwork" scoped="" ref="0x40ac83b8"/>
        <function-ref name="getRssi" scoped="" ref="0x40ac8498"/>
        <function-ref name="getNetwork" scoped="" ref="0x40ac8578"/>
        <function-ref name="getPower" scoped="" ref="0x40ac8658"/>
        <function-ref name="getLqi" scoped="" ref="0x40ac8738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40ae5380" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ae5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ae5558"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ae5638"/>
        <function-ref name="getPayload" scoped="" ref="0x40ae5718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ae57f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ae58d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40ac7b20" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40ac7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ae96b8"/>
        <function-ref name="clear" scoped="" ref="0x40ae9a68"/>
        <function-ref name="isValid" scoped="" ref="0x40ae9308"/>
        <function-ref name="set" scoped="" ref="0x40ae9e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40ac8f28" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40ac8f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40ac7110"/>
        <function-ref name="getHeader" scoped="" ref="0x40ac71f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40ac72d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40ae7cb0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ae7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae7e88"/>
        <function-ref name="isSet" scoped="" ref="0x40ae5010"/>
        <function-ref name="cancel" scoped="" ref="0x40ae50f0"/>
        <function-ref name="set" scoped="" ref="0x40ae51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40ae2950" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40ae2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40ae4420" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ae4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ae8578" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ae8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ae7088"/>
        <function-ref name="clear" scoped="" ref="0x40ae7438"/>
        <function-ref name="isValid" scoped="" ref="0x40ae8cc8"/>
        <function-ref name="set" scoped="" ref="0x40ae77e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ac89a8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ac89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ac8b80"/>
        <function-ref name="noAck" scoped="" ref="0x40ac8c60"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ac8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b1ee70" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b1ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40afe4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40afe828" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40afe828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396510"/>
            <typename><typedef-ref name="T32khz" ref="0x403966d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40afd010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40afd500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40afd288"/>
        <function-ref name="overflow" scoped="" ref="0x40afd778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b12a78" loc="46:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b12a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b11570"/>
        <function-ref name="fired" scoped="" ref="0x40b18810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b18f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b18cc0"/>
        <function-ref name="getdt" scoped="" ref="0x40b11a20"/>
        <function-ref name="gett0" scoped="" ref="0x40b117c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b18a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b180b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b11250"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b18338"/>
        <function-ref name="stop" scoped="" ref="0x40b185b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b11d80" loc="47:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b11d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b103e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b1d8b8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b1d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b1da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40b30768" loc="29:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40b30768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b30eb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b2f3c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b2f150"/>
        <function-ref name="overflow" scoped="" ref="0x40b2f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b34458" loc="27:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b34458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b34630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40b34a20" loc="28:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40b34a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b30010"/>
        <function-ref name="fired" scoped="" ref="0x40b31718"/>
        <function-ref name="startAt" scoped="" ref="0x40b31c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40b31990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b30288"/>
        <function-ref name="start" scoped="" ref="0x40b31200"/>
        <function-ref name="stop" scoped="" ref="0x40b314a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b65448" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b65448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b64908"/>
        <function-ref name="fired" scoped="" ref="0x40b640d8"/>
        <function-ref name="startAt" scoped="" ref="0x40b645c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b64350"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b64b80"/>
        <function-ref name="start" scoped="" ref="0x40b65b98"/>
        <function-ref name="stop" scoped="" ref="0x40b65e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b65010" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b65010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x40342ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x40342ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b651e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b64eb0" loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b64eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b62610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b62b00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b62888"/>
        <function-ref name="overflow" scoped="" ref="0x40b62d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x417f7010" loc="31:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x417f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x417f71e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x417f72c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x417f73a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x417f7488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x417f7568"/>
        <function-ref name="setControl" scoped="" ref="0x417f7648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x417fd0a0" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x417fd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x417fc5c8"/>
        <function-ref name="fired" scoped="" ref="0x417fdd08"/>
        <function-ref name="startAt" scoped="" ref="0x417fc288"/>
        <function-ref name="isRunning" scoped="" ref="0x417fc010"/>
        <function-ref name="getAlarm" scoped="" ref="0x417fc840"/>
        <function-ref name="start" scoped="" ref="0x417fd7f0"/>
        <function-ref name="stop" scoped="" ref="0x417fda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417ffc38" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417ffc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417ffe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x417fcb70" loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x417fcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x417fb308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x417fb7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x417fb580"/>
        <function-ref name="overflow" scoped="" ref="0x417fba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x417f4278" loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x417f4278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x417f4450"/>
        <function-ref name="compareBusy" scoped="" ref="0x417f4530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x417f4610"/>
        <function-ref name="countBusy" scoped="" ref="0x417f46f0"/>
        <function-ref name="getAssr" scoped="" ref="0x417f47d0"/>
        <function-ref name="setAssr" scoped="" ref="0x417f48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x417f7838" loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x417f7838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x417f6d90"/>
        <function-ref name="fired" scoped="" ref="0x417f63b0"/>
        <function-ref name="get" scoped="" ref="0x417f7e80"/>
        <function-ref name="reset" scoped="" ref="0x417f6628"/>
        <function-ref name="isOn" scoped="" ref="0x417f4048"/>
        <function-ref name="set" scoped="" ref="0x417f6110"/>
        <function-ref name="start" scoped="" ref="0x417f68a0"/>
        <function-ref name="stop" scoped="" ref="0x417f6b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x417fbd60" loc="30:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x417fbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x417f87f0"/>
        <function-ref name="test" scoped="" ref="0x417f8300"/>
        <function-ref name="get" scoped="" ref="0x417f93e0"/>
        <function-ref name="setScale" scoped="" ref="0x417f8a68"/>
        <function-ref name="getScale" scoped="" ref="0x417f8d08"/>
        <function-ref name="reset" scoped="" ref="0x417f9b70"/>
        <function-ref name="overflow" scoped="" ref="0x417f98f8"/>
        <function-ref name="isOn" scoped="" ref="0x417f8578"/>
        <function-ref name="set" scoped="" ref="0x417f9658"/>
        <function-ref name="start" scoped="" ref="0x417f9de8"/>
        <function-ref name="stop" scoped="" ref="0x417f8088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b94010" loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b94010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b941e8"/>
        <function-ref name="runTask" scoped="" ref="0x40b942c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b705b8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b705b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b95ab8"/>
        <function-ref name="fired" scoped="" ref="0x40b95288"/>
        <function-ref name="startAt" scoped="" ref="0x40b95778"/>
        <function-ref name="isRunning" scoped="" ref="0x40b95500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b95d30"/>
        <function-ref name="start" scoped="" ref="0x40b70d08"/>
        <function-ref name="stop" scoped="" ref="0x40b95010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b60270" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b60270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b71d58"/>
        <function-ref name="fired" scoped="" ref="0x40b71010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b71718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b714c0"/>
        <function-ref name="getdt" scoped="" ref="0x40b70268"/>
        <function-ref name="gett0" scoped="" ref="0x40b70010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b71268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b60898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b71a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b60b18"/>
        <function-ref name="stop" scoped="" ref="0x40b60d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40bb8798" loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40bb8798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bb8970"/>
        <function-ref name="runTask" scoped="" ref="0x40bb8a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40bbb5a0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40bbb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bb8098"/>
        <function-ref name="fired" scoped="" ref="0x40bb9330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bb9a38"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bb97e0"/>
        <function-ref name="getdt" scoped="" ref="0x40bb8548"/>
        <function-ref name="gett0" scoped="" ref="0x40bb82f0"/>
        <function-ref name="isRunning" scoped="" ref="0x40bb9588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bbbbc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bb9d58"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bbbe48"/>
        <function-ref name="stop" scoped="" ref="0x40bb90d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b92210" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b92210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bbcda8"/>
        <function-ref name="fired" scoped="" ref="0x40bbc010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bbc748"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bbc4e0"/>
        <function-ref name="getdt" scoped="" ref="0x40bbb2b0"/>
        <function-ref name="gett0" scoped="" ref="0x40bbb048"/>
        <function-ref name="isRunning" scoped="" ref="0x40bbc278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b92848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bbca78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b92ad8"/>
        <function-ref name="stop" scoped="" ref="0x40b92d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bb7c60" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bb7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb52e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bb5638" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb5d88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bb4288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bb4010"/>
        <function-ref name="overflow" scoped="" ref="0x40bb4500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bb26e8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bb26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bab248"/>
        <function-ref name="fired" scoped="" ref="0x40bb14e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bb1bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bb1998"/>
        <function-ref name="getdt" scoped="" ref="0x40bab6f8"/>
        <function-ref name="gett0" scoped="" ref="0x40bab4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40bb1740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bb2d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bb1f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bb1010"/>
        <function-ref name="stop" scoped="" ref="0x40bb1290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40bad8f8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40bad8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bd13f8"/>
        <function-ref name="fired" scoped="" ref="0x40baa690"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40baad98"/>
        <function-ref name="isOneShot" scoped="" ref="0x40baab40"/>
        <function-ref name="getdt" scoped="" ref="0x40bd18a8"/>
        <function-ref name="gett0" scoped="" ref="0x40bd1650"/>
        <function-ref name="isRunning" scoped="" ref="0x40baa8e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40badf20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bd10d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40baa1b8"/>
        <function-ref name="stop" scoped="" ref="0x40baa438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40bc6190" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40bc6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc6468"/>
        <function-ref name="write" scoped="" ref="0x40bc6548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40bcc558" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40bcc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcc730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40bc87a0" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40bc87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc8978"/>
        <function-ref name="write" scoped="" ref="0x40bc8a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40bc5010" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bc5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc51e8"/>
        <function-ref name="write" scoped="" ref="0x40bc52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x40bc1880" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST0" scoped="" ref="0x40bc1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1a58"/>
        <function-ref name="write" scoped="" ref="0x40bc1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40bc5448" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40bc5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc5620"/>
        <function-ref name="write" scoped="" ref="0x40bc5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40be2190" loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40be2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be2368"/>
        <function-ref name="write" scoped="" ref="0x40be2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40be3010" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40be3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be31e8"/>
        <function-ref name="write" scoped="" ref="0x40be32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40bcb010" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40bcb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x40bbf6e8" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DACTST" scoped="" ref="0x40bbf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf8c0"/>
        <function-ref name="write" scoped="" ref="0x40bbf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40be56e8" loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40be56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be58c0"/>
        <function-ref name="write" scoped="" ref="0x40be59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40bc7030" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40bc7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc7208"/>
        <function-ref name="write" scoped="" ref="0x40bc72e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40bc78a0" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bc78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc7a78"/>
        <function-ref name="write" scoped="" ref="0x40bc7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x40bc3b20" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST0" scoped="" ref="0x40bc3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3cf8"/>
        <function-ref name="write" scoped="" ref="0x40bc3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40bc4e38" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40bc4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3050"/>
        <function-ref name="write" scoped="" ref="0x40bc3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40bc5880" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40bc5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc5a58"/>
        <function-ref name="write" scoped="" ref="0x40bc5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40ad1978" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40ad1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40ad1b50"/>
        <function-ref name="abortRelease" scoped="" ref="0x40ad1c30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40ad1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40bcbd70" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40bcbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40bca190" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40bca190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bca3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x40bbe190" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x40bbe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe368"/>
        <function-ref name="write" scoped="" ref="0x40bbe448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40bca568" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40bca568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bca740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40be5b20" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40be5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be5cf8"/>
        <function-ref name="write" scoped="" ref="0x40be5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40bcb6c0" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40bcb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x40bbf2b0" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADCTST" scoped="" ref="0x40bbf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf488"/>
        <function-ref name="write" scoped="" ref="0x40bbf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40bc7468" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40bc7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc7640"/>
        <function-ref name="write" scoped="" ref="0x40bc7720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40bc8bd8" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bc8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc8db0"/>
        <function-ref name="write" scoped="" ref="0x40bc8e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40bcc200" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40bcc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcc3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x40bc0a00" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXBPFTST" scoped="" ref="0x40bc0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc0bd8"/>
        <function-ref name="write" scoped="" ref="0x40bc0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x40bc1cb8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST1" scoped="" ref="0x40bc1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1e90"/>
        <function-ref name="write" scoped="" ref="0x40bc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x40bc0e38" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMSTATE" scoped="" ref="0x40bc0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbf050"/>
        <function-ref name="write" scoped="" ref="0x40bbf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40be3cb8" loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40be3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be3e90"/>
        <function-ref name="write" scoped="" ref="0x40be2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40be3448" loc="105:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40be3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be3620"/>
        <function-ref name="write" scoped="" ref="0x40be3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40bc32b0" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40bc32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc3488"/>
        <function-ref name="write" scoped="" ref="0x40bc3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x40bc0190" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST2" scoped="" ref="0x40bc0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc0368"/>
        <function-ref name="write" scoped="" ref="0x40bc0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40be52b0" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40be52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be5488"/>
        <function-ref name="write" scoped="" ref="0x40be5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40bc4190" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40bc4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc4368"/>
        <function-ref name="write" scoped="" ref="0x40bc4448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40be25c8" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40be25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40be27a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40be2880"/>
        <function-ref name="write" scoped="" ref="0x40be2960"/>
        <function-ref name="beginRead" scoped="" ref="0x40be2a40"/>
        <function-ref name="readDone" scoped="" ref="0x40be2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40ad1e90" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40ad1e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcc080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40bc8368" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40bc8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc8540"/>
        <function-ref name="write" scoped="" ref="0x40bc8620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40bc7cd8" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40bc7cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc7eb0"/>
        <function-ref name="write" scoped="" ref="0x40bc6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x40bc1010" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST1" scoped="" ref="0x40bc1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc11e8"/>
        <function-ref name="write" scoped="" ref="0x40bc12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40bc5cb8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40bc5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc5e90"/>
        <function-ref name="write" scoped="" ref="0x40bc4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x40bc1448" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCTST2" scoped="" ref="0x40bc1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1620"/>
        <function-ref name="write" scoped="" ref="0x40bc1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40bc66c8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40bc66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc68a0"/>
        <function-ref name="write" scoped="" ref="0x40bc6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40bcc8b0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40bcc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40bc6b00" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bc6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc6cd8"/>
        <function-ref name="write" scoped="" ref="0x40bc6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad12c0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad12c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad1498"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad1578"/>
        <function-ref name="request" scoped="" ref="0x40ad1658"/>
        <function-ref name="granted" scoped="" ref="0x40ad1738"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad1818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40bca8c0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40bca8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcaa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40bc8010" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40bc8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bc81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40bbee38" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40bbee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be5050"/>
        <function-ref name="write" scoped="" ref="0x40be5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40bbea00" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40bbea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbebd8"/>
        <function-ref name="write" scoped="" ref="0x40bbecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40bcba18" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40bcba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40bbe5c8" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40bbe5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbe7a0"/>
        <function-ref name="write" scoped="" ref="0x40bbe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40be3880" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40be3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40be3a58"/>
        <function-ref name="write" scoped="" ref="0x40be3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40bc36e8" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40bc36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc38c0"/>
        <function-ref name="write" scoped="" ref="0x40bc39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x40bc05c8" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSTST3" scoped="" ref="0x40bc05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc07a0"/>
        <function-ref name="write" scoped="" ref="0x40bc0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40bccc08" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40bccc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bccde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40bcb368" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40bcb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcb540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40bc45c8" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40bc45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc47a0"/>
        <function-ref name="write" scoped="" ref="0x40bc4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40bcac18" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40bcac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bcadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40bc4a00" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40bc4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc4bd8"/>
        <function-ref name="write" scoped="" ref="0x40bc4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x40bbfb20" loc="94:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOPTST" scoped="" ref="0x40bbfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bbfef8"/>
        <function-ref name="write" scoped="" ref="0x40bbe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40be2ca0" loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40be2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40be2e78"/>
        <function-ref name="writeDone" scoped="" ref="0x40be1010"/>
        <function-ref name="write" scoped="" ref="0x40be10f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40be11d0"/>
        <function-ref name="readDone" scoped="" ref="0x40be12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bf1c40" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bf1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bf1e18"/>
        <function-ref name="rand32" scoped="" ref="0x40bf1ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bf1380" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bf1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bf19a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bf4090" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bf4090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bf4268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40bee6e0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40bee6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40bee8b8"/>
        <function-ref name="rand32" scoped="" ref="0x40bee998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bf2de0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bf2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bee448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bf28c0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bf28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bf2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bf6898" loc="67:/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bf6898"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bf6a70"/>
        <function-ref name="toIdle" scoped="" ref="0x40bf6b50"/>
        <function-ref name="isState" scoped="" ref="0x40bf6c30"/>
        <function-ref name="isIdle" scoped="" ref="0x40bf6d10"/>
        <function-ref name="requestState" scoped="" ref="0x40bf6df0"/>
        <function-ref name="forceState" scoped="" ref="0x40bf6ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c0b010" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c0b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0b1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c0b2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0b3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40c0b488"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be6810" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be69e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40be6ac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be6ba8"/>
        <function-ref name="cancel" scoped="" ref="0x40be6c88"/>
        <function-ref name="sendDone" scoped="" ref="0x40be6d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c089a0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c089a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c08b78"/>
        <function-ref name="getPayload" scoped="" ref="0x40c08c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c08d38"/>
        <function-ref name="cancel" scoped="" ref="0x40c08e18"/>
        <function-ref name="sendDone" scoped="" ref="0x40c08ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c0bea8" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c0bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c080c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c081a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c08280"/>
        <function-ref name="cancel" scoped="" ref="0x40c08360"/>
        <function-ref name="sendDone" scoped="" ref="0x40c08440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40c07850" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c07850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c07a28"/>
        <function-ref name="rand32" scoped="" ref="0x40c07b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c085b0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c085b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c08788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c07cf0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c07cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c07ec8"/>
        <function-ref name="getHeader" scoped="" ref="0x40c06010"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c060f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40c07098" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c07098"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c07270"/>
        <function-ref name="toIdle" scoped="" ref="0x40c07350"/>
        <function-ref name="isState" scoped="" ref="0x40c07430"/>
        <function-ref name="isIdle" scoped="" ref="0x40c07510"/>
        <function-ref name="requestState" scoped="" ref="0x40c075f0"/>
        <function-ref name="forceState" scoped="" ref="0x40c076d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c0adc8" loc="67:/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c0adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c09010"/>
        <function-ref name="toIdle" scoped="" ref="0x40c090f0"/>
        <function-ref name="isState" scoped="" ref="0x40c091d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c092b0"/>
        <function-ref name="requestState" scoped="" ref="0x40c09390"/>
        <function-ref name="forceState" scoped="" ref="0x40c09470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c0cd30" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c0cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0cf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c0c4e0" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c0c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0c6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c0c908" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c0c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c1f5a8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c1f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c1f180" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c1f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c1f358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c229b8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c229b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c22b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c1f968" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c1f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c1fb40"/>
        <function-ref name="getHeader" scoped="" ref="0x40c1fc20"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c1fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40c22de0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40c22de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c2f890" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c2f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c2fa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c2fc40" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c2fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c2fe18"/>
        <function-ref name="getPayload" scoped="" ref="0x40c2fef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2e010"/>
        <function-ref name="cancel" scoped="" ref="0x40c2e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c2e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c319e0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c319e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c31bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c31c98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c31d78"/>
        <function-ref name="cancel" scoped="" ref="0x40c31e58"/>
        <function-ref name="sendDone" scoped="" ref="0x40c30010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c30568" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c30568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c30740"/>
        <function-ref name="getPayload" scoped="" ref="0x40c30820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c30900"/>
        <function-ref name="cancel" scoped="" ref="0x40c309e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c30ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c30198" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c30198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c30370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c31318" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c31318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c314f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c315d0"/>
        <function-ref name="request" scoped="" ref="0x40c316b0"/>
        <function-ref name="granted" scoped="" ref="0x40c31790"/>
        <function-ref name="isOwner" scoped="" ref="0x40c31870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c30cf0" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c30cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c30ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c2f0e8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c2f0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c2f2c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c2f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c2f480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2f560"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c2f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c28e70" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c28e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c27070"/>
        <function-ref name="getPayload" scoped="" ref="0x40c27150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c27230"/>
        <function-ref name="cancel" scoped="" ref="0x40c27310"/>
        <function-ref name="sendDone" scoped="" ref="0x40c273f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c27600" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c27600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c277d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40c60250" loc="180:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40c60250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c60428"/>
        <function-ref name="runTask" scoped="" ref="0x40c60508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c27998" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c27998"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c27b70"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c27c50"/>
        <function-ref name="getRssi" scoped="" ref="0x40c27d30"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c27e10"/>
        <function-ref name="getPower" scoped="" ref="0x40c27ef0"/>
        <function-ref name="getLqi" scoped="" ref="0x40c26010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40c29b50" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40c29b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c29d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40c29e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c29ee8"/>
        <function-ref name="cancel" scoped="" ref="0x40c28010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c280f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40c267b0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40c267b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c26988"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c26a68"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c26b48"/>
        <function-ref name="dequeue" scoped="" ref="0x40c26c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c261f8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c261f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c263d0"/>
        <function-ref name="getHeader" scoped="" ref="0x40c264b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c26590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c29780" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c29780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c29958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c2b870" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c2b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c2ba48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c2bb28"/>
        <function-ref name="request" scoped="" ref="0x40c2bc08"/>
        <function-ref name="granted" scoped="" ref="0x40c2bce8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c2bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c29010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c291e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c292c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c293a8"/>
        <function-ref name="cancel" scoped="" ref="0x40c29488"/>
        <function-ref name="sendDone" scoped="" ref="0x40c29568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40c28320" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40c28320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c284f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c28700" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c28700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c288d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c289b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c28a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c28b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c28c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c2c9f0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c2c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c2cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40c2cd28" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40c2cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40c2cf00"/>
        <function-ref name="isEmpty" scoped="" ref="0x40c4f010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40c4f0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40c4f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c72570" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c72570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c72748"/>
        <function-ref name="stopDone" scoped="" ref="0x40c72828"/>
        <function-ref name="start" scoped="" ref="0x40c72908"/>
        <function-ref name="stop" scoped="" ref="0x40c729e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c714c8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c714c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c716a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c71780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c71860"/>
        <function-ref name="cancel" scoped="" ref="0x40c71940"/>
        <function-ref name="sendDone" scoped="" ref="0x40c71a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c71c30" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c71c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c71e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c76480" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c76480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c76658"/>
        <function-ref name="getPayload" scoped="" ref="0x40c76738"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c76818"/>
        <function-ref name="cancel" scoped="" ref="0x40c768f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c769d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c76f28" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c76f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c72110"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c721f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c722d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c723b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40c72be0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40c72be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c72db8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c72e98"/>
        <function-ref name="isState" scoped="" ref="0x40c71010"/>
        <function-ref name="isIdle" scoped="" ref="0x40c710f0"/>
        <function-ref name="requestState" scoped="" ref="0x40c711d0"/>
        <function-ref name="forceState" scoped="" ref="0x40c712b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c70098" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c70098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c70270"/>
        <function-ref name="stopDone" scoped="" ref="0x40c70350"/>
        <function-ref name="start" scoped="" ref="0x40c70430"/>
        <function-ref name="stop" scoped="" ref="0x40c70510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c76b60" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c76b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c76d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c70cc0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c70cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c70e98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c6d010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c6d0f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c6d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40c69d20" loc="67:/home/van9ogh/Projects/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40c69d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c69ef8"/>
        <function-ref name="toIdle" scoped="" ref="0x40c6f010"/>
        <function-ref name="isState" scoped="" ref="0x40c6f0f0"/>
        <function-ref name="isIdle" scoped="" ref="0x40c6f1d0"/>
        <function-ref name="requestState" scoped="" ref="0x40c6f2b0"/>
        <function-ref name="forceState" scoped="" ref="0x40c6f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c675e8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c675e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c677c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c678a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c67980"/>
        <function-ref name="cancel" scoped="" ref="0x40c67a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40c67b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c75750" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c75750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c75928"/>
        <function-ref name="getPayload" scoped="" ref="0x40c75a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c75ae8"/>
        <function-ref name="cancel" scoped="" ref="0x40c75bc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c75ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c75e50" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c75e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c67050"/>
        <function-ref name="setRetries" scoped="" ref="0x40c67130"/>
        <function-ref name="getRetries" scoped="" ref="0x40c67210"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c672f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c673d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c66a68" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c66a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c66c40"/>
        <function-ref name="noAck" scoped="" ref="0x40c66d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c66e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c662b0" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c662b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c66488"/>
        <function-ref name="setRetries" scoped="" ref="0x40c66568"/>
        <function-ref name="getRetries" scoped="" ref="0x40c66648"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c66728"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c66808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c7d220" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c7d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7d3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c7ea88" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c7ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c7ec60"/>
        <function-ref name="getPayload" scoped="" ref="0x40c7ed40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c7ee20"/>
        <function-ref name="cancel" scoped="" ref="0x40c7ef00"/>
        <function-ref name="sendDone" scoped="" ref="0x40c7d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40c7c390" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40c7c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40c7c568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40c7c648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40c7c728"/>
        <function-ref name="syncDone" scoped="" ref="0x40c7c808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40c7c8e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40c7c9c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c7caa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40c7cb88"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40c7cc68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40c7cd48"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40c7ce28"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40c7cf08"/>
        <function-ref name="sync" scoped="" ref="0x40c7b010"/>
        <function-ref name="getChannel" scoped="" ref="0x40c7b170"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40c7b250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40c7e238" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40c7e238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c7e410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c7e4f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c7e5d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c7e6b0"/>
        <function-ref name="setCca" scoped="" ref="0x40c7e790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c7e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40c7fb88" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40c7fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40c7fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40c7bba0" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40c7bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40c7bd78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40c7be58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40c7a010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40c7a0f0"/>
        <function-ref name="setCca" scoped="" ref="0x40c7a1d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40c7a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c7f190" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c7f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c7f368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c7f448"/>
        <function-ref name="getPayload" scoped="" ref="0x40c7f528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c7f608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c7f6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c82120" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c82120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c822f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c823d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c824b8"/>
        <function-ref name="cancel" scoped="" ref="0x40c82598"/>
        <function-ref name="sendDone" scoped="" ref="0x40c82678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40c80190" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40c80190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c80368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c7d5b8" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c7d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c7d790"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c7d870"/>
        <function-ref name="getRssi" scoped="" ref="0x40c7d950"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c7da30"/>
        <function-ref name="getPower" scoped="" ref="0x40c7db10"/>
        <function-ref name="getLqi" scoped="" ref="0x40c7dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40c7b460" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c7b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40c7b6b8"/>
        <function-ref name="changed" scoped="" ref="0x40c7b798"/>
        <function-ref name="amGroup" scoped="" ref="0x40c7b878"/>
        <function-ref name="setAddress" scoped="" ref="0x40c7b958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c7ddd8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c7ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x40c7c010"/>
        <function-ref name="getHeader" scoped="" ref="0x40c7c0f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c7c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c82ae0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c82ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c82cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c7abb8" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c7abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c7ad90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c7ae70"/>
        <function-ref name="led1On" scoped="" ref="0x40c79010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c790f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c791d0"/>
        <function-ref name="get" scoped="" ref="0x40c792b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40c79390"/>
        <function-ref name="led2Off" scoped="" ref="0x40c79710"/>
        <function-ref name="set" scoped="" ref="0x40c79470"/>
        <function-ref name="led0On" scoped="" ref="0x40c79550"/>
        <function-ref name="led2On" scoped="" ref="0x40c79630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c80500" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c80500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c806d8"/>
        <function-ref name="source" scoped="" ref="0x40c807b8"/>
        <function-ref name="address" scoped="" ref="0x40c80898"/>
        <function-ref name="destination" scoped="" ref="0x40c80978"/>
        <function-ref name="setSource" scoped="" ref="0x40c80a58"/>
        <function-ref name="setDestination" scoped="" ref="0x40c80b38"/>
        <function-ref name="type" scoped="" ref="0x40c80c18"/>
        <function-ref name="setType" scoped="" ref="0x40c80cf8"/>
        <function-ref name="isForMe" scoped="" ref="0x40c80dd8"/>
        <function-ref name="setGroup" scoped="" ref="0x40c80eb8"/>
        <function-ref name="localGroup" scoped="" ref="0x40c7f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40c7a4f0" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40c7a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c7a6c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c7a7a8"/>
        <function-ref name="request" scoped="" ref="0x40c7a888"/>
        <function-ref name="granted" scoped="" ref="0x40c7a968"/>
        <function-ref name="isOwner" scoped="" ref="0x40c7aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cddd10" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cddee8"/>
        <function-ref name="stopDone" scoped="" ref="0x40cda010"/>
        <function-ref name="start" scoped="" ref="0x40cda0f0"/>
        <function-ref name="stop" scoped="" ref="0x40cda1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cda630" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cda630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cda808"/>
        <function-ref name="getPayload" scoped="" ref="0x40cda8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cda9c8"/>
        <function-ref name="cancel" scoped="" ref="0x40cdaaa8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdab88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cd9368" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cd9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd9540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cd9620"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd9700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd97e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cd98c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cd9010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cd9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd91e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cd7ca8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cd7ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cd7e80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cd6010"/>
        <function-ref name="led1On" scoped="" ref="0x40cd60f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cd61d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cd62b0"/>
        <function-ref name="get" scoped="" ref="0x40cd6390"/>
        <function-ref name="led1Off" scoped="" ref="0x40cd6470"/>
        <function-ref name="led2Off" scoped="" ref="0x40cd67f0"/>
        <function-ref name="set" scoped="" ref="0x40cd6550"/>
        <function-ref name="led0On" scoped="" ref="0x40cd6630"/>
        <function-ref name="led2On" scoped="" ref="0x40cd6710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40cd7770" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cd7948"/>
        <function-ref name="noAck" scoped="" ref="0x40cd7a28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cd7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cd9a58" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cd9a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cd9c30"/>
        <function-ref name="source" scoped="" ref="0x40cd9d10"/>
        <function-ref name="address" scoped="" ref="0x40cd9df0"/>
        <function-ref name="destination" scoped="" ref="0x40cd9ed0"/>
        <function-ref name="setSource" scoped="" ref="0x40cd7010"/>
        <function-ref name="setDestination" scoped="" ref="0x40cd70f0"/>
        <function-ref name="type" scoped="" ref="0x40cd71d0"/>
        <function-ref name="setType" scoped="" ref="0x40cd72b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40cd7390"/>
        <function-ref name="setGroup" scoped="" ref="0x40cd7470"/>
        <function-ref name="localGroup" scoped="" ref="0x40cd7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cfb360" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cfb360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cfb538"/>
        <function-ref name="getPayload" scoped="" ref="0x40cfb618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cfb6f8"/>
        <function-ref name="cancel" scoped="" ref="0x40cfb7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cfb8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cfba18" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cfba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cfbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cd5108" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cd5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd52f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd53d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd54b0"/>
        <function-ref name="cancel" scoped="" ref="0x40cd5590"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cd4770" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cd4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd4948"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cd4a28"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd4b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd4be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cd4cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cd5848" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cd5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40cd4e08" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd4e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cfb010"/>
        <function-ref name="noAck" scoped="" ref="0x40cfb0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cfb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cd5b70" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cd5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cd5d48"/>
        <function-ref name="source" scoped="" ref="0x40cd5e28"/>
        <function-ref name="address" scoped="" ref="0x40cd5f08"/>
        <function-ref name="destination" scoped="" ref="0x40cd4010"/>
        <function-ref name="setSource" scoped="" ref="0x40cd40f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40cd41d0"/>
        <function-ref name="type" scoped="" ref="0x40cd42b0"/>
        <function-ref name="setType" scoped="" ref="0x40cd4390"/>
        <function-ref name="isForMe" scoped="" ref="0x40cd4470"/>
        <function-ref name="setGroup" scoped="" ref="0x40cd4550"/>
        <function-ref name="localGroup" scoped="" ref="0x40cd4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d241d0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d241d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d243a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d24488"/>
        <function-ref name="start" scoped="" ref="0x40d24568"/>
        <function-ref name="stop" scoped="" ref="0x40d24648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d23100" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d23100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404de6c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d232d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d233b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d23498"/>
        <function-ref name="cancel" scoped="" ref="0x40d23578"/>
        <function-ref name="sendDone" scoped="" ref="0x40d23658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cfae08" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cfae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d24a90" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d24a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404de6c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d24c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d1eca8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d1eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d1ee80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d22010"/>
        <function-ref name="led1On" scoped="" ref="0x40d220f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d221d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d222b0"/>
        <function-ref name="get" scoped="" ref="0x40d22390"/>
        <function-ref name="led1Off" scoped="" ref="0x40d22470"/>
        <function-ref name="led2Off" scoped="" ref="0x40d227f0"/>
        <function-ref name="set" scoped="" ref="0x40d22550"/>
        <function-ref name="led0On" scoped="" ref="0x40d22630"/>
        <function-ref name="led2On" scoped="" ref="0x40d22710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40d1e7a0" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40d1e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404de6c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40d1e978"/>
        <function-ref name="offset" scoped="" ref="0x40d1ea58"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40d1eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d1c1d0" loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d1c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d1c3a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d1c488"/>
        <function-ref name="start" scoped="" ref="0x40d1c568"/>
        <function-ref name="stop" scoped="" ref="0x40d1c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40d6b1e0" loc="332:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40d6b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d6b3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40d6b498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40d14260" loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40d14260"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d14438"/>
        <function-ref name="stop" scoped="" ref="0x40d14518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40d2f518" loc="191:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40d2f518"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d2f6f0"/>
        <function-ref name="runTask" scoped="" ref="0x40d2f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d22de8" loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d22de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d1c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40d3d240" loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40d3d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40d3d418"/>
        <function-ref name="flush" scoped="" ref="0x40d3d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40d40970" loc="322:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40d40970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d40b48"/>
        <function-ref name="runTask" scoped="" ref="0x40d40c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40d12c10" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40d12c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40d12de8"/>
        <function-ref name="resetSend" scoped="" ref="0x40d12ec8"/>
        <function-ref name="dataReceived" scoped="" ref="0x40d17010"/>
        <function-ref name="resetReceive" scoped="" ref="0x40d170f0"/>
        <function-ref name="putData" scoped="" ref="0x40d171d0"/>
        <function-ref name="putDone" scoped="" ref="0x40d172b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40d17390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d17500" loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d17500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d176d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d177b8"/>
        <function-ref name="led1On" scoped="" ref="0x40d17898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d17978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d17a58"/>
        <function-ref name="get" scoped="" ref="0x40d17b38"/>
        <function-ref name="led1Off" scoped="" ref="0x40d17c18"/>
        <function-ref name="led2Off" scoped="" ref="0x40d14010"/>
        <function-ref name="set" scoped="" ref="0x40d17cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40d17dd8"/>
        <function-ref name="led2On" scoped="" ref="0x40d17eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40d6ae08" loc="341:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40d6ae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d69010"/>
        <function-ref name="runTask" scoped="" ref="0x40d690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40d18960" loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40d18960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40d18b38"/>
        <function-ref name="nextByte" scoped="" ref="0x40d18c18"/>
        <function-ref name="startSend" scoped="" ref="0x40d18cf8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40d18dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40d15a80" loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40d15a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40d15c58"/>
        <function-ref name="byteReceived" scoped="" ref="0x40d15d38"/>
        <function-ref name="endPacket" scoped="" ref="0x40d15e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40db3030" loc="275:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40db3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40db3208"/>
        <function-ref name="runTask" scoped="" ref="0x40db32e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d90c60" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d90c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404de6c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d90e48"/>
        <function-ref name="getPayload" scoped="" ref="0x40d90f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db5018"/>
        <function-ref name="cancel" scoped="" ref="0x40db50f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40db51d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40db3468" loc="158:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40db3468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40db3640"/>
        <function-ref name="runTask" scoped="" ref="0x40db3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d908a0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404de6c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d90a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40db5400" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40db5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404de6c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40db55e8"/>
        <function-ref name="offset" scoped="" ref="0x40db56c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40db57a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40db43f0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40db43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40db45c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40db46a8"/>
        <function-ref name="led1On" scoped="" ref="0x40db4788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40db4868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40db4948"/>
        <function-ref name="get" scoped="" ref="0x40db4a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40db4b08"/>
        <function-ref name="led2On" scoped="" ref="0x40db4e88"/>
        <function-ref name="set" scoped="" ref="0x40db4cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40db4be8"/>
        <function-ref name="led0On" scoped="" ref="0x40db4da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40db5dc0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40db5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40db4010"/>
        <function-ref name="nextByte" scoped="" ref="0x40db40f0"/>
        <function-ref name="startSend" scoped="" ref="0x40db41d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40db42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40db58e8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40db58e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40db5ac0"/>
        <function-ref name="byteReceived" scoped="" ref="0x40db5ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x40db5c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40dd8bd8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40dd8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd8db0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40dd8e90"/>
        <function-ref name="receive" scoped="" ref="0x40dde010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40dde0f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40dde1d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40dde2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dde390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40de2878" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40de2878"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40de2a50"/>
        <function-ref name="resetSend" scoped="" ref="0x40de2b30"/>
        <function-ref name="dataReceived" scoped="" ref="0x40de2c10"/>
        <function-ref name="resetReceive" scoped="" ref="0x40de2cf0"/>
        <function-ref name="putData" scoped="" ref="0x40de2dd0"/>
        <function-ref name="putDone" scoped="" ref="0x40de2eb0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40ddf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40dde500" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40dde500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40dde6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40dde7b8"/>
        <function-ref name="led1On" scoped="" ref="0x40dde898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dde978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ddea58"/>
        <function-ref name="get" scoped="" ref="0x40ddeb38"/>
        <function-ref name="led1Off" scoped="" ref="0x40ddec18"/>
        <function-ref name="led2Off" scoped="" ref="0x40ddd010"/>
        <function-ref name="set" scoped="" ref="0x40ddecf8"/>
        <function-ref name="led0On" scoped="" ref="0x40ddedd8"/>
        <function-ref name="led2On" scoped="" ref="0x40ddeeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40df58f0" loc="42:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40df58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df5ac8"/>
        <function-ref name="receive" scoped="" ref="0x40df5ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40de1a58" loc="41:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40de1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de1c30"/>
        <function-ref name="receivedByte" scoped="" ref="0x40de1d10"/>
        <function-ref name="receive" scoped="" ref="0x40de1df0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40de1ed0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40df8010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40df80f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40df81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40de15d8" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40de15d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40de17b0"/>
        <function-ref name="stop" scoped="" ref="0x40de1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40df77b0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40df77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df7988"/>
        <function-ref name="receive" scoped="" ref="0x40df7a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40df7c30" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40df7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df7e08"/>
        <function-ref name="receivedByte" scoped="" ref="0x40df7ee8"/>
        <function-ref name="receive" scoped="" ref="0x40df2010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40df20f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40df21d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40df22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40df2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40df26f0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40df26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df2e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40df1350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40df10d8"/>
        <function-ref name="overflow" scoped="" ref="0x40df15c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40df7340" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40df7340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40df7518"/>
        <function-ref name="stop" scoped="" ref="0x40df75f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40df0e80" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40df0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2a070"/>
        <function-ref name="receive" scoped="" ref="0x40e2a150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40e2ab48" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40e2ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e2ad20"/>
        <function-ref name="stop" scoped="" ref="0x40e2ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40df0730" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40df0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40df0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40e2a2b0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40e2a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2a488"/>
        <function-ref name="receivedByte" scoped="" ref="0x40e2a568"/>
        <function-ref name="receive" scoped="" ref="0x40e2a648"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40e2a728"/>
        <function-ref name="receiveDone" scoped="" ref="0x40e2a808"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40e2a8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e280a0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e287f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e28ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e28a68"/>
        <function-ref name="overflow" scoped="" ref="0x40e27010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40e29448" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40e29448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e29620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e29700"/>
        <function-ref name="rxDone" scoped="" ref="0x40e297e0"/>
        <function-ref name="txDone" scoped="" ref="0x40e298c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e299a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e29a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e29b60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e29c40"/>
        <function-ref name="tx" scoped="" ref="0x40e29d20"/>
        <function-ref name="rx" scoped="" ref="0x40e29e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40df0a68" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40df0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40df0c40"/>
        <function-ref name="stop" scoped="" ref="0x40df0d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40e29010" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40e29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e291e8"/>
        <function-ref name="stop" scoped="" ref="0x40e292c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e15508" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e15508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e156e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e157c0"/>
        <function-ref name="rxDone" scoped="" ref="0x40e158a0"/>
        <function-ref name="txDone" scoped="" ref="0x40e15980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e15a60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e15b40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e15c20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e15d00"/>
        <function-ref name="tx" scoped="" ref="0x40e15de0"/>
        <function-ref name="rx" scoped="" ref="0x40e15ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e14b80" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e14b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e14d58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e14e38"/>
        <function-ref name="rxDone" scoped="" ref="0x40e14f18"/>
        <function-ref name="txDone" scoped="" ref="0x40e13010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e130f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e131d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e132b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e13390"/>
        <function-ref name="tx" scoped="" ref="0x40e13470"/>
        <function-ref name="rx" scoped="" ref="0x40e13550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e15010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e151e8"/>
        <function-ref name="stop" scoped="" ref="0x40e152c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e14178" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e14178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e14350"/>
        <function-ref name="stop" scoped="" ref="0x40e14430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e14688" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e14688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e14860"/>
        <function-ref name="stop" scoped="" ref="0x40e14940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e16a80" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e16a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e16c58"/>
        <function-ref name="stop" scoped="" ref="0x40e16d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40e13d40" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40e13d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e13f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40e42bf0" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40e42bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e42dc8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e42ea8"/>
        <function-ref name="rxDone" scoped="" ref="0x40e41010"/>
        <function-ref name="txDone" scoped="" ref="0x40e410f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e411d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e412b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e41390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e41470"/>
        <function-ref name="tx" scoped="" ref="0x40e41550"/>
        <function-ref name="rx" scoped="" ref="0x40e41630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40e41840" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40e41840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e41a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40e407a0" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40e407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40e40978"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40e40a58"/>
        <function-ref name="rxDone" scoped="" ref="0x40e40b38"/>
        <function-ref name="txDone" scoped="" ref="0x40e40c18"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40e40cf8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40e40dd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40e40eb8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40e3f010"/>
        <function-ref name="tx" scoped="" ref="0x40e3f0f0"/>
        <function-ref name="rx" scoped="" ref="0x40e3f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40e426d8" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40e426d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e428b0"/>
        <function-ref name="stop" scoped="" ref="0x40e42990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40e41c90" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40e41c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e41e68"/>
        <function-ref name="stop" scoped="" ref="0x40e40010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40e40288" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40e40288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e40460"/>
        <function-ref name="stop" scoped="" ref="0x40e40540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40e3f3c8" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40e3f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40e3f5a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40e3f680"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40e3f760"/>
        <function-ref name="actualMicro" scoped="" ref="0x40e3f840"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40e3f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40e3fb08" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40e3fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40e3fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40e421a8" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40e421a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e42380"/>
        <function-ref name="stop" scoped="" ref="0x40e42460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40df3980" loc="24:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40df3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e6c0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e6c5e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e6c370"/>
        <function-ref name="overflow" scoped="" ref="0x40e6c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e69408" loc="24:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e69408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TThree" ref="0x403b60a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e69b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e67068"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e69dd0"/>
        <function-ref name="overflow" scoped="" ref="0x40e672e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e61090" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e61090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e61268"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e61348"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e61428"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e61508"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e615e8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e616c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e617a8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e61888"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e61968"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e61a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e61d80" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e61d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e5f810"/>
        <function-ref name="test" scoped="" ref="0x40e5f320"/>
        <function-ref name="get" scoped="" ref="0x40e603e0"/>
        <function-ref name="captured" scoped="" ref="0x40e608f8"/>
        <function-ref name="reset" scoped="" ref="0x40e60b98"/>
        <function-ref name="isOn" scoped="" ref="0x40e5f598"/>
        <function-ref name="set" scoped="" ref="0x40e60658"/>
        <function-ref name="start" scoped="" ref="0x40e60e10"/>
        <function-ref name="stop" scoped="" ref="0x40e5f0a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40e5ff20" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e5ff20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e8f500"/>
        <function-ref name="fired" scoped="" ref="0x40e5ea98"/>
        <function-ref name="get" scoped="" ref="0x40e5e580"/>
        <function-ref name="reset" scoped="" ref="0x40e5ed10"/>
        <function-ref name="isOn" scoped="" ref="0x40e8f778"/>
        <function-ref name="set" scoped="" ref="0x40e5e7f8"/>
        <function-ref name="start" scoped="" ref="0x40e8f010"/>
        <function-ref name="stop" scoped="" ref="0x40e8f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e67d38" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e67d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e637b0"/>
        <function-ref name="test" scoped="" ref="0x40e632c0"/>
        <function-ref name="get" scoped="" ref="0x40e64390"/>
        <function-ref name="setScale" scoped="" ref="0x40e63a28"/>
        <function-ref name="getScale" scoped="" ref="0x40e63cc8"/>
        <function-ref name="reset" scoped="" ref="0x40e64b20"/>
        <function-ref name="overflow" scoped="" ref="0x40e648a8"/>
        <function-ref name="isOn" scoped="" ref="0x40e63538"/>
        <function-ref name="set" scoped="" ref="0x40e64608"/>
        <function-ref name="start" scoped="" ref="0x40e64d98"/>
        <function-ref name="stop" scoped="" ref="0x40e63048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e89530" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e89530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e89708"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40e897e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e898c8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40e899a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e89a88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e89b68"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40e89c48"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40e89d28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40e89e08"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40e89ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e85128" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e85128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e83690"/>
        <function-ref name="fired" scoped="" ref="0x40e85c88"/>
        <function-ref name="get" scoped="" ref="0x40e85770"/>
        <function-ref name="reset" scoped="" ref="0x40e85f00"/>
        <function-ref name="isOn" scoped="" ref="0x40e83908"/>
        <function-ref name="set" scoped="" ref="0x40e859e8"/>
        <function-ref name="start" scoped="" ref="0x40e831a0"/>
        <function-ref name="stop" scoped="" ref="0x40e83418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e87258" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e87258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e86cc0"/>
        <function-ref name="test" scoped="" ref="0x40e867d0"/>
        <function-ref name="get" scoped="" ref="0x40e878a0"/>
        <function-ref name="captured" scoped="" ref="0x40e87db8"/>
        <function-ref name="reset" scoped="" ref="0x40e86068"/>
        <function-ref name="isOn" scoped="" ref="0x40e86a48"/>
        <function-ref name="set" scoped="" ref="0x40e87b18"/>
        <function-ref name="start" scoped="" ref="0x40e862e0"/>
        <function-ref name="stop" scoped="" ref="0x40e86558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e83d20" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e83d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e812c0"/>
        <function-ref name="fired" scoped="" ref="0x40e828a8"/>
        <function-ref name="get" scoped="" ref="0x40e82390"/>
        <function-ref name="reset" scoped="" ref="0x40e82b20"/>
        <function-ref name="isOn" scoped="" ref="0x40e81538"/>
        <function-ref name="set" scoped="" ref="0x40e82608"/>
        <function-ref name="start" scoped="" ref="0x40e82d98"/>
        <function-ref name="stop" scoped="" ref="0x40e81048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e81950" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e81950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e80f08"/>
        <function-ref name="fired" scoped="" ref="0x40e80528"/>
        <function-ref name="get" scoped="" ref="0x40e80010"/>
        <function-ref name="reset" scoped="" ref="0x40e807a0"/>
        <function-ref name="isOn" scoped="" ref="0x40e7e1a0"/>
        <function-ref name="set" scoped="" ref="0x40e80288"/>
        <function-ref name="start" scoped="" ref="0x40e80a18"/>
        <function-ref name="stop" scoped="" ref="0x40e80c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e8b230" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e8b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e8aca0"/>
        <function-ref name="test" scoped="" ref="0x40e8a7b0"/>
        <function-ref name="get" scoped="" ref="0x40e8b878"/>
        <function-ref name="setScale" scoped="" ref="0x40e8af18"/>
        <function-ref name="getScale" scoped="" ref="0x40e891d0"/>
        <function-ref name="reset" scoped="" ref="0x40e8a048"/>
        <function-ref name="overflow" scoped="" ref="0x40e8bd90"/>
        <function-ref name="isOn" scoped="" ref="0x40e8aa28"/>
        <function-ref name="set" scoped="" ref="0x40e8baf0"/>
        <function-ref name="start" scoped="" ref="0x40e8a2c0"/>
        <function-ref name="stop" scoped="" ref="0x40e8a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ecfa78" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ecfa78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x40342ae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x40342ae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ecfc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ecfe60" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ecfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ecd8d8"/>
        <function-ref name="test" scoped="" ref="0x40ecd3e8"/>
        <function-ref name="get" scoped="" ref="0x40ece4d8"/>
        <function-ref name="setScale" scoped="" ref="0x40ecdb50"/>
        <function-ref name="getScale" scoped="" ref="0x40ecddf0"/>
        <function-ref name="reset" scoped="" ref="0x40ecec68"/>
        <function-ref name="overflow" scoped="" ref="0x40ece9f0"/>
        <function-ref name="isOn" scoped="" ref="0x40ecd660"/>
        <function-ref name="set" scoped="" ref="0x40ece750"/>
        <function-ref name="start" scoped="" ref="0x40eceee0"/>
        <function-ref name="stop" scoped="" ref="0x40ecd170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ed00c0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ed00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TThree" ref="0x403b60a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ed0810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ed0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ed0a88"/>
        <function-ref name="overflow" scoped="" ref="0x40eca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40eca2f0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ec8d30"/>
        <function-ref name="test" scoped="" ref="0x40ec8840"/>
        <function-ref name="get" scoped="" ref="0x40eca938"/>
        <function-ref name="setScale" scoped="" ref="0x40ec7010"/>
        <function-ref name="getScale" scoped="" ref="0x40ec72b0"/>
        <function-ref name="reset" scoped="" ref="0x40ec80d8"/>
        <function-ref name="overflow" scoped="" ref="0x40ecae50"/>
        <function-ref name="isOn" scoped="" ref="0x40ec8ab8"/>
        <function-ref name="set" scoped="" ref="0x40ecabb0"/>
        <function-ref name="start" scoped="" ref="0x40ec8350"/>
        <function-ref name="stop" scoped="" ref="0x40ec85c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ec43b8" loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ec43b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TThree" ref="0x403b60a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec4b08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ef7010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec4d80"/>
        <function-ref name="overflow" scoped="" ref="0x40ef7288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ec6170" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ec6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ec68c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ec6db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ec6b38"/>
        <function-ref name="overflow" scoped="" ref="0x40ec4048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40ef5ae8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40ef5ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40ef5cc0"/>
        <function-ref name="offset" scoped="" ref="0x40ef5da0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40ef5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ee1360" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ee1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ee1538"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ee1618"/>
        <function-ref name="led1On" scoped="" ref="0x40ee16f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ee17d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ee18b8"/>
        <function-ref name="get" scoped="" ref="0x40ee1998"/>
        <function-ref name="led1Off" scoped="" ref="0x40ee1a78"/>
        <function-ref name="led2Off" scoped="" ref="0x40ee1df8"/>
        <function-ref name="set" scoped="" ref="0x40ee1b58"/>
        <function-ref name="led0On" scoped="" ref="0x40ee1c38"/>
        <function-ref name="led2On" scoped="" ref="0x40ee1d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40ef9a28" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ef9a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ef9c00"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ef9ce0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ef9dc0"/>
        <function-ref name="getSize" scoped="" ref="0x40ef9ea0"/>
        <function-ref name="readDone" scoped="" ref="0x40f07010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40f28800" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f28800"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f289d8"/>
        <function-ref name="writeDone" scoped="" ref="0x40f28ab8"/>
        <function-ref name="erase" scoped="" ref="0x40f28b98"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f28c78"/>
        <function-ref name="write" scoped="" ref="0x40f28d58"/>
        <function-ref name="sync" scoped="" ref="0x40f28e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ef8010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ef8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ef81e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ef82c8"/>
        <function-ref name="led1On" scoped="" ref="0x40ef83a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ef8488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ef8568"/>
        <function-ref name="get" scoped="" ref="0x40ef8648"/>
        <function-ref name="led1Off" scoped="" ref="0x40ef8728"/>
        <function-ref name="led2Off" scoped="" ref="0x40ef8aa8"/>
        <function-ref name="set" scoped="" ref="0x40ef8808"/>
        <function-ref name="led0On" scoped="" ref="0x40ef88e8"/>
        <function-ref name="led2On" scoped="" ref="0x40ef89c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x40f04df8" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40f04df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f08010"/>
        <function-ref name="receiveDone" scoped="" ref="0x40f080f0"/>
        <function-ref name="publish" scoped="" ref="0x40f081d0"/>
        <function-ref name="stop" scoped="" ref="0x40f082b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f201c0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f201c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f1ed58"/>
        <function-ref name="fired" scoped="" ref="0x40f1e010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f1e718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f1e4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40f1d268"/>
        <function-ref name="gett0" scoped="" ref="0x40f1d010"/>
        <function-ref name="isRunning" scoped="" ref="0x40f1e268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f207e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f1ea38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f20a68"/>
        <function-ref name="stop" scoped="" ref="0x40f20ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x40f15d50" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x40f15d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f15f28"/>
        <function-ref name="getPayload" scoped="" ref="0x40f1c018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f1c0f8"/>
        <function-ref name="cancel" scoped="" ref="0x40f1c1d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f1c2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f21c50" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f21c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f21e28"/>
        <function-ref name="rand32" scoped="" ref="0x40f21f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x40f1c4e8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x40f1c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f1c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40f1cb78" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f1cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f1cd50"/>
        <function-ref name="writeDone" scoped="" ref="0x40f1ce30"/>
        <function-ref name="erase" scoped="" ref="0x40f1cf10"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f1b010"/>
        <function-ref name="write" scoped="" ref="0x40f1b0f0"/>
        <function-ref name="sync" scoped="" ref="0x40f1b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x40f43f08" loc="110:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x40f43f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f420f0"/>
        <function-ref name="runTask" scoped="" ref="0x40f421d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f1b340" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f1b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f1b518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f1b5f8"/>
        <function-ref name="led1On" scoped="" ref="0x40f1b6d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f1b7b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f1b898"/>
        <function-ref name="get" scoped="" ref="0x40f1b978"/>
        <function-ref name="led1Off" scoped="" ref="0x40f1ba58"/>
        <function-ref name="led2Off" scoped="" ref="0x40f1bdd8"/>
        <function-ref name="set" scoped="" ref="0x40f1bb38"/>
        <function-ref name="led0On" scoped="" ref="0x40f1bc18"/>
        <function-ref name="led2On" scoped="" ref="0x40f1bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x40f172c0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f172c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40f179d8"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40f17578"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40f17658"/>
        <function-ref name="receivedPage" scoped="" ref="0x40f17738"/>
        <function-ref name="setImgNum" scoped="" ref="0x40f17818"/>
        <function-ref name="isTransferring" scoped="" ref="0x40f178f8"/>
        <function-ref name="stop" scoped="" ref="0x40f17498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x40f15890" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40f15890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40f15a68"/>
        <function-ref name="crc16" scoped="" ref="0x40f15b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x40f21628" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40f21628"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f21800"/>
        <function-ref name="receiveDone" scoped="" ref="0x40f218e0"/>
        <function-ref name="publish" scoped="" ref="0x40f219c0"/>
        <function-ref name="stop" scoped="" ref="0x40f21aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40f793d8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40f793d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f795b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f79690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f79770"/>
        <function-ref name="cancel" scoped="" ref="0x40f79850"/>
        <function-ref name="sendDone" scoped="" ref="0x40f79930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40f7b100" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f7b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f7b2d8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f7b3b8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f7b498"/>
        <function-ref name="getSize" scoped="" ref="0x40f7b578"/>
        <function-ref name="readDone" scoped="" ref="0x40f7b658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40f7bb10" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f7bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f7bce8"/>
        <function-ref name="writeDone" scoped="" ref="0x40f7bdc8"/>
        <function-ref name="erase" scoped="" ref="0x40f7bea8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f7a010"/>
        <function-ref name="write" scoped="" ref="0x40f7a0f0"/>
        <function-ref name="sync" scoped="" ref="0x40f7a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40f7a408" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40f7a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f7a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40f7a810" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40f7a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f7a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40f7abf8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40f7abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f7add0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f7aeb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f79010"/>
        <function-ref name="cancel" scoped="" ref="0x40f790f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f791d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40f48460" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f48460"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40f48b78"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40f48718"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40f487f8"/>
        <function-ref name="receivedPage" scoped="" ref="0x40f488d8"/>
        <function-ref name="setImgNum" scoped="" ref="0x40f489b8"/>
        <function-ref name="isTransferring" scoped="" ref="0x40f48a98"/>
        <function-ref name="stop" scoped="" ref="0x40f48638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40f78850" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f78850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f78a28"/>
        <function-ref name="noAck" scoped="" ref="0x40f78b08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f78be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f78d58" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f78d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f77010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f770f0"/>
        <function-ref name="led1On" scoped="" ref="0x40f771d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f772b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f77390"/>
        <function-ref name="get" scoped="" ref="0x40f77470"/>
        <function-ref name="led1Off" scoped="" ref="0x40f77550"/>
        <function-ref name="led2Off" scoped="" ref="0x40f778d0"/>
        <function-ref name="set" scoped="" ref="0x40f77630"/>
        <function-ref name="led0On" scoped="" ref="0x40f77710"/>
        <function-ref name="led2On" scoped="" ref="0x40f777f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f79ac8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f79ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f79ca0"/>
        <function-ref name="source" scoped="" ref="0x40f79d80"/>
        <function-ref name="address" scoped="" ref="0x40f79e60"/>
        <function-ref name="destination" scoped="" ref="0x40f78010"/>
        <function-ref name="setSource" scoped="" ref="0x40f780f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f781d0"/>
        <function-ref name="type" scoped="" ref="0x40f782b0"/>
        <function-ref name="setType" scoped="" ref="0x40f78390"/>
        <function-ref name="isForMe" scoped="" ref="0x40f78470"/>
        <function-ref name="setGroup" scoped="" ref="0x40f78550"/>
        <function-ref name="localGroup" scoped="" ref="0x40f78630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f69a68" loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f69a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f69c40"/>
        <function-ref name="rand32" scoped="" ref="0x40f69d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40f72d88" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40f72d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f6d010"/>
        <function-ref name="getPayload" scoped="" ref="0x40f6d0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f6d1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40f6d2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f6d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40f6eac8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f6eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f6eca0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f6ed80"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f6ee60"/>
        <function-ref name="getSize" scoped="" ref="0x40f73010"/>
        <function-ref name="readDone" scoped="" ref="0x40f730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x40f6e280" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40f6e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40f6e458"/>
        <function-ref name="printBitVec" scoped="" ref="0x40f6e538"/>
        <function-ref name="countOnes" scoped="" ref="0x40f6e618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40f735a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f735a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f73780"/>
        <function-ref name="writeDone" scoped="" ref="0x40f73860"/>
        <function-ref name="erase" scoped="" ref="0x40f73940"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f73a20"/>
        <function-ref name="write" scoped="" ref="0x40f73b00"/>
        <function-ref name="sync" scoped="" ref="0x40f73be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40f73e18" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40f73e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f72010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40f72240" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40f72240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f72418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40f72628" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40f72628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f72800"/>
        <function-ref name="getPayload" scoped="" ref="0x40f728e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f729c0"/>
        <function-ref name="cancel" scoped="" ref="0x40f72aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f72b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f69e90" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f69e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f68108"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f681e8"/>
        <function-ref name="led1On" scoped="" ref="0x40f682c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f683a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f68488"/>
        <function-ref name="get" scoped="" ref="0x40f68568"/>
        <function-ref name="led1Off" scoped="" ref="0x40f68648"/>
        <function-ref name="led2Off" scoped="" ref="0x40f689c8"/>
        <function-ref name="set" scoped="" ref="0x40f68728"/>
        <function-ref name="led0On" scoped="" ref="0x40f68808"/>
        <function-ref name="led2On" scoped="" ref="0x40f688e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40f741a8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40f741a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40f748c0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40f74460"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40f74540"/>
        <function-ref name="receivedPage" scoped="" ref="0x40f74620"/>
        <function-ref name="setImgNum" scoped="" ref="0x40f74700"/>
        <function-ref name="isTransferring" scoped="" ref="0x40f747e0"/>
        <function-ref name="stop" scoped="" ref="0x40f74380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40f6c230" loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f6c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f6c408"/>
        <function-ref name="noAck" scoped="" ref="0x40f6c4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f6c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f6d528" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f6d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f6d700"/>
        <function-ref name="source" scoped="" ref="0x40f6d7e0"/>
        <function-ref name="address" scoped="" ref="0x40f6d8c0"/>
        <function-ref name="destination" scoped="" ref="0x40f6d9a0"/>
        <function-ref name="setSource" scoped="" ref="0x40f6da80"/>
        <function-ref name="setDestination" scoped="" ref="0x40f6db60"/>
        <function-ref name="type" scoped="" ref="0x40f6dc40"/>
        <function-ref name="setType" scoped="" ref="0x40f6dd20"/>
        <function-ref name="isForMe" scoped="" ref="0x40f6de00"/>
        <function-ref name="setGroup" scoped="" ref="0x40f6dee0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f6c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f6c868" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f6c868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f69368"/>
        <function-ref name="fired" scoped="" ref="0x40f6b608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f6bd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f6bab8"/>
        <function-ref name="getdt" scoped="" ref="0x40f69818"/>
        <function-ref name="gett0" scoped="" ref="0x40f695c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f6b860"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f6ce90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f69048"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f6b130"/>
        <function-ref name="stop" scoped="" ref="0x40f6b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x40fbd5d0" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40fbd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40fbd7a8"/>
        <function-ref name="printBitVec" scoped="" ref="0x40fbd888"/>
        <function-ref name="countOnes" scoped="" ref="0x40fbd968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40fbcad8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fbcad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40feb6a8"/>
        <function-ref name="fired" scoped="" ref="0x40fbb938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40feb068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fbbde8"/>
        <function-ref name="getdt" scoped="" ref="0x40febb58"/>
        <function-ref name="gett0" scoped="" ref="0x40feb900"/>
        <function-ref name="isRunning" scoped="" ref="0x40fbbb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fbb1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40feb388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fbb460"/>
        <function-ref name="stop" scoped="" ref="0x40fbb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x40fe7800" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40fe7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40fe79d8"/>
        <function-ref name="crc16" scoped="" ref="0x40fe7ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fe0e08" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fe0e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fdf010"/>
        <function-ref name="getPayload" scoped="" ref="0x40fdf0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fdf1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40fdf2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fdf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fdf4d0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fdf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fdf6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fdf788"/>
        <function-ref name="getPayload" scoped="" ref="0x40fdf868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fdf948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fdfa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fdfb68" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fdfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fdfd40"/>
        <function-ref name="source" scoped="" ref="0x40fdfe20"/>
        <function-ref name="address" scoped="" ref="0x40fdff00"/>
        <function-ref name="destination" scoped="" ref="0x41041010"/>
        <function-ref name="setSource" scoped="" ref="0x410410f0"/>
        <function-ref name="setDestination" scoped="" ref="0x410411d0"/>
        <function-ref name="type" scoped="" ref="0x410412b0"/>
        <function-ref name="setType" scoped="" ref="0x41041390"/>
        <function-ref name="isForMe" scoped="" ref="0x41041470"/>
        <function-ref name="setGroup" scoped="" ref="0x41041550"/>
        <function-ref name="localGroup" scoped="" ref="0x41041630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41041790" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41041790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41041968"/>
        <function-ref name="noAck" scoped="" ref="0x41041a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x41041b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418fa8a8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418fa8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418faa80"/>
        <function-ref name="getPayload" scoped="" ref="0x418fab60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418fac40"/>
        <function-ref name="cancel" scoped="" ref="0x418fad20"/>
        <function-ref name="sendDone" scoped="" ref="0x418fae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x418f7010" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x418f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418f71e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x418f72c8"/>
        <function-ref name="getPayload" scoped="" ref="0x418f73a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418f7488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418f7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x418f76a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418f76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418f7880"/>
        <function-ref name="source" scoped="" ref="0x418f7960"/>
        <function-ref name="address" scoped="" ref="0x418f7a40"/>
        <function-ref name="destination" scoped="" ref="0x418f7b20"/>
        <function-ref name="setSource" scoped="" ref="0x418f7c00"/>
        <function-ref name="setDestination" scoped="" ref="0x418f7ce0"/>
        <function-ref name="type" scoped="" ref="0x418f7dc0"/>
        <function-ref name="setType" scoped="" ref="0x418f7ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x418f6010"/>
        <function-ref name="setGroup" scoped="" ref="0x418f60f0"/>
        <function-ref name="localGroup" scoped="" ref="0x418f61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x418f6330" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x418f6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x418f6508"/>
        <function-ref name="noAck" scoped="" ref="0x418f65e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x418f66c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418f0440" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418f0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418f0618"/>
        <function-ref name="getPayload" scoped="" ref="0x418f06f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418f07d8"/>
        <function-ref name="cancel" scoped="" ref="0x418f08b8"/>
        <function-ref name="sendDone" scoped="" ref="0x418f0998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x418f0b08" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x418f0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418f0ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x418f0dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418f0ea0"/>
        <function-ref name="cancel" scoped="" ref="0x418ef010"/>
        <function-ref name="sendDone" scoped="" ref="0x418ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x418ef230" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418ef230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418ef408"/>
        <function-ref name="source" scoped="" ref="0x418ef4e8"/>
        <function-ref name="address" scoped="" ref="0x418ef5c8"/>
        <function-ref name="destination" scoped="" ref="0x418ef6a8"/>
        <function-ref name="setSource" scoped="" ref="0x418ef788"/>
        <function-ref name="setDestination" scoped="" ref="0x418ef868"/>
        <function-ref name="type" scoped="" ref="0x418ef948"/>
        <function-ref name="setType" scoped="" ref="0x418efa28"/>
        <function-ref name="isForMe" scoped="" ref="0x418efb08"/>
        <function-ref name="setGroup" scoped="" ref="0x418efbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x418efcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41004dc0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41004dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41001010"/>
        <function-ref name="getPayload" scoped="" ref="0x410010f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410011d0"/>
        <function-ref name="cancel" scoped="" ref="0x410012b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41001390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41010598" loc="48:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41010598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41010780"/>
        <function-ref name="getPayload" scoped="" ref="0x41010860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41010940"/>
        <function-ref name="cancel" scoped="" ref="0x41010a20"/>
        <function-ref name="sendDone" scoped="" ref="0x41010b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fffda0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fffda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41010010"/>
        <function-ref name="getPayload" scoped="" ref="0x410100f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410101d0"/>
        <function-ref name="cancel" scoped="" ref="0x410102b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41010390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4100f850" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4100f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4100fa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x4100fb08"/>
        <function-ref name="getPayload" scoped="" ref="0x4100fbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4100fcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4100fda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x4100ff28" loc="169:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x4100ff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4100e110"/>
        <function-ref name="runTask" scoped="" ref="0x4100e1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x4100e370" loc="126:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x4100e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4100e548"/>
        <function-ref name="runTask" scoped="" ref="0x4100e628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41010c40" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41010c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41010e18"/>
        <function-ref name="source" scoped="" ref="0x41010ef8"/>
        <function-ref name="address" scoped="" ref="0x4100f010"/>
        <function-ref name="destination" scoped="" ref="0x4100f0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4100f1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4100f2b0"/>
        <function-ref name="type" scoped="" ref="0x4100f390"/>
        <function-ref name="setType" scoped="" ref="0x4100f470"/>
        <function-ref name="isForMe" scoped="" ref="0x4100f550"/>
        <function-ref name="setGroup" scoped="" ref="0x4100f630"/>
        <function-ref name="localGroup" scoped="" ref="0x4100f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4103c5d8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4103c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4103c7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4103c890"/>
        <function-ref name="getPayload" scoped="" ref="0x4103c970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4103ca50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4103cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4103c2c0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4103c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4103c498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4103cc70" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4103cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4103ce48"/>
        <function-ref name="source" scoped="" ref="0x4103cf28"/>
        <function-ref name="address" scoped="" ref="0x41039018"/>
        <function-ref name="destination" scoped="" ref="0x410390f8"/>
        <function-ref name="setSource" scoped="" ref="0x410391d8"/>
        <function-ref name="setDestination" scoped="" ref="0x410392b8"/>
        <function-ref name="type" scoped="" ref="0x41039398"/>
        <function-ref name="setType" scoped="" ref="0x41039478"/>
        <function-ref name="isForMe" scoped="" ref="0x41039558"/>
        <function-ref name="setGroup" scoped="" ref="0x41039638"/>
        <function-ref name="localGroup" scoped="" ref="0x41039718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41038778" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41038778"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41038950"/>
        <function-ref name="getPayload" scoped="" ref="0x41038a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41038b10"/>
        <function-ref name="cancel" scoped="" ref="0x41038bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x41038cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41038e10" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41038e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41037010"/>
        <function-ref name="payloadLength" scoped="" ref="0x410370f0"/>
        <function-ref name="getPayload" scoped="" ref="0x410371d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410372b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41037390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410374d0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410376a8"/>
        <function-ref name="source" scoped="" ref="0x41037788"/>
        <function-ref name="address" scoped="" ref="0x41037868"/>
        <function-ref name="destination" scoped="" ref="0x41037948"/>
        <function-ref name="setSource" scoped="" ref="0x41037a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41037b08"/>
        <function-ref name="type" scoped="" ref="0x41037be8"/>
        <function-ref name="setType" scoped="" ref="0x41037cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41037da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41037e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41036010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41036170" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41036170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41036348"/>
        <function-ref name="noAck" scoped="" ref="0x41036428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41036508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41921358" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41921358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41921530"/>
        <function-ref name="getPayload" scoped="" ref="0x41921610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419216f0"/>
        <function-ref name="cancel" scoped="" ref="0x419217d0"/>
        <function-ref name="sendDone" scoped="" ref="0x419218b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x419219f0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x419219f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41921bc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41921ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x41921d88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41921e68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41920010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41920150" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41920150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41920328"/>
        <function-ref name="source" scoped="" ref="0x41920408"/>
        <function-ref name="address" scoped="" ref="0x419204e8"/>
        <function-ref name="destination" scoped="" ref="0x419205c8"/>
        <function-ref name="setSource" scoped="" ref="0x419206a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41920788"/>
        <function-ref name="type" scoped="" ref="0x41920868"/>
        <function-ref name="setType" scoped="" ref="0x41920948"/>
        <function-ref name="isForMe" scoped="" ref="0x41920a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41920b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41920be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41920d48" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41920d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41920f20"/>
        <function-ref name="noAck" scoped="" ref="0x4191f018"/>
        <function-ref name="wasAcked" scoped="" ref="0x4191f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4191de80" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4191de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41919070"/>
        <function-ref name="getPayload" scoped="" ref="0x41919150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41919230"/>
        <function-ref name="cancel" scoped="" ref="0x41919310"/>
        <function-ref name="sendDone" scoped="" ref="0x419193f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41919560" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41919560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41919738"/>
        <function-ref name="getPayload" scoped="" ref="0x41919818"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419198f8"/>
        <function-ref name="cancel" scoped="" ref="0x419199d8"/>
        <function-ref name="sendDone" scoped="" ref="0x41919ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41919bf8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41919bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41919dd0"/>
        <function-ref name="source" scoped="" ref="0x41919eb0"/>
        <function-ref name="address" scoped="" ref="0x41918010"/>
        <function-ref name="destination" scoped="" ref="0x419180f0"/>
        <function-ref name="setSource" scoped="" ref="0x419181d0"/>
        <function-ref name="setDestination" scoped="" ref="0x419182b0"/>
        <function-ref name="type" scoped="" ref="0x41918390"/>
        <function-ref name="setType" scoped="" ref="0x41918470"/>
        <function-ref name="isForMe" scoped="" ref="0x41918550"/>
        <function-ref name="setGroup" scoped="" ref="0x41918630"/>
        <function-ref name="localGroup" scoped="" ref="0x41918710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41035a60" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41035a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41035c38"/>
        <function-ref name="payloadLength" scoped="" ref="0x41035d18"/>
        <function-ref name="getPayload" scoped="" ref="0x41035df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41035ed8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41034010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41035748" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41035748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41035920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41034150" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41034150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41034328"/>
        <function-ref name="source" scoped="" ref="0x41034408"/>
        <function-ref name="address" scoped="" ref="0x410344e8"/>
        <function-ref name="destination" scoped="" ref="0x410345c8"/>
        <function-ref name="setSource" scoped="" ref="0x410346a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41034788"/>
        <function-ref name="type" scoped="" ref="0x41034868"/>
        <function-ref name="setType" scoped="" ref="0x41034948"/>
        <function-ref name="isForMe" scoped="" ref="0x41034a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41034b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41034be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41033c30" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41033c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41033e08"/>
        <function-ref name="getPayload" scoped="" ref="0x41033ee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41032010"/>
        <function-ref name="cancel" scoped="" ref="0x410320f0"/>
        <function-ref name="sendDone" scoped="" ref="0x410321d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41032310" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41032310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410324e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410325c8"/>
        <function-ref name="getPayload" scoped="" ref="0x410326a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41032788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41032868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410329a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410329a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41032b80"/>
        <function-ref name="source" scoped="" ref="0x41032c60"/>
        <function-ref name="address" scoped="" ref="0x41032d40"/>
        <function-ref name="destination" scoped="" ref="0x41032e20"/>
        <function-ref name="setSource" scoped="" ref="0x41032f00"/>
        <function-ref name="setDestination" scoped="" ref="0x41030010"/>
        <function-ref name="type" scoped="" ref="0x410300f0"/>
        <function-ref name="setType" scoped="" ref="0x410301d0"/>
        <function-ref name="isForMe" scoped="" ref="0x410302b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41030390"/>
        <function-ref name="localGroup" scoped="" ref="0x41030470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x410305d0" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x410305d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x410307a8"/>
        <function-ref name="noAck" scoped="" ref="0x41030888"/>
        <function-ref name="wasAcked" scoped="" ref="0x41030968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41909200" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41909200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419093d8"/>
        <function-ref name="getPayload" scoped="" ref="0x419094b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41909598"/>
        <function-ref name="cancel" scoped="" ref="0x41909678"/>
        <function-ref name="sendDone" scoped="" ref="0x41909758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41909898" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41909898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41909a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41909b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41909c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41909d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41909df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41908010" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41908010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x419081e8"/>
        <function-ref name="source" scoped="" ref="0x419082c8"/>
        <function-ref name="address" scoped="" ref="0x419083a8"/>
        <function-ref name="destination" scoped="" ref="0x41908488"/>
        <function-ref name="setSource" scoped="" ref="0x41908568"/>
        <function-ref name="setDestination" scoped="" ref="0x41908648"/>
        <function-ref name="type" scoped="" ref="0x41908728"/>
        <function-ref name="setType" scoped="" ref="0x41908808"/>
        <function-ref name="isForMe" scoped="" ref="0x419088e8"/>
        <function-ref name="setGroup" scoped="" ref="0x419089c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41908aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41908c08" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41908c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41908de0"/>
        <function-ref name="noAck" scoped="" ref="0x41908ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41907010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41905ae8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41905ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41905cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41905da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41905e80"/>
        <function-ref name="cancel" scoped="" ref="0x41902010"/>
        <function-ref name="sendDone" scoped="" ref="0x419020f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41902260" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41902260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41902438"/>
        <function-ref name="getPayload" scoped="" ref="0x41902518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419025f8"/>
        <function-ref name="cancel" scoped="" ref="0x419026d8"/>
        <function-ref name="sendDone" scoped="" ref="0x419027b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x419028f8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x419028f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41902ad0"/>
        <function-ref name="source" scoped="" ref="0x41902bb0"/>
        <function-ref name="address" scoped="" ref="0x41902c90"/>
        <function-ref name="destination" scoped="" ref="0x41902d70"/>
        <function-ref name="setSource" scoped="" ref="0x41902e50"/>
        <function-ref name="setDestination" scoped="" ref="0x4195f010"/>
        <function-ref name="type" scoped="" ref="0x4195f0f0"/>
        <function-ref name="setType" scoped="" ref="0x4195f1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4195f2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4195f390"/>
        <function-ref name="localGroup" scoped="" ref="0x4195f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4102feb8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4102feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4102e0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4102e1a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4102e280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4102e360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4102e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4102fba0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4102fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4102fd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4102e580" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4102e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4102e758"/>
        <function-ref name="source" scoped="" ref="0x4102e838"/>
        <function-ref name="address" scoped="" ref="0x4102e918"/>
        <function-ref name="destination" scoped="" ref="0x4102e9f8"/>
        <function-ref name="setSource" scoped="" ref="0x4102ead8"/>
        <function-ref name="setDestination" scoped="" ref="0x4102ebb8"/>
        <function-ref name="type" scoped="" ref="0x4102ec98"/>
        <function-ref name="setType" scoped="" ref="0x4102ed78"/>
        <function-ref name="isForMe" scoped="" ref="0x4102ee58"/>
        <function-ref name="setGroup" scoped="" ref="0x4102d010"/>
        <function-ref name="localGroup" scoped="" ref="0x4102d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4102ba38" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4102ba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41029558"/>
        <function-ref name="fired" scoped="" ref="0x4102a7e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4102aee8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4102ac90"/>
        <function-ref name="getdt" scoped="" ref="0x41029a08"/>
        <function-ref name="gett0" scoped="" ref="0x410297b0"/>
        <function-ref name="isRunning" scoped="" ref="0x4102aa38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4102a088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41029238"/>
        <function-ref name="startOneShot" scoped="" ref="0x4102a308"/>
        <function-ref name="stop" scoped="" ref="0x4102a588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4105d2c0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4105d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4105d498"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4105d578"/>
        <function-ref name="computeCrc" scoped="" ref="0x4105d658"/>
        <function-ref name="getSize" scoped="" ref="0x4105d738"/>
        <function-ref name="readDone" scoped="" ref="0x4105d818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4105d958" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4105d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4105db30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105dc10"/>
        <function-ref name="request" scoped="" ref="0x4105dcf0"/>
        <function-ref name="granted" scoped="" ref="0x4105ddd0"/>
        <function-ref name="isOwner" scoped="" ref="0x4105deb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419502b0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419502b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41950488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41059798" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41059798"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41059970"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41059a50"/>
        <function-ref name="computeCrc" scoped="" ref="0x41059b30"/>
        <function-ref name="getSize" scoped="" ref="0x41059c10"/>
        <function-ref name="readDone" scoped="" ref="0x41059cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410551b8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410551b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41055390"/>
        <function-ref name="writeDone" scoped="" ref="0x41055470"/>
        <function-ref name="erase" scoped="" ref="0x41055550"/>
        <function-ref name="eraseDone" scoped="" ref="0x41055630"/>
        <function-ref name="write" scoped="" ref="0x41055710"/>
        <function-ref name="sync" scoped="" ref="0x410557f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x41051e20" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41051e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41053010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x41051778" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41051778"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41051950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41052e60" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41052e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41050070"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41050150"/>
        <function-ref name="computeCrc" scoped="" ref="0x41050230"/>
        <function-ref name="getSize" scoped="" ref="0x41050310"/>
        <function-ref name="readDone" scoped="" ref="0x410503f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410505c8" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410505c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410507b0"/>
        <function-ref name="writeDone" scoped="" ref="0x41050890"/>
        <function-ref name="erase" scoped="" ref="0x41050970"/>
        <function-ref name="eraseDone" scoped="" ref="0x41050a50"/>
        <function-ref name="write" scoped="" ref="0x41050b30"/>
        <function-ref name="sync" scoped="" ref="0x41050c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x4108f1e8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4108f1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4108f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x41050de8" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41050de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41090010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x41090238" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x41090238"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41090420"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41090500"/>
        <function-ref name="computeCrc" scoped="" ref="0x410905e0"/>
        <function-ref name="getSize" scoped="" ref="0x410906c0"/>
        <function-ref name="readDone" scoped="" ref="0x410907a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x41090998" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x41090998"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41090b80"/>
        <function-ref name="writeDone" scoped="" ref="0x41090c60"/>
        <function-ref name="erase" scoped="" ref="0x41090d40"/>
        <function-ref name="eraseDone" scoped="" ref="0x41090e20"/>
        <function-ref name="write" scoped="" ref="0x41090f00"/>
        <function-ref name="sync" scoped="" ref="0x4108f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x4108f5a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x4108f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x4108f790"/>
        <function-ref name="remap" scoped="" ref="0x4108f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4108b460" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4108b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4108b638"/>
        <function-ref name="writeDone" scoped="" ref="0x4108b718"/>
        <function-ref name="erase" scoped="" ref="0x4108b7f8"/>
        <function-ref name="eraseDone" scoped="" ref="0x4108b8d8"/>
        <function-ref name="write" scoped="" ref="0x4108b9b8"/>
        <function-ref name="sync" scoped="" ref="0x4108ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4108bbd8" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4108bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4108bdb0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4108be90"/>
        <function-ref name="computeCrc" scoped="" ref="0x41209010"/>
        <function-ref name="getSize" scoped="" ref="0x412090f0"/>
        <function-ref name="readDone" scoped="" ref="0x412091d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x41083010" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x41083010"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x41082010"/>
        <function-ref name="syncDone" scoped="" ref="0x410832c8"/>
        <function-ref name="flushDone" scoped="" ref="0x410833a8"/>
        <function-ref name="read" scoped="" ref="0x41083488"/>
        <function-ref name="writeDone" scoped="" ref="0x41083568"/>
        <function-ref name="copyPage" scoped="" ref="0x41083648"/>
        <function-ref name="erase" scoped="" ref="0x41083728"/>
        <function-ref name="eraseDone" scoped="" ref="0x41083808"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410838e8"/>
        <function-ref name="flush" scoped="" ref="0x410839c8"/>
        <function-ref name="syncAll" scoped="" ref="0x41083aa8"/>
        <function-ref name="flushAll" scoped="" ref="0x41083b88"/>
        <function-ref name="write" scoped="" ref="0x41083c68"/>
        <function-ref name="sync" scoped="" ref="0x41083dc8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41083ea8"/>
        <function-ref name="readDone" scoped="" ref="0x410831e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41085028" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41085028"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41085200"/>
        <function-ref name="writeDone" scoped="" ref="0x410852e0"/>
        <function-ref name="erase" scoped="" ref="0x410853c0"/>
        <function-ref name="eraseDone" scoped="" ref="0x410854a0"/>
        <function-ref name="write" scoped="" ref="0x41085580"/>
        <function-ref name="sync" scoped="" ref="0x41085660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41085b10" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41085b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41085ce8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41085dc8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41085ea8"/>
        <function-ref name="getSize" scoped="" ref="0x41084010"/>
        <function-ref name="readDone" scoped="" ref="0x410840f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x410aeab8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x410aeab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x410aec90"/>
        <function-ref name="flipped" scoped="" ref="0x410aed70"/>
        <function-ref name="isConfig" scoped="" ref="0x410aee50"/>
        <function-ref name="writeHook" scoped="" ref="0x410b2010"/>
        <function-ref name="remap" scoped="" ref="0x410b20f0"/>
        <function-ref name="writeContinue" scoped="" ref="0x410b21d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x410824e0" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x410824e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x410826b8"/>
        <function-ref name="remap" scoped="" ref="0x41082798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41082c40" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41082c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41082e18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41082ef8"/>
        <function-ref name="request" scoped="" ref="0x410b3010"/>
        <function-ref name="granted" scoped="" ref="0x410b30f0"/>
        <function-ref name="isOwner" scoped="" ref="0x410b31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x410de8b8" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x410de8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x410db870"/>
        <function-ref name="syncDone" scoped="" ref="0x410deb70"/>
        <function-ref name="flushDone" scoped="" ref="0x410dec50"/>
        <function-ref name="read" scoped="" ref="0x410ded30"/>
        <function-ref name="writeDone" scoped="" ref="0x410dee10"/>
        <function-ref name="copyPage" scoped="" ref="0x410deef0"/>
        <function-ref name="erase" scoped="" ref="0x410db010"/>
        <function-ref name="eraseDone" scoped="" ref="0x410db0f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410db1d0"/>
        <function-ref name="flush" scoped="" ref="0x410db2b0"/>
        <function-ref name="syncAll" scoped="" ref="0x410db390"/>
        <function-ref name="flushAll" scoped="" ref="0x410db470"/>
        <function-ref name="write" scoped="" ref="0x410db550"/>
        <function-ref name="sync" scoped="" ref="0x410db6b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410db790"/>
        <function-ref name="readDone" scoped="" ref="0x410dea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41111390" loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41111390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41111568"/>
        <function-ref name="requested" scoped="" ref="0x41111648"/>
        <function-ref name="granted" scoped="" ref="0x41111728"/>
        <function-ref name="isOwner" scoped="" ref="0x41111808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411118e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410dbd10" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410dbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410dbee8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410da010"/>
        <function-ref name="request" scoped="" ref="0x410da0f0"/>
        <function-ref name="granted" scoped="" ref="0x410da1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x410da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41111a98" loc="28:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41111a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41111c70"/>
        <function-ref name="userId" scoped="" ref="0x41111d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x410ff0f0" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x410ff0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x4110e390"/>
        <function-ref name="waitCompare" scoped="" ref="0x410ff3a8"/>
        <function-ref name="crcDone" scoped="" ref="0x410ff488"/>
        <function-ref name="flushDone" scoped="" ref="0x410ff568"/>
        <function-ref name="read" scoped="" ref="0x410ff648"/>
        <function-ref name="erase" scoped="" ref="0x410ff728"/>
        <function-ref name="writeDone" scoped="" ref="0x410ff808"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x410ff8e8"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x410ff9c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x410ffaa8"/>
        <function-ref name="waitIdle" scoped="" ref="0x410ffb88"/>
        <function-ref name="flush" scoped="" ref="0x410ffc68"/>
        <function-ref name="write" scoped="" ref="0x410ffd48"/>
        <function-ref name="compareDone" scoped="" ref="0x410ffea8"/>
        <function-ref name="compare" scoped="" ref="0x4110e010"/>
        <function-ref name="crc" scoped="" ref="0x4110e0f0"/>
        <function-ref name="readBuffer" scoped="" ref="0x4110e1d0"/>
        <function-ref name="fillDone" scoped="" ref="0x4110e2b0"/>
        <function-ref name="readDone" scoped="" ref="0x410ff2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x410d99f8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x410d99f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x4110fa30"/>
        <function-ref name="syncDone" scoped="" ref="0x410d9cb0"/>
        <function-ref name="flushDone" scoped="" ref="0x410d9d90"/>
        <function-ref name="read" scoped="" ref="0x410d9e70"/>
        <function-ref name="writeDone" scoped="" ref="0x4110f010"/>
        <function-ref name="copyPage" scoped="" ref="0x4110f0f0"/>
        <function-ref name="erase" scoped="" ref="0x4110f1d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4110f2b0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4110f390"/>
        <function-ref name="flush" scoped="" ref="0x4110f470"/>
        <function-ref name="syncAll" scoped="" ref="0x4110f550"/>
        <function-ref name="flushAll" scoped="" ref="0x4110f630"/>
        <function-ref name="write" scoped="" ref="0x4110f710"/>
        <function-ref name="sync" scoped="" ref="0x4110f870"/>
        <function-ref name="computeCrc" scoped="" ref="0x4110f950"/>
        <function-ref name="readDone" scoped="" ref="0x410d9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x410fd758" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x410fd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x410fdea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x4112f3b0" loc="145:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x4112f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4112f588"/>
        <function-ref name="runTask" scoped="" ref="0x4112f668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x4112e3b0" loc="148:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x4112e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4112e588"/>
        <function-ref name="runTask" scoped="" ref="0x4112e668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410d96a0" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410d96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410d9878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x4116b9a0" loc="20:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x4116b9a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403428e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403428e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x41168bf0"/>
        <function-ref name="waitCompare" scoped="" ref="0x4116bc58"/>
        <function-ref name="crcDone" scoped="" ref="0x4116bd38"/>
        <function-ref name="flushDone" scoped="" ref="0x4116be18"/>
        <function-ref name="read" scoped="" ref="0x4116bef8"/>
        <function-ref name="erase" scoped="" ref="0x41168010"/>
        <function-ref name="writeDone" scoped="" ref="0x411680f0"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x411681d0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x411682b0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41168390"/>
        <function-ref name="waitIdle" scoped="" ref="0x41168470"/>
        <function-ref name="flush" scoped="" ref="0x41168550"/>
        <function-ref name="write" scoped="" ref="0x41168630"/>
        <function-ref name="compareDone" scoped="" ref="0x41168790"/>
        <function-ref name="compare" scoped="" ref="0x41168870"/>
        <function-ref name="crc" scoped="" ref="0x41168950"/>
        <function-ref name="readBuffer" scoped="" ref="0x41168a30"/>
        <function-ref name="fillDone" scoped="" ref="0x41168b10"/>
        <function-ref name="readDone" scoped="" ref="0x4116bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x411665b8" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x411665b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x41165870"/>
        <function-ref name="waitCompare" scoped="" ref="0x41166870"/>
        <function-ref name="crcDone" scoped="" ref="0x41166950"/>
        <function-ref name="flushDone" scoped="" ref="0x41166a30"/>
        <function-ref name="read" scoped="" ref="0x41166b10"/>
        <function-ref name="erase" scoped="" ref="0x41166bf0"/>
        <function-ref name="writeDone" scoped="" ref="0x41166cd0"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x41166db0"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x41166e90"/>
        <function-ref name="eraseDone" scoped="" ref="0x41165010"/>
        <function-ref name="waitIdle" scoped="" ref="0x411650f0"/>
        <function-ref name="flush" scoped="" ref="0x411651d0"/>
        <function-ref name="write" scoped="" ref="0x411652b0"/>
        <function-ref name="compareDone" scoped="" ref="0x41165410"/>
        <function-ref name="compare" scoped="" ref="0x411654f0"/>
        <function-ref name="crc" scoped="" ref="0x411655d0"/>
        <function-ref name="readBuffer" scoped="" ref="0x411656b0"/>
        <function-ref name="fillDone" scoped="" ref="0x41165790"/>
        <function-ref name="fill" scoped="" ref="0x41166790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x41178488" loc="30:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41178488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x41178660"/>
        <function-ref name="waitIdle" scoped="" ref="0x41178740"/>
        <function-ref name="idle" scoped="" ref="0x41178820"/>
        <function-ref name="select" scoped="" ref="0x41178900"/>
        <function-ref name="deselect" scoped="" ref="0x411789e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x411659e0" loc="28:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411659e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41165bb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41165c98"/>
        <function-ref name="request" scoped="" ref="0x41165d78"/>
        <function-ref name="granted" scoped="" ref="0x41165e58"/>
        <function-ref name="isOwner" scoped="" ref="0x41178010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x41178170" loc="29:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41178170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41178348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x411745b0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x411745b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x41174788"/>
        <function-ref name="waitIdle" scoped="" ref="0x41174868"/>
        <function-ref name="idle" scoped="" ref="0x41174948"/>
        <function-ref name="select" scoped="" ref="0x41174a28"/>
        <function-ref name="deselect" scoped="" ref="0x41174b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41177a10" loc="54:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41177a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41177be8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41177cc8"/>
        <function-ref name="request" scoped="" ref="0x41177da8"/>
        <function-ref name="granted" scoped="" ref="0x41177e88"/>
        <function-ref name="isOwner" scoped="" ref="0x41174010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x41174210" loc="55:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41174210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x411743e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x411ac110" loc="100:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x411ac110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ac2e8"/>
        <function-ref name="isInput" scoped="" ref="0x411ac3c8"/>
        <function-ref name="toggle" scoped="" ref="0x411ac4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x411ac588"/>
        <function-ref name="get" scoped="" ref="0x411ac668"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ac748"/>
        <function-ref name="set" scoped="" ref="0x411ac828"/>
        <function-ref name="clr" scoped="" ref="0x411ac908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x411acc58" loc="101:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x411acc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x411ab3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x411ad730" loc="99:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x411ad730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ad908"/>
        <function-ref name="isInput" scoped="" ref="0x411ad9e8"/>
        <function-ref name="toggle" scoped="" ref="0x411adac8"/>
        <function-ref name="isOutput" scoped="" ref="0x411adba8"/>
        <function-ref name="get" scoped="" ref="0x411adc88"/>
        <function-ref name="makeOutput" scoped="" ref="0x411add68"/>
        <function-ref name="set" scoped="" ref="0x411ade48"/>
        <function-ref name="clr" scoped="" ref="0x411adf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x411ae330" loc="97:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x411ae330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ae508"/>
        <function-ref name="isInput" scoped="" ref="0x411ae5e8"/>
        <function-ref name="toggle" scoped="" ref="0x411ae6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x411ae7a8"/>
        <function-ref name="get" scoped="" ref="0x411ae888"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ae968"/>
        <function-ref name="set" scoped="" ref="0x411aea48"/>
        <function-ref name="clr" scoped="" ref="0x411aeb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x41172b50" loc="94:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41172b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x41172d28"/>
        <function-ref name="waitIdle" scoped="" ref="0x41172e08"/>
        <function-ref name="idle" scoped="" ref="0x41172ee8"/>
        <function-ref name="select" scoped="" ref="0x411ae010"/>
        <function-ref name="deselect" scoped="" ref="0x411ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x411aed08" loc="98:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x411aed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411aeee0"/>
        <function-ref name="isInput" scoped="" ref="0x411ad010"/>
        <function-ref name="toggle" scoped="" ref="0x411ad0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x411ad1d0"/>
        <function-ref name="get" scoped="" ref="0x411ad2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ad390"/>
        <function-ref name="set" scoped="" ref="0x411ad470"/>
        <function-ref name="clr" scoped="" ref="0x411ad550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x4119b728" loc="163:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x4119b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4119b900"/>
        <function-ref name="runTask" scoped="" ref="0x4119b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411723d8" loc="92:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411723d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411725b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x411727b0" loc="93:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x411727b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41172988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x41194270" loc="36:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41194270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40396950"/>
            <typename><typedef-ref name="TMicro" ref="0x40396b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x411949c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41195f18" loc="22:/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41195f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411c9108"/>
        <function-ref name="configure" scoped="" ref="0x411c91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41195860" loc="21:/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41195860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41195a38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41195b18"/>
        <function-ref name="request" scoped="" ref="0x41195bf8"/>
        <function-ref name="granted" scoped="" ref="0x41195cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x41195db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x411c9368" loc="25:/home/van9ogh/Projects/tinyos-main/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x411c9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411c9540"/>
        <function-ref name="runTask" scoped="" ref="0x411c9620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411d4b58" loc="92:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411d4b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411d4d40"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411d4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411d3b58" loc="96:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411d3b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411d3d40"/>
        <function-ref name="configure" scoped="" ref="0x411d3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x411d3010" loc="93:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411d31e8"/>
        <function-ref name="requested" scoped="" ref="0x411d32c8"/>
        <function-ref name="granted" scoped="" ref="0x411d33a8"/>
        <function-ref name="isOwner" scoped="" ref="0x411d3488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411d3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411d4418" loc="91:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411d4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411d4600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411d46e0"/>
        <function-ref name="request" scoped="" ref="0x411d47c0"/>
        <function-ref name="granted" scoped="" ref="0x411d48a0"/>
        <function-ref name="isOwner" scoped="" ref="0x411d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411d36a8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411d36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411d3880"/>
        <function-ref name="userId" scoped="" ref="0x411d3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41986430" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41986430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41986608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41986768" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41986768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41986940"/>
        <function-ref name="isEmpty" scoped="" ref="0x41986a20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41986b00"/>
        <function-ref name="dequeue" scoped="" ref="0x41986be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41983030" loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41983030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41983218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419832f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41982010" loc="60:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41982010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x419821f8"/>
        <function-ref name="configure" scoped="" ref="0x419822d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41982438" loc="61:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41982438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41982610"/>
        <function-ref name="isEmpty" scoped="" ref="0x419826f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419827d0"/>
        <function-ref name="dequeue" scoped="" ref="0x419828b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41983438" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41983438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41983610"/>
        <function-ref name="requested" scoped="" ref="0x419836f0"/>
        <function-ref name="granted" scoped="" ref="0x419837d0"/>
        <function-ref name="isOwner" scoped="" ref="0x419838b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41983990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x419829f0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x419829f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41982bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41982ca8"/>
        <function-ref name="led1On" scoped="" ref="0x41982d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41982e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41981010"/>
        <function-ref name="get" scoped="" ref="0x419810f0"/>
        <function-ref name="led1Off" scoped="" ref="0x419811d0"/>
        <function-ref name="led0On" scoped="" ref="0x41981550"/>
        <function-ref name="set" scoped="" ref="0x41981390"/>
        <function-ref name="led2On" scoped="" ref="0x419812b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41981470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419848d0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419848d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41984ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41984b98"/>
        <function-ref name="request" scoped="" ref="0x41984c78"/>
        <function-ref name="granted" scoped="" ref="0x41984d58"/>
        <function-ref name="isOwner" scoped="" ref="0x41984e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41983ad0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41983ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41983ca8"/>
        <function-ref name="userId" scoped="" ref="0x41983d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x419816d0" loc="75:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x419816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x419818a8"/>
        <function-ref name="runTask" scoped="" ref="0x41981988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x4120f7d0" loc="18:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x4120f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x4120f9a8"/>
        <function-ref name="remap" scoped="" ref="0x4120fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41208200" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41208200"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x412083d8"/>
        <function-ref name="writeDone" scoped="" ref="0x412084b8"/>
        <function-ref name="erase" scoped="" ref="0x41208598"/>
        <function-ref name="eraseDone" scoped="" ref="0x41208678"/>
        <function-ref name="write" scoped="" ref="0x41208758"/>
        <function-ref name="sync" scoped="" ref="0x41208838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41208978" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41208978"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41208b50"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41208c30"/>
        <function-ref name="computeCrc" scoped="" ref="0x41208d10"/>
        <function-ref name="getSize" scoped="" ref="0x41208df0"/>
        <function-ref name="readDone" scoped="" ref="0x41208ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41207e58" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41207e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41206050"/>
        <function-ref name="writeDone" scoped="" ref="0x41206130"/>
        <function-ref name="erase" scoped="" ref="0x41206210"/>
        <function-ref name="eraseDone" scoped="" ref="0x412062f0"/>
        <function-ref name="write" scoped="" ref="0x412063d0"/>
        <function-ref name="sync" scoped="" ref="0x412064b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x412065f0" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x412065f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412067c8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x412068a8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41206988"/>
        <function-ref name="getSize" scoped="" ref="0x41206a68"/>
        <function-ref name="readDone" scoped="" ref="0x41206b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41205ae0" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41205ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41205cb8"/>
        <function-ref name="writeDone" scoped="" ref="0x41205d98"/>
        <function-ref name="erase" scoped="" ref="0x41205e78"/>
        <function-ref name="eraseDone" scoped="" ref="0x41204010"/>
        <function-ref name="write" scoped="" ref="0x412040f0"/>
        <function-ref name="sync" scoped="" ref="0x412041d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41204310" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41204310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412044e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x412045c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x412046a8"/>
        <function-ref name="getSize" scoped="" ref="0x41204788"/>
        <function-ref name="readDone" scoped="" ref="0x41204868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41950dc0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41950dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4194f010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4194f0f0"/>
        <function-ref name="request" scoped="" ref="0x4194f1d0"/>
        <function-ref name="granted" scoped="" ref="0x4194f2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4194f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411fbd60" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411fbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f8010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f80f0"/>
        <function-ref name="request" scoped="" ref="0x411f81d0"/>
        <function-ref name="granted" scoped="" ref="0x411f82b0"/>
        <function-ref name="isOwner" scoped="" ref="0x411f8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411f8540" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411f8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411f8718"/>
        <function-ref name="userId" scoped="" ref="0x411f87f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411f7d20" loc="86:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411f7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411f7f08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411f6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411f6600" loc="89:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411f6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411f67e8"/>
        <function-ref name="configure" scoped="" ref="0x411f68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411f75e0" loc="85:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f77c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f78a8"/>
        <function-ref name="request" scoped="" ref="0x411f7988"/>
        <function-ref name="granted" scoped="" ref="0x411f7a68"/>
        <function-ref name="isOwner" scoped="" ref="0x411f7b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411f6150" loc="87:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411f6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411f6328"/>
        <function-ref name="userId" scoped="" ref="0x411f6408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x419b76e0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x419b76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x419b78b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x419b7a18" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x419b7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419b7bf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x419b7cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419b7db0"/>
        <function-ref name="dequeue" scoped="" ref="0x419b7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x419b51e8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x419b51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x419b53d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419b54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x419b5ab0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x419b5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x419b5c98"/>
        <function-ref name="configure" scoped="" ref="0x419b5d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x419b5ed8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x419b5ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419b40c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x419b41a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419b4280"/>
        <function-ref name="dequeue" scoped="" ref="0x419b4360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419b6a50" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419b6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419b6c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419b6d18"/>
        <function-ref name="request" scoped="" ref="0x419b6df8"/>
        <function-ref name="granted" scoped="" ref="0x419b6ed8"/>
        <function-ref name="isOwner" scoped="" ref="0x419b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x419b55f0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x419b55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x419b57c8"/>
        <function-ref name="userId" scoped="" ref="0x419b58a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x419b44e0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x419b44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x419b46b8"/>
        <function-ref name="runTask" scoped="" ref="0x419b4798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x411f9e30" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x411f9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411f4050"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x411f4130"/>
        <function-ref name="computeCrc" scoped="" ref="0x411f4210"/>
        <function-ref name="getSize" scoped="" ref="0x411f42f0"/>
        <function-ref name="readDone" scoped="" ref="0x411f43d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411f4510" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f46e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f47c8"/>
        <function-ref name="request" scoped="" ref="0x411f48a8"/>
        <function-ref name="granted" scoped="" ref="0x411f4988"/>
        <function-ref name="isOwner" scoped="" ref="0x411f4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419ff510" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419ff510"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419ff6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419fe060" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419fe238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419fe318"/>
        <function-ref name="request" scoped="" ref="0x419fe3f8"/>
        <function-ref name="granted" scoped="" ref="0x419fe4d8"/>
        <function-ref name="isOwner" scoped="" ref="0x419fe5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x411f39d8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x411f39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411f3bb0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x411f3c90"/>
        <function-ref name="computeCrc" scoped="" ref="0x411f3d70"/>
        <function-ref name="getSize" scoped="" ref="0x411f3e50"/>
        <function-ref name="readDone" scoped="" ref="0x411f2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411f2150" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f2328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f2408"/>
        <function-ref name="request" scoped="" ref="0x411f24e8"/>
        <function-ref name="granted" scoped="" ref="0x411f25c8"/>
        <function-ref name="isOwner" scoped="" ref="0x411f26a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419fa9a0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419fa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419fab78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419f94e8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419f94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419f96c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419f97a0"/>
        <function-ref name="request" scoped="" ref="0x419f9880"/>
        <function-ref name="granted" scoped="" ref="0x419f9960"/>
        <function-ref name="isOwner" scoped="" ref="0x419f9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x411f0958" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x411f0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x411f0b30"/>
        <function-ref name="writeDone" scoped="" ref="0x411f0c10"/>
        <function-ref name="erase" scoped="" ref="0x411f0cf0"/>
        <function-ref name="eraseDone" scoped="" ref="0x411f0dd0"/>
        <function-ref name="write" scoped="" ref="0x411f0eb0"/>
        <function-ref name="sync" scoped="" ref="0x4122a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4122a150" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4122a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4122a328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4122a408"/>
        <function-ref name="request" scoped="" ref="0x4122a4e8"/>
        <function-ref name="granted" scoped="" ref="0x4122a5c8"/>
        <function-ref name="isOwner" scoped="" ref="0x4122a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419f5db0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419f5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419f4948" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419f4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419f4b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419f4c00"/>
        <function-ref name="request" scoped="" ref="0x419f4ce0"/>
        <function-ref name="granted" scoped="" ref="0x419f4dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x419f4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x412296a0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x412296a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41229878"/>
        <function-ref name="writeDone" scoped="" ref="0x41229958"/>
        <function-ref name="erase" scoped="" ref="0x41229a38"/>
        <function-ref name="eraseDone" scoped="" ref="0x41229b18"/>
        <function-ref name="write" scoped="" ref="0x41229bf8"/>
        <function-ref name="sync" scoped="" ref="0x41229cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41229e18" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41229e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41228010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412280f0"/>
        <function-ref name="request" scoped="" ref="0x412281d0"/>
        <function-ref name="granted" scoped="" ref="0x412282b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41228390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419ee350" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419ee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419ee528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419eee60" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419eee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419ed050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419ed130"/>
        <function-ref name="request" scoped="" ref="0x419ed210"/>
        <function-ref name="granted" scoped="" ref="0x419ed2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x419ed3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41227330" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41227330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41227508"/>
        <function-ref name="writeDone" scoped="" ref="0x412275e8"/>
        <function-ref name="erase" scoped="" ref="0x412276c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x412277a8"/>
        <function-ref name="write" scoped="" ref="0x41227888"/>
        <function-ref name="sync" scoped="" ref="0x41227968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41227aa8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41227aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41227c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41227d60"/>
        <function-ref name="request" scoped="" ref="0x41227e40"/>
        <function-ref name="granted" scoped="" ref="0x41227f20"/>
        <function-ref name="isOwner" scoped="" ref="0x41226018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x419e9860" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x419e9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419e9a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419e83a8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419e83a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419e8580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419e8660"/>
        <function-ref name="request" scoped="" ref="0x419e8740"/>
        <function-ref name="granted" scoped="" ref="0x419e8820"/>
        <function-ref name="isOwner" scoped="" ref="0x419e8900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x412b2bd8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x412b2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x412e2218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x41222d98" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x41222d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x412b2918"/>
        <function-ref name="get" scoped="" ref="0x412b2400"/>
        <function-ref name="set" scoped="" ref="0x412b2678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x419e0d88" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x419e0d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x419df010"/>
        <function-ref name="runTask" scoped="" ref="0x419df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x419e19b0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x419e19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x419e1c68"/>
        <function-ref name="storeData" scoped="" ref="0x419e0010"/>
        <function-ref name="newData" scoped="" ref="0x419e1d48"/>
        <function-ref name="start" scoped="" ref="0x419e1e28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x419e1f08"/>
        <function-ref name="stop" scoped="" ref="0x419e1b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x419e1030" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x419e1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x419e1658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x419e0170" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x419e0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x419e0348"/>
        <function-ref name="led0Toggle" scoped="" ref="0x419e0428"/>
        <function-ref name="led1On" scoped="" ref="0x419e0508"/>
        <function-ref name="led1Toggle" scoped="" ref="0x419e05e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x419e06c8"/>
        <function-ref name="get" scoped="" ref="0x419e07a8"/>
        <function-ref name="led1Off" scoped="" ref="0x419e0888"/>
        <function-ref name="led0On" scoped="" ref="0x419e0c08"/>
        <function-ref name="set" scoped="" ref="0x419e0a48"/>
        <function-ref name="led2On" scoped="" ref="0x419e0968"/>
        <function-ref name="led2Off" scoped="" ref="0x419e0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x419e3200" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x419e3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x419e3d60"/>
        <function-ref name="get" scoped="" ref="0x419e3848"/>
        <function-ref name="set" scoped="" ref="0x419e3ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x419e4cb0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x419e4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x419e4e88"/>
        <function-ref name="stop" scoped="" ref="0x419e3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x4123a028" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4123a028"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4123a200"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4123a2e0"/>
        <function-ref name="reset" scoped="" ref="0x4123a3c0"/>
        <function-ref name="start" scoped="" ref="0x4123a4a0"/>
        <function-ref name="stop" scoped="" ref="0x4123a580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x4123ec60" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4123ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x4123ef18"/>
        <function-ref name="stop" scoped="" ref="0x4123b2b0"/>
        <function-ref name="newData" scoped="" ref="0x4123b010"/>
        <function-ref name="start" scoped="" ref="0x4123b0f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4123b1d0"/>
        <function-ref name="requestData" scoped="" ref="0x4123ee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4123e488" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4123e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4123e660"/>
        <function-ref name="stop" scoped="" ref="0x4123e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x4123aaf8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x4123aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4123acd0"/>
        <function-ref name="stop" scoped="" ref="0x4123adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x41231b78" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x41231b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41231d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x412313f8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x412313f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412315d0"/>
        <function-ref name="getPayload" scoped="" ref="0x412316b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41231790"/>
        <function-ref name="cancel" scoped="" ref="0x41231870"/>
        <function-ref name="sendDone" scoped="" ref="0x41231950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x412338d0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412338d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41233aa8"/>
        <function-ref name="getPayload" scoped="" ref="0x41233b88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41233c68"/>
        <function-ref name="cancel" scoped="" ref="0x41233d48"/>
        <function-ref name="sendDone" scoped="" ref="0x41233e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41234968" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41234968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41234b40"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41234c20"/>
        <function-ref name="reset" scoped="" ref="0x41234d00"/>
        <function-ref name="start" scoped="" ref="0x41234de0"/>
        <function-ref name="stop" scoped="" ref="0x41234ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41239e68" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41239e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x41234130"/>
        <function-ref name="stop" scoped="" ref="0x412344b0"/>
        <function-ref name="newData" scoped="" ref="0x41234210"/>
        <function-ref name="start" scoped="" ref="0x412342f0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x412343d0"/>
        <function-ref name="requestData" scoped="" ref="0x41234050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x41231010" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41231010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412311e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41231ec0" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41231ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412720c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412721a0"/>
        <function-ref name="led1On" scoped="" ref="0x41272280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41272360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41272440"/>
        <function-ref name="get" scoped="" ref="0x41272520"/>
        <function-ref name="led1Off" scoped="" ref="0x41272600"/>
        <function-ref name="led2Off" scoped="" ref="0x41272980"/>
        <function-ref name="set" scoped="" ref="0x412726e0"/>
        <function-ref name="led0On" scoped="" ref="0x412727c0"/>
        <function-ref name="led2On" scoped="" ref="0x412728a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41239690" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41239690"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41239868"/>
        <function-ref name="stop" scoped="" ref="0x41239948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41233498" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41233498"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41233670"/>
        <function-ref name="stop" scoped="" ref="0x41233750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412355c0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412355c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41235798"/>
        <function-ref name="getPayload" scoped="" ref="0x41235878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41235958"/>
        <function-ref name="cancel" scoped="" ref="0x41235a38"/>
        <function-ref name="sendDone" scoped="" ref="0x41235b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41235c58" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41235c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41235e30"/>
        <function-ref name="payloadLength" scoped="" ref="0x41235f10"/>
        <function-ref name="getPayload" scoped="" ref="0x41288010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412880f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412881d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41288310" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41288310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412884e8"/>
        <function-ref name="source" scoped="" ref="0x412885c8"/>
        <function-ref name="address" scoped="" ref="0x412886a8"/>
        <function-ref name="destination" scoped="" ref="0x41288788"/>
        <function-ref name="setSource" scoped="" ref="0x41288868"/>
        <function-ref name="setDestination" scoped="" ref="0x41288948"/>
        <function-ref name="type" scoped="" ref="0x41288a28"/>
        <function-ref name="setType" scoped="" ref="0x41288b08"/>
        <function-ref name="isForMe" scoped="" ref="0x41288be8"/>
        <function-ref name="setGroup" scoped="" ref="0x41288cc8"/>
        <function-ref name="localGroup" scoped="" ref="0x41288da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41288f08" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41288f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412870f0"/>
        <function-ref name="noAck" scoped="" ref="0x412871d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x412872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a2e030" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a2e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a2e208"/>
        <function-ref name="getPayload" scoped="" ref="0x41a2e2e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a2e3c8"/>
        <function-ref name="cancel" scoped="" ref="0x41a2e4a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41a2e588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a2e6c8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a2e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a2e8a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a2e980"/>
        <function-ref name="getPayload" scoped="" ref="0x41a2ea60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a2eb40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a2ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a2ed60" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a2ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a2d010"/>
        <function-ref name="source" scoped="" ref="0x41a2d0f0"/>
        <function-ref name="address" scoped="" ref="0x41a2d1d0"/>
        <function-ref name="destination" scoped="" ref="0x41a2d2b0"/>
        <function-ref name="setSource" scoped="" ref="0x41a2d390"/>
        <function-ref name="setDestination" scoped="" ref="0x41a2d470"/>
        <function-ref name="type" scoped="" ref="0x41a2d550"/>
        <function-ref name="setType" scoped="" ref="0x41a2d630"/>
        <function-ref name="isForMe" scoped="" ref="0x41a2d710"/>
        <function-ref name="setGroup" scoped="" ref="0x41a2d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41a2d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a2da30" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a2da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a2dc08"/>
        <function-ref name="noAck" scoped="" ref="0x41a2dce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a2ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a2ab58" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a2ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a2ad30"/>
        <function-ref name="getPayload" scoped="" ref="0x41a2ae10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a2aef0"/>
        <function-ref name="cancel" scoped="" ref="0x41a27010"/>
        <function-ref name="sendDone" scoped="" ref="0x41a270f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a27260" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a27260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a27438"/>
        <function-ref name="getPayload" scoped="" ref="0x41a27518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a275f8"/>
        <function-ref name="cancel" scoped="" ref="0x41a276d8"/>
        <function-ref name="sendDone" scoped="" ref="0x41a277b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a278f8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a278f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a27ad0"/>
        <function-ref name="source" scoped="" ref="0x41a27bb0"/>
        <function-ref name="address" scoped="" ref="0x41a27c90"/>
        <function-ref name="destination" scoped="" ref="0x41a27d70"/>
        <function-ref name="setSource" scoped="" ref="0x41a27e50"/>
        <function-ref name="setDestination" scoped="" ref="0x41a26010"/>
        <function-ref name="type" scoped="" ref="0x41a260f0"/>
        <function-ref name="setType" scoped="" ref="0x41a261d0"/>
        <function-ref name="isForMe" scoped="" ref="0x41a262b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41a26390"/>
        <function-ref name="localGroup" scoped="" ref="0x41a26470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41286cc8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41286cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41286ea0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41285010"/>
        <function-ref name="getPayload" scoped="" ref="0x412850f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412851d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412869b0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41286b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412853f0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412855c8"/>
        <function-ref name="source" scoped="" ref="0x412856a8"/>
        <function-ref name="address" scoped="" ref="0x41285788"/>
        <function-ref name="destination" scoped="" ref="0x41285868"/>
        <function-ref name="setSource" scoped="" ref="0x41285948"/>
        <function-ref name="setDestination" scoped="" ref="0x41285a28"/>
        <function-ref name="type" scoped="" ref="0x41285b08"/>
        <function-ref name="setType" scoped="" ref="0x41285be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41285cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41285da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41285e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412834b0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412834b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41283688"/>
        <function-ref name="getPayload" scoped="" ref="0x41283768"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41283848"/>
        <function-ref name="cancel" scoped="" ref="0x41283928"/>
        <function-ref name="sendDone" scoped="" ref="0x41283a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41283b48" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41283b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41283d20"/>
        <function-ref name="payloadLength" scoped="" ref="0x41283e00"/>
        <function-ref name="getPayload" scoped="" ref="0x41283ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41282010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41282230" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41282230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41282408"/>
        <function-ref name="source" scoped="" ref="0x412824e8"/>
        <function-ref name="address" scoped="" ref="0x412825c8"/>
        <function-ref name="destination" scoped="" ref="0x412826a8"/>
        <function-ref name="setSource" scoped="" ref="0x41282788"/>
        <function-ref name="setDestination" scoped="" ref="0x41282868"/>
        <function-ref name="type" scoped="" ref="0x41282948"/>
        <function-ref name="setType" scoped="" ref="0x41282a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41282b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41282be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41282cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41282e28" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41282e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41280050"/>
        <function-ref name="noAck" scoped="" ref="0x41280130"/>
        <function-ref name="wasAcked" scoped="" ref="0x41280210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a1aed0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a1aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a170c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a171a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a17280"/>
        <function-ref name="cancel" scoped="" ref="0x41a17360"/>
        <function-ref name="sendDone" scoped="" ref="0x41a17440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a17580" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a17580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a17758"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a17838"/>
        <function-ref name="getPayload" scoped="" ref="0x41a17918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a179f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a17ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a17c18" loc="51:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a17c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a17df0"/>
        <function-ref name="source" scoped="" ref="0x41a17ed0"/>
        <function-ref name="address" scoped="" ref="0x41a16010"/>
        <function-ref name="destination" scoped="" ref="0x41a160f0"/>
        <function-ref name="setSource" scoped="" ref="0x41a161d0"/>
        <function-ref name="setDestination" scoped="" ref="0x41a162b0"/>
        <function-ref name="type" scoped="" ref="0x41a16390"/>
        <function-ref name="setType" scoped="" ref="0x41a16470"/>
        <function-ref name="isForMe" scoped="" ref="0x41a16550"/>
        <function-ref name="setGroup" scoped="" ref="0x41a16630"/>
        <function-ref name="localGroup" scoped="" ref="0x41a16710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a16870" loc="52:/home/van9ogh/Projects/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a16870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a16a48"/>
        <function-ref name="noAck" scoped="" ref="0x41a16b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a16c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a13998" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a13998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a13b70"/>
        <function-ref name="getPayload" scoped="" ref="0x41a13c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a13d30"/>
        <function-ref name="cancel" scoped="" ref="0x41a13e10"/>
        <function-ref name="sendDone" scoped="" ref="0x41a13ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a0f080" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a0f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a0f258"/>
        <function-ref name="getPayload" scoped="" ref="0x41a0f338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a0f418"/>
        <function-ref name="cancel" scoped="" ref="0x41a0f4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x41a0f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a0f718" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a0f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a0f8f0"/>
        <function-ref name="source" scoped="" ref="0x41a0f9d0"/>
        <function-ref name="address" scoped="" ref="0x41a0fab0"/>
        <function-ref name="destination" scoped="" ref="0x41a0fb90"/>
        <function-ref name="setSource" scoped="" ref="0x41a0fc70"/>
        <function-ref name="setDestination" scoped="" ref="0x41a0fd50"/>
        <function-ref name="type" scoped="" ref="0x41a0fe30"/>
        <function-ref name="setType" scoped="" ref="0x41a0ff10"/>
        <function-ref name="isForMe" scoped="" ref="0x41a0e010"/>
        <function-ref name="setGroup" scoped="" ref="0x41a0e0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41a0e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4127fd30" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4127fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4127ff08"/>
        <function-ref name="payloadLength" scoped="" ref="0x4127e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4127e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127e1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4127e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4127fa18" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4127fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4127fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4127e3f0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4127e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4127e5c8"/>
        <function-ref name="source" scoped="" ref="0x4127e6a8"/>
        <function-ref name="address" scoped="" ref="0x4127e788"/>
        <function-ref name="destination" scoped="" ref="0x4127e868"/>
        <function-ref name="setSource" scoped="" ref="0x4127e948"/>
        <function-ref name="setDestination" scoped="" ref="0x4127ea28"/>
        <function-ref name="type" scoped="" ref="0x4127eb08"/>
        <function-ref name="setType" scoped="" ref="0x4127ebe8"/>
        <function-ref name="isForMe" scoped="" ref="0x4127ecc8"/>
        <function-ref name="setGroup" scoped="" ref="0x4127eda8"/>
        <function-ref name="localGroup" scoped="" ref="0x4127ee88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4127a010" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4127a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4127a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4127a378" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4127a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4127a550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4127a630"/>
        <function-ref name="led1On" scoped="" ref="0x4127a710"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4127a7f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4127a8d0"/>
        <function-ref name="get" scoped="" ref="0x4127a9b0"/>
        <function-ref name="led1Off" scoped="" ref="0x4127aa90"/>
        <function-ref name="led2Off" scoped="" ref="0x4127ae10"/>
        <function-ref name="set" scoped="" ref="0x4127ab70"/>
        <function-ref name="led0On" scoped="" ref="0x4127ac50"/>
        <function-ref name="led2On" scoped="" ref="0x4127ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x4127bb88" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4127bb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4127bd60"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4127be40"/>
        <function-ref name="reset" scoped="" ref="0x4127bf20"/>
        <function-ref name="start" scoped="" ref="0x412b1018"/>
        <function-ref name="stop" scoped="" ref="0x412b10f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x412e4bb8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x412e4bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x412e4da0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x412e4e80"/>
        <function-ref name="reset" scoped="" ref="0x412e3010"/>
        <function-ref name="start" scoped="" ref="0x412e30f0"/>
        <function-ref name="stop" scoped="" ref="0x412e31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41a5f128" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41a5f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41a5f300"/>
        <function-ref name="clear" scoped="" ref="0x41a5f3e0"/>
        <function-ref name="toggle" scoped="" ref="0x41a5f4c0"/>
        <function-ref name="get" scoped="" ref="0x41a5f5a0"/>
        <function-ref name="assign" scoped="" ref="0x41a5f680"/>
        <function-ref name="setAll" scoped="" ref="0x41a5f760"/>
        <function-ref name="set" scoped="" ref="0x41a5f840"/>
        <function-ref name="size" scoped="" ref="0x41a5f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41a5fa80" loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41a5fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41a5fc58"/>
        <function-ref name="clear" scoped="" ref="0x41a5fd38"/>
        <function-ref name="toggle" scoped="" ref="0x41a5fe18"/>
        <function-ref name="get" scoped="" ref="0x41a5fef8"/>
        <function-ref name="assign" scoped="" ref="0x41a5e010"/>
        <function-ref name="setAll" scoped="" ref="0x41a5e0f0"/>
        <function-ref name="set" scoped="" ref="0x41a5e1d0"/>
        <function-ref name="size" scoped="" ref="0x41a5e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41a5e3f0" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41a5e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41a5e5c8"/>
        <function-ref name="rand32" scoped="" ref="0x41a5e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41a63780" loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41a63780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41a63968"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41a63a48"/>
        <function-ref name="reset" scoped="" ref="0x41a63b28"/>
        <function-ref name="start" scoped="" ref="0x41a63c08"/>
        <function-ref name="stop" scoped="" ref="0x41a63ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a633d0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a633d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a635a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41a5d430" loc="154:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41a5d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a5d608"/>
        <function-ref name="runTask" scoped="" ref="0x41a5d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a5e7e8" loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41a5e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a5e9c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a5eaa0"/>
        <function-ref name="led1On" scoped="" ref="0x41a5eb80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a5ec60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a5ed40"/>
        <function-ref name="get" scoped="" ref="0x41a5ee20"/>
        <function-ref name="led1Off" scoped="" ref="0x41a5ef00"/>
        <function-ref name="led0On" scoped="" ref="0x41a5d2b0"/>
        <function-ref name="set" scoped="" ref="0x41a5d0f0"/>
        <function-ref name="led2On" scoped="" ref="0x41a5d010"/>
        <function-ref name="led2Off" scoped="" ref="0x41a5d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41a63ee8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41a63ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41a61a18"/>
        <function-ref name="fired" scoped="" ref="0x41a62cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41a613d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x41a61180"/>
        <function-ref name="getdt" scoped="" ref="0x41a61ec8"/>
        <function-ref name="gett0" scoped="" ref="0x41a61c70"/>
        <function-ref name="isRunning" scoped="" ref="0x41a62f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41a62558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41a616f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41a627d8"/>
        <function-ref name="stop" scoped="" ref="0x41a62a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41a5ce18" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41a5ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41a5a920"/>
        <function-ref name="fired" scoped="" ref="0x41a5bbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41a5a2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41a5a088"/>
        <function-ref name="getdt" scoped="" ref="0x41a5add0"/>
        <function-ref name="gett0" scoped="" ref="0x41a5ab78"/>
        <function-ref name="isRunning" scoped="" ref="0x41a5be18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41a5b468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41a5a600"/>
        <function-ref name="startOneShot" scoped="" ref="0x41a5b6e8"/>
        <function-ref name="stop" scoped="" ref="0x41a5b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a59b08" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a59b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a59ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41a59e40" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41a59e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41a57050"/>
        <function-ref name="clear" scoped="" ref="0x41a57130"/>
        <function-ref name="toggle" scoped="" ref="0x41a57210"/>
        <function-ref name="get" scoped="" ref="0x41a572f0"/>
        <function-ref name="assign" scoped="" ref="0x41a573d0"/>
        <function-ref name="setAll" scoped="" ref="0x41a574b0"/>
        <function-ref name="set" scoped="" ref="0x41a57590"/>
        <function-ref name="size" scoped="" ref="0x41a57670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a562e0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a562e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a564b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41a56618" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41a56618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41a567f0"/>
        <function-ref name="clear" scoped="" ref="0x41a568d0"/>
        <function-ref name="toggle" scoped="" ref="0x41a569b0"/>
        <function-ref name="get" scoped="" ref="0x41a56a90"/>
        <function-ref name="assign" scoped="" ref="0x41a56b70"/>
        <function-ref name="setAll" scoped="" ref="0x41a56c50"/>
        <function-ref name="set" scoped="" ref="0x41a56d30"/>
        <function-ref name="size" scoped="" ref="0x41a56e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x412e2e80" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x412e2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412de070"/>
        <function-ref name="stop" scoped="" ref="0x412de150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x4131ab58" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x4131ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x4131ad30"/>
        <function-ref name="reboot" scoped="" ref="0x4131ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x4133d710" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x4133d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4133d8e8"/>
        <function-ref name="write" scoped="" ref="0x4133d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x4131b860" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x4131b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x4131ba38"/>
        <function-ref name="reboot" scoped="" ref="0x4131bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x41336630" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x41336630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x41336808"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x413368e8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x413369c8"/>
        <function-ref name="syncDone" scoped="" ref="0x41336aa8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x41336b88"/>
        <function-ref name="setShortAddr" scoped="" ref="0x41336c68"/>
        <function-ref name="setChannel" scoped="" ref="0x41336d48"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x41336e28"/>
        <function-ref name="setPanAddr" scoped="" ref="0x41336f08"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x41335010"/>
        <function-ref name="getExtAddr" scoped="" ref="0x413350f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x413351d0"/>
        <function-ref name="sync" scoped="" ref="0x413352b0"/>
        <function-ref name="getChannel" scoped="" ref="0x41335410"/>
        <function-ref name="getPanAddr" scoped="" ref="0x413354f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReprogramGuard" ref="0x41334ad0" loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x41334ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x41334ca8"/>
        <function-ref name="okToProgram" scoped="" ref="0x41334d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x41337148" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x41337148"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41337320"/>
        <function-ref name="write" scoped="" ref="0x41337400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4131bc88" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4131bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4131be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41337988" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41337988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41337b60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41337c40"/>
        <function-ref name="led1On" scoped="" ref="0x41337d20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41337e00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41337ee0"/>
        <function-ref name="get" scoped="" ref="0x41336010"/>
        <function-ref name="led1Off" scoped="" ref="0x413360f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41336470"/>
        <function-ref name="set" scoped="" ref="0x413361d0"/>
        <function-ref name="led0On" scoped="" ref="0x413362b0"/>
        <function-ref name="led2On" scoped="" ref="0x41336390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x41337560" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x41337560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x41337738"/>
        <function-ref name="crc16" scoped="" ref="0x41337818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogramGuard" ref="0x413189c0" loc="3:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardC.nc">
      <component-ref qname="ReprogramGuardC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x413189c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x41318b98"/>
        <function-ref name="okToProgram" scoped="" ref="0x41318c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReprogramGuard" ref="0x41325388" loc="3:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <component-ref qname="ReprogramGuardP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReprogramGuard" scoped="" ref="0x41325388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReprogramGuard"/>
      </instance>
      <interface-functions>
        <function-ref name="okToProgramDone" scoped="" ref="0x41325560"/>
        <function-ref name="okToProgram" scoped="" ref="0x41325640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x41325920" loc="4:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/micaz/ReprogramGuardP.nc">
      <component-ref qname="ReprogramGuardP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x41325920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41321010"/>
        <function-ref name="readDone" scoped="" ref="0x41321268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41407ef8" loc="41:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41407ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41324558"/>
        <function-ref name="readDone" scoped="" ref="0x413247b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a87968" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a87968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a87b40"/>
        <function-ref name="configure" scoped="" ref="0x41a87c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41a888f0" loc="22:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41a888f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41a88f18"/>
        <function-ref name="readDone" scoped="" ref="0x41a87188"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41a87490" loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="ReprogramGuardC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41a87490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41a87668"/>
        <function-ref name="getChannel" scoped="" ref="0x41a87748"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41a87828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4135e6e0" loc="18:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4135e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4135ed08"/>
        <function-ref name="readDone" scoped="" ref="0x41359010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x41356b90" loc="19:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x41356b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41357200"/>
        <function-ref name="readDone" scoped="" ref="0x41357478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41357b30" loc="22:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41357b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41357d08"/>
        <function-ref name="getChannel" scoped="" ref="0x41357de8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41357ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x413553c0" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413553c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41355598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41355678"/>
        <function-ref name="request" scoped="" ref="0x41355758"/>
        <function-ref name="granted" scoped="" ref="0x41355838"/>
        <function-ref name="isOwner" scoped="" ref="0x41355918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413506c8" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413506c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413508a0"/>
        <function-ref name="configure" scoped="" ref="0x41350980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4134aec0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4134aec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x413500c0"/>
        <function-ref name="dataReady" scoped="" ref="0x413501a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4134ed38" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4134ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4134ef10"/>
        <function-ref name="cancel" scoped="" ref="0x41351010"/>
        <function-ref name="dataReady" scoped="" ref="0x413510f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413523c0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413523c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41352598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41352678"/>
        <function-ref name="request" scoped="" ref="0x41352758"/>
        <function-ref name="granted" scoped="" ref="0x41352838"/>
        <function-ref name="isOwner" scoped="" ref="0x41352918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41348388" loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41348388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41348560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x41347200" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x41347200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x413473d8"/>
        <function-ref name="dataReady" scoped="" ref="0x413474b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x41348bc8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x41348bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x41348da0"/>
        <function-ref name="cancel" scoped="" ref="0x41348e80"/>
        <function-ref name="dataReady" scoped="" ref="0x41347010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x41383a78" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41383a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x41383c50"/>
        <function-ref name="getAdmux" scoped="" ref="0x41383d30"/>
        <function-ref name="setPrescaler" scoped="" ref="0x41383e10"/>
        <function-ref name="isEnabled" scoped="" ref="0x41383ef0"/>
        <function-ref name="enableAdc" scoped="" ref="0x41346010"/>
        <function-ref name="setAdmux" scoped="" ref="0x413460f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x413461d0"/>
        <function-ref name="isComplete" scoped="" ref="0x413462b0"/>
        <function-ref name="cancel" scoped="" ref="0x41346390"/>
        <function-ref name="disableAdc" scoped="" ref="0x41346470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41346550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41346630"/>
        <function-ref name="startConversion" scoped="" ref="0x41346710"/>
        <function-ref name="isStarted" scoped="" ref="0x41346870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41346950"/>
        <function-ref name="setContinuous" scoped="" ref="0x41346a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41346b10"/>
        <function-ref name="getValue" scoped="" ref="0x41346bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x41346cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x41348738" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41348738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41348910"/>
        <function-ref name="stop" scoped="" ref="0x413489f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x41346ea8" loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x41346ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x413450c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x413451a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x41345280"/>
        <function-ref name="actualMicro" scoped="" ref="0x41345360"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41345440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41366010" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41366010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x413661e8"/>
        <function-ref name="getAdmux" scoped="" ref="0x413662c8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x413663a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x41366488"/>
        <function-ref name="enableAdc" scoped="" ref="0x41366568"/>
        <function-ref name="setAdmux" scoped="" ref="0x41366648"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41366728"/>
        <function-ref name="isComplete" scoped="" ref="0x41366808"/>
        <function-ref name="cancel" scoped="" ref="0x413668e8"/>
        <function-ref name="disableAdc" scoped="" ref="0x413669c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x41366aa8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x41366b88"/>
        <function-ref name="startConversion" scoped="" ref="0x41366c68"/>
        <function-ref name="isStarted" scoped="" ref="0x41366dc8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41366ea8"/>
        <function-ref name="setContinuous" scoped="" ref="0x41365010"/>
        <function-ref name="getAdcsra" scoped="" ref="0x413650f0"/>
        <function-ref name="getValue" scoped="" ref="0x413651d0"/>
        <function-ref name="dataReady" scoped="" ref="0x413652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x41365c80" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x41365c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x41365e58"/>
        <function-ref name="getAdmux" scoped="" ref="0x41362010"/>
        <function-ref name="setPrescaler" scoped="" ref="0x413620f0"/>
        <function-ref name="isEnabled" scoped="" ref="0x413621d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x413622b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x41362390"/>
        <function-ref name="enableInterruption" scoped="" ref="0x41362470"/>
        <function-ref name="isComplete" scoped="" ref="0x41362550"/>
        <function-ref name="cancel" scoped="" ref="0x41362630"/>
        <function-ref name="disableAdc" scoped="" ref="0x41362710"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x413627f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x413628d0"/>
        <function-ref name="startConversion" scoped="" ref="0x413629b0"/>
        <function-ref name="isStarted" scoped="" ref="0x41362b10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x41362bf0"/>
        <function-ref name="setContinuous" scoped="" ref="0x41362cd0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x41362db0"/>
        <function-ref name="getValue" scoped="" ref="0x41362e90"/>
        <function-ref name="dataReady" scoped="" ref="0x413a8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x413a81f8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x413a81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x413a83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41363b60" loc="92:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41363b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41363d48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41363e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413b8b58" loc="96:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413b8b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413b8d40"/>
        <function-ref name="configure" scoped="" ref="0x413b8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x413b8010" loc="93:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413b81e8"/>
        <function-ref name="requested" scoped="" ref="0x413b82c8"/>
        <function-ref name="granted" scoped="" ref="0x413b83a8"/>
        <function-ref name="isOwner" scoped="" ref="0x413b8488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413b8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41363420" loc="91:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41363420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41363608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413636e8"/>
        <function-ref name="request" scoped="" ref="0x413637c8"/>
        <function-ref name="granted" scoped="" ref="0x413638a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41363988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413b86a8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413b86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413b8880"/>
        <function-ref name="userId" scoped="" ref="0x413b8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a7d4e0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a7d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a7d6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41a7d818" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41a7d818"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a7d9f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a7dad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a7dbb0"/>
        <function-ref name="dequeue" scoped="" ref="0x41a7dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41a7b1e8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41a7b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41a7b3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a7b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a7a218" loc="60:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a7a218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a7a400"/>
        <function-ref name="configure" scoped="" ref="0x41a7a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41a7a640" loc="61:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41a7a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a7a818"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a7a8f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a7a9d8"/>
        <function-ref name="dequeue" scoped="" ref="0x41a7aab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41a7b5f0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a7b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a7b7c8"/>
        <function-ref name="requested" scoped="" ref="0x41a7b8a8"/>
        <function-ref name="granted" scoped="" ref="0x41a7b988"/>
        <function-ref name="isOwner" scoped="" ref="0x41a7ba68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a7bb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a7abf8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41a7abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a7add0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a7aeb0"/>
        <function-ref name="led1On" scoped="" ref="0x41a79010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a790f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a791d0"/>
        <function-ref name="get" scoped="" ref="0x41a792b0"/>
        <function-ref name="led1Off" scoped="" ref="0x41a79390"/>
        <function-ref name="led0On" scoped="" ref="0x41a79710"/>
        <function-ref name="set" scoped="" ref="0x41a79550"/>
        <function-ref name="led2On" scoped="" ref="0x41a79470"/>
        <function-ref name="led2Off" scoped="" ref="0x41a79630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a7ca78" loc="54:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a7ca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a7cc60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a7cd40"/>
        <function-ref name="request" scoped="" ref="0x41a7ce20"/>
        <function-ref name="granted" scoped="" ref="0x41a7cf00"/>
        <function-ref name="isOwner" scoped="" ref="0x41a7b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41a7bc88" loc="57:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a7bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a7be60"/>
        <function-ref name="userId" scoped="" ref="0x41a7a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41a79890" loc="75:/home/van9ogh/Projects/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41a79890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a79a68"/>
        <function-ref name="runTask" scoped="" ref="0x41a79b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x413b6de8" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x413b6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x413b5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x413b5150" loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413b5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413b5328"/>
        <function-ref name="requested" scoped="" ref="0x413b5408"/>
        <function-ref name="granted" scoped="" ref="0x413b54e8"/>
        <function-ref name="isOwner" scoped="" ref="0x413b55c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413b56a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x413b69f0" loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x413b69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b6bc8"/>
        <function-ref name="stop" scoped="" ref="0x413b6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x413b57e8" loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413b57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413b59c0"/>
        <function-ref name="userId" scoped="" ref="0x413b5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41ac17a8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41ac17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41ac1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41ac1ac0" loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41ac1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ac1c98"/>
        <function-ref name="requested" scoped="" ref="0x41ac1d78"/>
        <function-ref name="granted" scoped="" ref="0x41ac1e58"/>
        <function-ref name="isOwner" scoped="" ref="0x41ac0010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41ac00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41ac13b0" loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41ac13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41ac1588"/>
        <function-ref name="stop" scoped="" ref="0x41ac1668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41ac0230" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41ac0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41ac0408"/>
        <function-ref name="userId" scoped="" ref="0x41ac04e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x413ea1d8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x413ea1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ea800"/>
        <function-ref name="readDone" scoped="" ref="0x413eaa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x413e9178" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x413e9178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413e97c0"/>
        <function-ref name="readDone" scoped="" ref="0x413e9a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x413e86b0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x413e86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x413e8888"/>
        <function-ref name="getChannel" scoped="" ref="0x413e8968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x413e8a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x413e9de8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x413e9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x413e8010"/>
        <function-ref name="cancel" scoped="" ref="0x413e80f0"/>
        <function-ref name="dataReady" scoped="" ref="0x413e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x413dfe90" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x413dfe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413de080"/>
        <function-ref name="runTask" scoped="" ref="0x413de160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x413ec560" loc="24:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x413ec560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413ecb98"/>
        <function-ref name="readDone" scoped="" ref="0x413ece00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x413d3280" loc="26:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x413d3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413d38b8"/>
        <function-ref name="readDone" scoped="" ref="0x413d3b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x413d3ea0" loc="27:/home/van9ogh/Projects/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413d3ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4140c0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4140c1a0"/>
        <function-ref name="request" scoped="" ref="0x4140c280"/>
        <function-ref name="granted" scoped="" ref="0x4140c360"/>
        <function-ref name="isOwner" scoped="" ref="0x4140c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x41408470" loc="40:/home/van9ogh/Projects/tinyos-main/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41408470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41408648"/>
        <function-ref name="getChannel" scoped="" ref="0x41408728"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41408808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x413f43d0" loc="97:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x413f43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413f45a8"/>
        <function-ref name="runTask" scoped="" ref="0x413f4688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x413ff538" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x413ff538"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x413ff710"/>
        <function-ref name="reboot" scoped="" ref="0x413ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x41400f20" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x41400f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413ff110"/>
        <function-ref name="stopDone" scoped="" ref="0x413ff1f0"/>
        <function-ref name="start" scoped="" ref="0x413ff2d0"/>
        <function-ref name="stop" scoped="" ref="0x413ff3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41406278" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41406278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41406450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x41400390" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x41400390"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41400568"/>
        <function-ref name="stop" scoped="" ref="0x41400648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x413ffcb8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x413ffcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x413ffe90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x413fb3f8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x413fb3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x413fb5d0"/>
        <function-ref name="readDone" scoped="" ref="0x413fb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x414065c0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x414065c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41406798"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41406878"/>
        <function-ref name="led1On" scoped="" ref="0x41406958"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41406a38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41406b18"/>
        <function-ref name="get" scoped="" ref="0x41406bf8"/>
        <function-ref name="led1Off" scoped="" ref="0x41406cd8"/>
        <function-ref name="led2Off" scoped="" ref="0x414010f0"/>
        <function-ref name="set" scoped="" ref="0x41406db8"/>
        <function-ref name="led0On" scoped="" ref="0x41406e98"/>
        <function-ref name="led2On" scoped="" ref="0x41401010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x413fab50" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413fab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413fad28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413fae08"/>
        <function-ref name="request" scoped="" ref="0x413faee8"/>
        <function-ref name="granted" scoped="" ref="0x413fd010"/>
        <function-ref name="isOwner" scoped="" ref="0x413fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x414013d8" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x414013d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41400010"/>
        <function-ref name="get" scoped="" ref="0x41401a20"/>
        <function-ref name="set" scoped="" ref="0x41401c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x413fa700" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x413fa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x413fa8d8"/>
        <function-ref name="eraseDone" scoped="" ref="0x413fa9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x41400818" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x41400818"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414009f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x41400ad0"/>
        <function-ref name="publish" scoped="" ref="0x41400bb0"/>
        <function-ref name="stop" scoped="" ref="0x41400c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41402830" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41402830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41429368"/>
        <function-ref name="fired" scoped="" ref="0x4142b5e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4142bcf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4142ba98"/>
        <function-ref name="getdt" scoped="" ref="0x41429818"/>
        <function-ref name="gett0" scoped="" ref="0x414295c0"/>
        <function-ref name="isRunning" scoped="" ref="0x4142b840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41402e58"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41429048"/>
        <function-ref name="startOneShot" scoped="" ref="0x4142b110"/>
        <function-ref name="stop" scoped="" ref="0x4142b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41428940" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41428940"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41428b18"/>
        <function-ref name="readDone" scoped="" ref="0x41428bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41421cf0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41421cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41421ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x4141f3e0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4141f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4141f5b8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4141f698"/>
        <function-ref name="computeCrc" scoped="" ref="0x4141f778"/>
        <function-ref name="getSize" scoped="" ref="0x4141f858"/>
        <function-ref name="readDone" scoped="" ref="0x4141f938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x4141fe00" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4141fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4141e010"/>
        <function-ref name="writeDone" scoped="" ref="0x4141e0f0"/>
        <function-ref name="erase" scoped="" ref="0x4141e1d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4141e2b0"/>
        <function-ref name="write" scoped="" ref="0x4141e390"/>
        <function-ref name="sync" scoped="" ref="0x4141e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41421898" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41421898"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41421a70"/>
        <function-ref name="readDone" scoped="" ref="0x41421b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x4141e938" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x4141e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x4141eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x414230d8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x414230d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414232b0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41423390"/>
        <function-ref name="computeCrc" scoped="" ref="0x41423470"/>
        <function-ref name="getSize" scoped="" ref="0x41423550"/>
        <function-ref name="readDone" scoped="" ref="0x41423630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41423770" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41423770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41423948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41423a28"/>
        <function-ref name="request" scoped="" ref="0x41423b08"/>
        <function-ref name="granted" scoped="" ref="0x41423be8"/>
        <function-ref name="isOwner" scoped="" ref="0x41423cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ab2828" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ab2828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ab2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ab1358" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ab1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ab1530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ab1610"/>
        <function-ref name="request" scoped="" ref="0x41ab16f0"/>
        <function-ref name="granted" scoped="" ref="0x41ab17d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ab18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41446ce8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41446ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41446ec0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41445010"/>
        <function-ref name="computeCrc" scoped="" ref="0x414450f0"/>
        <function-ref name="getSize" scoped="" ref="0x414451d0"/>
        <function-ref name="readDone" scoped="" ref="0x414452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414453f0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414455c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414456a8"/>
        <function-ref name="request" scoped="" ref="0x41445788"/>
        <function-ref name="granted" scoped="" ref="0x41445868"/>
        <function-ref name="isOwner" scoped="" ref="0x41445948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41aadc68" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41aadc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41aade40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41aac820" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41aac820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41aac9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41aacad8"/>
        <function-ref name="request" scoped="" ref="0x41aacbb8"/>
        <function-ref name="granted" scoped="" ref="0x41aacc98"/>
        <function-ref name="isOwner" scoped="" ref="0x41aacd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x414448a8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x414448a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41444a80"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41444b60"/>
        <function-ref name="computeCrc" scoped="" ref="0x41444c40"/>
        <function-ref name="getSize" scoped="" ref="0x41444d20"/>
        <function-ref name="readDone" scoped="" ref="0x41444e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41443010" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41443010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414431e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414432c8"/>
        <function-ref name="request" scoped="" ref="0x414433a8"/>
        <function-ref name="granted" scoped="" ref="0x41443488"/>
        <function-ref name="isOwner" scoped="" ref="0x41443568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41aa61e8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41aa61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41aa63c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41aa6cf8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41aa6cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41aa6ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41aa5010"/>
        <function-ref name="request" scoped="" ref="0x41aa50f0"/>
        <function-ref name="granted" scoped="" ref="0x41aa51d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41aa52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x414424d0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x414424d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x414426a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41442788"/>
        <function-ref name="computeCrc" scoped="" ref="0x41442868"/>
        <function-ref name="getSize" scoped="" ref="0x41442948"/>
        <function-ref name="readDone" scoped="" ref="0x41442a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41442b68" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41442b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41442d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41442e20"/>
        <function-ref name="request" scoped="" ref="0x41442f00"/>
        <function-ref name="granted" scoped="" ref="0x41440010"/>
        <function-ref name="isOwner" scoped="" ref="0x414400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41aa1690" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41aa1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41aa1868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41aa01b8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41aa01b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41aa0390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41aa0470"/>
        <function-ref name="request" scoped="" ref="0x41aa0550"/>
        <function-ref name="granted" scoped="" ref="0x41aa0630"/>
        <function-ref name="isOwner" scoped="" ref="0x41aa0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4143e030" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4143e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4143e208"/>
        <function-ref name="writeDone" scoped="" ref="0x4143e2e8"/>
        <function-ref name="erase" scoped="" ref="0x4143e3c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x4143e4a8"/>
        <function-ref name="write" scoped="" ref="0x4143e588"/>
        <function-ref name="sync" scoped="" ref="0x4143e668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4143e7a8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4143e7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4143e980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4143ea60"/>
        <function-ref name="request" scoped="" ref="0x4143eb40"/>
        <function-ref name="granted" scoped="" ref="0x4143ec20"/>
        <function-ref name="isOwner" scoped="" ref="0x4143ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41a9cab8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41a9cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a9cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a9a6d8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a9a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a9a8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a9a990"/>
        <function-ref name="request" scoped="" ref="0x41a9aa70"/>
        <function-ref name="granted" scoped="" ref="0x41a9ab50"/>
        <function-ref name="isOwner" scoped="" ref="0x41a9ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4143dd20" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4143dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4143def8"/>
        <function-ref name="writeDone" scoped="" ref="0x4143c010"/>
        <function-ref name="erase" scoped="" ref="0x4143c0f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4143c1d0"/>
        <function-ref name="write" scoped="" ref="0x4143c2b0"/>
        <function-ref name="sync" scoped="" ref="0x4143c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4143c4d0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4143c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4143c6a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4143c788"/>
        <function-ref name="request" scoped="" ref="0x4143c868"/>
        <function-ref name="granted" scoped="" ref="0x4143c948"/>
        <function-ref name="isOwner" scoped="" ref="0x4143ca28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41af90e8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41af90e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41af92c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41af9bf8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41af9bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41af9dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41af9eb0"/>
        <function-ref name="request" scoped="" ref="0x41af8010"/>
        <function-ref name="granted" scoped="" ref="0x41af80f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41af81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4143b9b8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4143b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4143bb90"/>
        <function-ref name="writeDone" scoped="" ref="0x4143bc70"/>
        <function-ref name="erase" scoped="" ref="0x4143bd50"/>
        <function-ref name="eraseDone" scoped="" ref="0x4143be30"/>
        <function-ref name="write" scoped="" ref="0x4143bf10"/>
        <function-ref name="sync" scoped="" ref="0x4143a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4143a150" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4143a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4143a328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4143a408"/>
        <function-ref name="request" scoped="" ref="0x4143a4e8"/>
        <function-ref name="granted" scoped="" ref="0x4143a5c8"/>
        <function-ref name="isOwner" scoped="" ref="0x4143a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41af4690" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41af4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41af4868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41af31b8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41af31b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41af3390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41af3470"/>
        <function-ref name="request" scoped="" ref="0x41af3550"/>
        <function-ref name="granted" scoped="" ref="0x41af3630"/>
        <function-ref name="isOwner" scoped="" ref="0x41af3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x414836a0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x414836a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41483878"/>
        <function-ref name="writeDone" scoped="" ref="0x41483958"/>
        <function-ref name="erase" scoped="" ref="0x41483a38"/>
        <function-ref name="eraseDone" scoped="" ref="0x41483b18"/>
        <function-ref name="write" scoped="" ref="0x41483bf8"/>
        <function-ref name="sync" scoped="" ref="0x41483cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41483e18" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41483e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41482010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414820f0"/>
        <function-ref name="request" scoped="" ref="0x414821d0"/>
        <function-ref name="granted" scoped="" ref="0x414822b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41482390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41aefba0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41aefba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41aefd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41aed6d8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41aed6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41aed8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41aed990"/>
        <function-ref name="request" scoped="" ref="0x41aeda70"/>
        <function-ref name="granted" scoped="" ref="0x41aedb50"/>
        <function-ref name="isOwner" scoped="" ref="0x41aedc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x4147ccc0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x4147ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4147ce98"/>
        <function-ref name="readDone" scoped="" ref="0x4147f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4145fe48" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4145fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4147b050"/>
        <function-ref name="eraseDone" scoped="" ref="0x4147b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4147af20" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4147af20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41477110"/>
        <function-ref name="eraseDone" scoped="" ref="0x414771f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41473508" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41473508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x414736e0"/>
        <function-ref name="writeDone" scoped="" ref="0x414737c0"/>
        <function-ref name="erase" scoped="" ref="0x414738a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41473980"/>
        <function-ref name="write" scoped="" ref="0x41473a60"/>
        <function-ref name="sync" scoped="" ref="0x41473b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41472010" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41472010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414721e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414722c8"/>
        <function-ref name="request" scoped="" ref="0x414723a8"/>
        <function-ref name="granted" scoped="" ref="0x41472488"/>
        <function-ref name="isOwner" scoped="" ref="0x41472568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41477cf0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41477cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41477ec8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41473010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41475888" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41475888"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41475a60"/>
        <function-ref name="writeDone" scoped="" ref="0x41475b40"/>
        <function-ref name="erase" scoped="" ref="0x41475c20"/>
        <function-ref name="eraseDone" scoped="" ref="0x41475d00"/>
        <function-ref name="write" scoped="" ref="0x41475de0"/>
        <function-ref name="sync" scoped="" ref="0x41475ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41474030" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41474030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41474208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414742e8"/>
        <function-ref name="request" scoped="" ref="0x414743c8"/>
        <function-ref name="granted" scoped="" ref="0x414744a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41474588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ae41e8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ae41e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ae43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ae4cf8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ae4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ae4ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ae3010"/>
        <function-ref name="request" scoped="" ref="0x41ae30f0"/>
        <function-ref name="granted" scoped="" ref="0x41ae31d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ae32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41464520" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41464520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x414646f8"/>
        <function-ref name="writeDone" scoped="" ref="0x414647d8"/>
        <function-ref name="erase" scoped="" ref="0x414648b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41464998"/>
        <function-ref name="write" scoped="" ref="0x41464a78"/>
        <function-ref name="sync" scoped="" ref="0x41464b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41464c98" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41464c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41464e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41463010"/>
        <function-ref name="request" scoped="" ref="0x414630f0"/>
        <function-ref name="granted" scoped="" ref="0x414631d0"/>
        <function-ref name="isOwner" scoped="" ref="0x414632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41adf640" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41adf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41adf818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ade168" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ade168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ade340"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ade420"/>
        <function-ref name="request" scoped="" ref="0x41ade500"/>
        <function-ref name="granted" scoped="" ref="0x41ade5e0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ade6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41462250" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41462250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41462428"/>
        <function-ref name="writeDone" scoped="" ref="0x41462508"/>
        <function-ref name="erase" scoped="" ref="0x414625e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x414626c8"/>
        <function-ref name="write" scoped="" ref="0x414627a8"/>
        <function-ref name="sync" scoped="" ref="0x41462888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414629c8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414629c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41462ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41462c80"/>
        <function-ref name="request" scoped="" ref="0x41462d60"/>
        <function-ref name="granted" scoped="" ref="0x41462e40"/>
        <function-ref name="isOwner" scoped="" ref="0x41462f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ad9a08" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ad9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ad9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ad8538" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ad8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ad8710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ad87f0"/>
        <function-ref name="request" scoped="" ref="0x41ad88d0"/>
        <function-ref name="granted" scoped="" ref="0x41ad89b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ad8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4147bba8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4147bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4147bd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4147be60"/>
        <function-ref name="request" scoped="" ref="0x414a9010"/>
        <function-ref name="granted" scoped="" ref="0x414a90f0"/>
        <function-ref name="isOwner" scoped="" ref="0x414a91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x414a2060" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterC.nc">
      <component-ref qname="AutoStarterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x414a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414a2238"/>
        <function-ref name="stopDone" scoped="" ref="0x414a2318"/>
        <function-ref name="start" scoped="" ref="0x414a23f8"/>
        <function-ref name="stop" scoped="" ref="0x414a24d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x4149f0e0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4149f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4149f2b8"/>
        <function-ref name="stopDone" scoped="" ref="0x4149f398"/>
        <function-ref name="start" scoped="" ref="0x4149f478"/>
        <function-ref name="stop" scoped="" ref="0x4149f558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x414a2d10" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x414a2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x414a2ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41ad3aa8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41ad3aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41ad3c80"/>
        <function-ref name="getPayload" scoped="" ref="0x41ad3d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41ad3e40"/>
        <function-ref name="cancel" scoped="" ref="0x41ad3f20"/>
        <function-ref name="sendDone" scoped="" ref="0x41ad2018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41ad2158" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41ad2158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41ad2330"/>
        <function-ref name="payloadLength" scoped="" ref="0x41ad2410"/>
        <function-ref name="getPayload" scoped="" ref="0x41ad24f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41ad25d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41ad26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41ad27f0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41ad27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41ad29c8"/>
        <function-ref name="source" scoped="" ref="0x41ad2aa8"/>
        <function-ref name="address" scoped="" ref="0x41ad2b88"/>
        <function-ref name="destination" scoped="" ref="0x41ad2c68"/>
        <function-ref name="setSource" scoped="" ref="0x41ad2d48"/>
        <function-ref name="setDestination" scoped="" ref="0x41ad2e28"/>
        <function-ref name="type" scoped="" ref="0x41ad2f08"/>
        <function-ref name="setType" scoped="" ref="0x41ad1010"/>
        <function-ref name="isForMe" scoped="" ref="0x41ad10f0"/>
        <function-ref name="setGroup" scoped="" ref="0x41ad11d0"/>
        <function-ref name="localGroup" scoped="" ref="0x41ad12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41ad1410" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41ad1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41ad15e8"/>
        <function-ref name="noAck" scoped="" ref="0x41ad16c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41ad17a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b0e690" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b0e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b0e868"/>
        <function-ref name="getPayload" scoped="" ref="0x41b0e948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b0ea28"/>
        <function-ref name="cancel" scoped="" ref="0x41b0eb08"/>
        <function-ref name="sendDone" scoped="" ref="0x41b0ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41b0ed58" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41b0ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b0d010"/>
        <function-ref name="getPayload" scoped="" ref="0x41b0d0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b0d1d0"/>
        <function-ref name="cancel" scoped="" ref="0x41b0d2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41b0d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41b0d4d0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b0d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b0d6a8"/>
        <function-ref name="source" scoped="" ref="0x41b0d788"/>
        <function-ref name="address" scoped="" ref="0x41b0d868"/>
        <function-ref name="destination" scoped="" ref="0x41b0d948"/>
        <function-ref name="setSource" scoped="" ref="0x41b0da28"/>
        <function-ref name="setDestination" scoped="" ref="0x41b0db08"/>
        <function-ref name="type" scoped="" ref="0x41b0dbe8"/>
        <function-ref name="setType" scoped="" ref="0x41b0dcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41b0dda8"/>
        <function-ref name="setGroup" scoped="" ref="0x41b0de88"/>
        <function-ref name="localGroup" scoped="" ref="0x41b0c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414967e8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414967e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414969c0"/>
        <function-ref name="getPayload" scoped="" ref="0x41496aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41496b80"/>
        <function-ref name="cancel" scoped="" ref="0x41496c60"/>
        <function-ref name="sendDone" scoped="" ref="0x41496d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41492668" loc="48:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41492668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41492850"/>
        <function-ref name="getPayload" scoped="" ref="0x41492930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41492a10"/>
        <function-ref name="cancel" scoped="" ref="0x41492af0"/>
        <function-ref name="sendDone" scoped="" ref="0x41492bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41493ed8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41493ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414920e0"/>
        <function-ref name="getPayload" scoped="" ref="0x414921c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414922a0"/>
        <function-ref name="cancel" scoped="" ref="0x41492380"/>
        <function-ref name="sendDone" scoped="" ref="0x41492460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41491930" loc="50:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41491930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41491b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x41491be8"/>
        <function-ref name="getPayload" scoped="" ref="0x41491cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41491da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41491e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41490030" loc="169:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41490030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41490208"/>
        <function-ref name="runTask" scoped="" ref="0x414902e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41490468" loc="126:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41490468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41490640"/>
        <function-ref name="runTask" scoped="" ref="0x41490720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41492d10" loc="49:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41492d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41492ee8"/>
        <function-ref name="source" scoped="" ref="0x41491010"/>
        <function-ref name="address" scoped="" ref="0x414910f0"/>
        <function-ref name="destination" scoped="" ref="0x414911d0"/>
        <function-ref name="setSource" scoped="" ref="0x414912b0"/>
        <function-ref name="setDestination" scoped="" ref="0x41491390"/>
        <function-ref name="type" scoped="" ref="0x41491470"/>
        <function-ref name="setType" scoped="" ref="0x41491550"/>
        <function-ref name="isForMe" scoped="" ref="0x41491630"/>
        <function-ref name="setGroup" scoped="" ref="0x41491710"/>
        <function-ref name="localGroup" scoped="" ref="0x414917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41ad0ad8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41ad0ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41ad0cb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41ad0d90"/>
        <function-ref name="getPayload" scoped="" ref="0x41ad0e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41acf010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41acf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41ad07c0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41ad07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41ad0998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41acf230" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41acf230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41acf408"/>
        <function-ref name="source" scoped="" ref="0x41acf4e8"/>
        <function-ref name="address" scoped="" ref="0x41acf5c8"/>
        <function-ref name="destination" scoped="" ref="0x41acf6a8"/>
        <function-ref name="setSource" scoped="" ref="0x41acf788"/>
        <function-ref name="setDestination" scoped="" ref="0x41acf868"/>
        <function-ref name="type" scoped="" ref="0x41acf948"/>
        <function-ref name="setType" scoped="" ref="0x41acfa28"/>
        <function-ref name="isForMe" scoped="" ref="0x41acfb08"/>
        <function-ref name="setGroup" scoped="" ref="0x41acfbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x41acfcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeoutTimer" ref="0x41acb010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeoutTimer" scoped="" ref="0x41acb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b2eb00"/>
        <function-ref name="fired" scoped="" ref="0x41acbd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41b2e4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41b2e268"/>
        <function-ref name="getdt" scoped="" ref="0x41b2d010"/>
        <function-ref name="gett0" scoped="" ref="0x41b2ed58"/>
        <function-ref name="isRunning" scoped="" ref="0x41b2e010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41acb638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41b2e7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41acb8b8"/>
        <function-ref name="stop" scoped="" ref="0x41acbb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x41acc568" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x41acc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41acc740"/>
        <function-ref name="getPayload" scoped="" ref="0x41acc820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41acc900"/>
        <function-ref name="cancel" scoped="" ref="0x41acc9e0"/>
        <function-ref name="sendDone" scoped="" ref="0x41accac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x41aceb08" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41aceb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41acecf0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41acedd0"/>
        <function-ref name="computeCrc" scoped="" ref="0x41aceeb0"/>
        <function-ref name="getSize" scoped="" ref="0x41acd010"/>
        <function-ref name="readDone" scoped="" ref="0x41acd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41acd2c8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41acd2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41acd4b0"/>
        <function-ref name="writeDone" scoped="" ref="0x41acd590"/>
        <function-ref name="erase" scoped="" ref="0x41acd670"/>
        <function-ref name="eraseDone" scoped="" ref="0x41acd750"/>
        <function-ref name="write" scoped="" ref="0x41acd830"/>
        <function-ref name="sync" scoped="" ref="0x41acd910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x41accc20" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x41accc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41accdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41b2d220" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41b2d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41b2d3f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41b2d4d8"/>
        <function-ref name="led1On" scoped="" ref="0x41b2d5b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41b2d698"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41b2d778"/>
        <function-ref name="get" scoped="" ref="0x41b2d858"/>
        <function-ref name="led1Off" scoped="" ref="0x41b2d938"/>
        <function-ref name="led0On" scoped="" ref="0x41b2dcb8"/>
        <function-ref name="set" scoped="" ref="0x41b2daf8"/>
        <function-ref name="led2On" scoped="" ref="0x41b2da18"/>
        <function-ref name="led2Off" scoped="" ref="0x41b2dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41acda50" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41acda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41acdc28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41acdd08"/>
        <function-ref name="request" scoped="" ref="0x41acdde8"/>
        <function-ref name="granted" scoped="" ref="0x41acdec8"/>
        <function-ref name="isOwner" scoped="" ref="0x41acc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41acc150" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41acc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41acc328"/>
        <function-ref name="userId" scoped="" ref="0x41acc408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41b2b238" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.TimeoutTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41b2b238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b2ad58"/>
        <function-ref name="fired" scoped="" ref="0x41b2a010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41b2a718"/>
        <function-ref name="isOneShot" scoped="" ref="0x41b2a4c0"/>
        <function-ref name="getdt" scoped="" ref="0x41b28268"/>
        <function-ref name="gett0" scoped="" ref="0x41b28010"/>
        <function-ref name="isRunning" scoped="" ref="0x41b2a268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41b2b860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41b2aa38"/>
        <function-ref name="startOneShot" scoped="" ref="0x41b2bae0"/>
        <function-ref name="stop" scoped="" ref="0x41b2bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b28f20" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b28f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b27110"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b271f0"/>
        <function-ref name="request" scoped="" ref="0x41b272d0"/>
        <function-ref name="granted" scoped="" ref="0x41b273b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b27490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b26010" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b26010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b261e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b262c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b263a8"/>
        <function-ref name="getSize" scoped="" ref="0x41b26488"/>
        <function-ref name="readDone" scoped="" ref="0x41b26568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b266a8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b266a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b26880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b26960"/>
        <function-ref name="request" scoped="" ref="0x41b26a40"/>
        <function-ref name="granted" scoped="" ref="0x41b26b20"/>
        <function-ref name="isOwner" scoped="" ref="0x41b26c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b893c8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b893c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b895a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b89ed8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b89ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b880c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b881a0"/>
        <function-ref name="request" scoped="" ref="0x41b88280"/>
        <function-ref name="granted" scoped="" ref="0x41b88360"/>
        <function-ref name="isOwner" scoped="" ref="0x41b88440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b258b8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b258b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b25a90"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b25b70"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b25c50"/>
        <function-ref name="getSize" scoped="" ref="0x41b25d30"/>
        <function-ref name="readDone" scoped="" ref="0x41b25e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b24010" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b241e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b242c8"/>
        <function-ref name="request" scoped="" ref="0x41b243a8"/>
        <function-ref name="granted" scoped="" ref="0x41b24488"/>
        <function-ref name="isOwner" scoped="" ref="0x41b24568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b84828" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b84828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b84a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b82358" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b82358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b82530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b82610"/>
        <function-ref name="request" scoped="" ref="0x41b826f0"/>
        <function-ref name="granted" scoped="" ref="0x41b827d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b828b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b23230" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b23230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b23408"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b234e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b235c8"/>
        <function-ref name="getSize" scoped="" ref="0x41b236a8"/>
        <function-ref name="readDone" scoped="" ref="0x41b23788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b238c8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b238c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b23aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b23b80"/>
        <function-ref name="request" scoped="" ref="0x41b23c60"/>
        <function-ref name="granted" scoped="" ref="0x41b23d40"/>
        <function-ref name="isOwner" scoped="" ref="0x41b23e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b7fc70" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b7fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b7fe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b7d820" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b7d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b7d9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b7dad8"/>
        <function-ref name="request" scoped="" ref="0x41b7dbb8"/>
        <function-ref name="granted" scoped="" ref="0x41b7dc98"/>
        <function-ref name="isOwner" scoped="" ref="0x41b7dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b22b88" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b22b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b22d60"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b22e40"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b22f20"/>
        <function-ref name="getSize" scoped="" ref="0x41b21018"/>
        <function-ref name="readDone" scoped="" ref="0x41b210f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b21238" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b21238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b21410"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b214f0"/>
        <function-ref name="request" scoped="" ref="0x41b215d0"/>
        <function-ref name="granted" scoped="" ref="0x41b216b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b21790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b781e8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b781e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b783c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b78cf8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b78cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b78ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b77010"/>
        <function-ref name="request" scoped="" ref="0x41b770f0"/>
        <function-ref name="granted" scoped="" ref="0x41b771d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41b20448" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41b20448"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41b20620"/>
        <function-ref name="writeDone" scoped="" ref="0x41b20700"/>
        <function-ref name="erase" scoped="" ref="0x41b207e0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41b208c0"/>
        <function-ref name="write" scoped="" ref="0x41b209a0"/>
        <function-ref name="sync" scoped="" ref="0x41b20a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b20bc0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b20bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b20d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b20e78"/>
        <function-ref name="request" scoped="" ref="0x41b1f010"/>
        <function-ref name="granted" scoped="" ref="0x41b1f0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b1f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b72690" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b72690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b72868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b711b8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b711b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b71390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b71470"/>
        <function-ref name="request" scoped="" ref="0x41b71550"/>
        <function-ref name="granted" scoped="" ref="0x41b71630"/>
        <function-ref name="isOwner" scoped="" ref="0x41b71710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41b1fea8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41b1fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41b1e0c0"/>
        <function-ref name="writeDone" scoped="" ref="0x41b1e1a0"/>
        <function-ref name="erase" scoped="" ref="0x41b1e280"/>
        <function-ref name="eraseDone" scoped="" ref="0x41b1e360"/>
        <function-ref name="write" scoped="" ref="0x41b1e440"/>
        <function-ref name="sync" scoped="" ref="0x41b1e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b1e660" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b1e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b1e838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b1e918"/>
        <function-ref name="request" scoped="" ref="0x41b1e9f8"/>
        <function-ref name="granted" scoped="" ref="0x41b1ead8"/>
        <function-ref name="isOwner" scoped="" ref="0x41b1ebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b6ebd0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b6ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b6eda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b6c6f8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b6c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b6c8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b6c9b0"/>
        <function-ref name="request" scoped="" ref="0x41b6ca90"/>
        <function-ref name="granted" scoped="" ref="0x41b6cb70"/>
        <function-ref name="isOwner" scoped="" ref="0x41b6cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41b1d8b8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41b1d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41b1da90"/>
        <function-ref name="writeDone" scoped="" ref="0x41b1db70"/>
        <function-ref name="erase" scoped="" ref="0x41b1dc50"/>
        <function-ref name="eraseDone" scoped="" ref="0x41b1dd30"/>
        <function-ref name="write" scoped="" ref="0x41b1de10"/>
        <function-ref name="sync" scoped="" ref="0x41b1def0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b1c070" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b1c070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b1c248"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b1c328"/>
        <function-ref name="request" scoped="" ref="0x41b1c408"/>
        <function-ref name="granted" scoped="" ref="0x41b1c4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41b1c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b661e8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b661e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b663c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b66cf8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b66cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b66ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b65010"/>
        <function-ref name="request" scoped="" ref="0x41b650f0"/>
        <function-ref name="granted" scoped="" ref="0x41b651d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41b1b2c0" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41b1b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41b1b498"/>
        <function-ref name="writeDone" scoped="" ref="0x41b1b578"/>
        <function-ref name="erase" scoped="" ref="0x41b1b658"/>
        <function-ref name="eraseDone" scoped="" ref="0x41b1b738"/>
        <function-ref name="write" scoped="" ref="0x41b1b818"/>
        <function-ref name="sync" scoped="" ref="0x41b1b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b1ba38" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b1ba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b1bc10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b1bcf0"/>
        <function-ref name="request" scoped="" ref="0x41b1bdd0"/>
        <function-ref name="granted" scoped="" ref="0x41b1beb0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b19010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41bc8828" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41bc8828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41bc8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bc7358" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bc7358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bc7530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bc7610"/>
        <function-ref name="request" scoped="" ref="0x41bc76f0"/>
        <function-ref name="granted" scoped="" ref="0x41bc77d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41bc78b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x4151f538" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerC.nc">
      <component-ref qname="DelugeC.DelugeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x4151f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4151fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41bc3900" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41bc3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41bc3ad8"/>
        <function-ref name="getPayload" scoped="" ref="0x41bc3bb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41bc3c98"/>
        <function-ref name="cancel" scoped="" ref="0x41bc3d78"/>
        <function-ref name="sendDone" scoped="" ref="0x41bc3e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41bc2010" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41bc2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41bc21e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41bc22c8"/>
        <function-ref name="getPayload" scoped="" ref="0x41bc23a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41bc2488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41bc2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41bc26a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41bc26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41bc2880"/>
        <function-ref name="source" scoped="" ref="0x41bc2960"/>
        <function-ref name="address" scoped="" ref="0x41bc2a40"/>
        <function-ref name="destination" scoped="" ref="0x41bc2b20"/>
        <function-ref name="setSource" scoped="" ref="0x41bc2c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41bc2ce0"/>
        <function-ref name="type" scoped="" ref="0x41bc2dc0"/>
        <function-ref name="setType" scoped="" ref="0x41bc2ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41bc1010"/>
        <function-ref name="setGroup" scoped="" ref="0x41bc10f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41bc11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41bc1330" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41bc1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41bc1508"/>
        <function-ref name="noAck" scoped="" ref="0x41bc15e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41bc16c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41ba7060" loc="44:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41ba7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41ba7238"/>
        <function-ref name="getPayload" scoped="" ref="0x41ba7318"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41ba73f8"/>
        <function-ref name="cancel" scoped="" ref="0x41ba74d8"/>
        <function-ref name="sendDone" scoped="" ref="0x41ba75b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41ba7728" loc="46:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41ba7728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41ba7900"/>
        <function-ref name="getPayload" scoped="" ref="0x41ba79e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41ba7ac0"/>
        <function-ref name="cancel" scoped="" ref="0x41ba7ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x41ba7c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41ba7dc0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41ba7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41ba6010"/>
        <function-ref name="source" scoped="" ref="0x41ba60f0"/>
        <function-ref name="address" scoped="" ref="0x41ba61d0"/>
        <function-ref name="destination" scoped="" ref="0x41ba62b0"/>
        <function-ref name="setSource" scoped="" ref="0x41ba6390"/>
        <function-ref name="setDestination" scoped="" ref="0x41ba6470"/>
        <function-ref name="type" scoped="" ref="0x41ba6550"/>
        <function-ref name="setType" scoped="" ref="0x41ba6630"/>
        <function-ref name="isForMe" scoped="" ref="0x41ba6710"/>
        <function-ref name="setGroup" scoped="" ref="0x41ba67f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41ba68d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41bc09f8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41bc09f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41bc0bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41bc0cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x41bc0d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41bc0e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41bbf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41bc06e0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41bc06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41bc08b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41bbf150" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41bbf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41bbf328"/>
        <function-ref name="source" scoped="" ref="0x41bbf408"/>
        <function-ref name="address" scoped="" ref="0x41bbf4e8"/>
        <function-ref name="destination" scoped="" ref="0x41bbf5c8"/>
        <function-ref name="setSource" scoped="" ref="0x41bbf6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41bbf788"/>
        <function-ref name="type" scoped="" ref="0x41bbf868"/>
        <function-ref name="setType" scoped="" ref="0x41bbf948"/>
        <function-ref name="isForMe" scoped="" ref="0x41bbfa28"/>
        <function-ref name="setGroup" scoped="" ref="0x41bbfb08"/>
        <function-ref name="localGroup" scoped="" ref="0x41bbfbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41bbe940" loc="45:/home/van9ogh/Projects/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41bbe940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41bbb4c8"/>
        <function-ref name="fired" scoped="" ref="0x41bbd768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41bbde70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41bbdc18"/>
        <function-ref name="getdt" scoped="" ref="0x41bbb978"/>
        <function-ref name="gett0" scoped="" ref="0x41bbb720"/>
        <function-ref name="isRunning" scoped="" ref="0x41bbd9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41bbd010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41bbb1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41bbd290"/>
        <function-ref name="stop" scoped="" ref="0x41bbd510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x41bb7d10" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x41bb7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x41bb7ee8"/>
        <function-ref name="reboot" scoped="" ref="0x41bb5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41bb4ef8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bb4ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bb30e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bb31c0"/>
        <function-ref name="request" scoped="" ref="0x41bb32a0"/>
        <function-ref name="granted" scoped="" ref="0x41bb3380"/>
        <function-ref name="isOwner" scoped="" ref="0x41bb3460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x41bb9a90" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x41bb9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403960d0"/>
            <typename><typedef-ref name="TMilli" ref="0x40396298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41bb7650"/>
        <function-ref name="fired" scoped="" ref="0x41bb8830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41bb7010"/>
        <function-ref name="isOneShot" scoped="" ref="0x41bb8ce0"/>
        <function-ref name="getdt" scoped="" ref="0x41bb7b00"/>
        <function-ref name="gett0" scoped="" ref="0x41bb78a8"/>
        <function-ref name="isRunning" scoped="" ref="0x41bb8a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41bb80d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41bb7330"/>
        <function-ref name="startOneShot" scoped="" ref="0x41bb8358"/>
        <function-ref name="stop" scoped="" ref="0x41bb85d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x41bb9010" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x41bb9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41bb91e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41bb92c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41bb93a8"/>
        <function-ref name="cancel" scoped="" ref="0x41bb9488"/>
        <function-ref name="sendDone" scoped="" ref="0x41bb9568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x41bb5dc0" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41bb5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41bb4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x41bba678" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41bba678"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40ee45b0"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40ee4e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41bbaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x41bb96c8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x41bb96c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41bb98a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41bb5150" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41bb5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41bb5328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41bb5408"/>
        <function-ref name="led1On" scoped="" ref="0x41bb54e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41bb55c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41bb56a8"/>
        <function-ref name="get" scoped="" ref="0x41bb5788"/>
        <function-ref name="led1Off" scoped="" ref="0x41bb5868"/>
        <function-ref name="led0On" scoped="" ref="0x41bb5be8"/>
        <function-ref name="set" scoped="" ref="0x41bb5a28"/>
        <function-ref name="led2On" scoped="" ref="0x41bb5948"/>
        <function-ref name="led2Off" scoped="" ref="0x41bb5b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x41bb4150" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41bb4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41bb4328"/>
        <function-ref name="readDone" scoped="" ref="0x41bb4408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x41bb4b00" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41bb4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41bb4cd8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41bb4db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x41bb4548" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x41bb4548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41bb4720"/>
        <function-ref name="receiveDone" scoped="" ref="0x41bb4800"/>
        <function-ref name="publish" scoped="" ref="0x41bb48e0"/>
        <function-ref name="stop" scoped="" ref="0x41bb49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41bb2cc0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41bb2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41bb2e98"/>
        <function-ref name="readDone" scoped="" ref="0x41bb1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41bb18d0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41bb18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41bb1aa8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41bb1b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bb0458" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bb0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bb0630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bb0710"/>
        <function-ref name="request" scoped="" ref="0x41bb07f0"/>
        <function-ref name="granted" scoped="" ref="0x41bb08d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41bb09b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403dcbf0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403dc070" loc="60:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403e8010" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403e9dd8" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403e25c0" loc="31:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403e2bf8" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403e2aa0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403e92d8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403e9180" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403e9830" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403f5d18" loc="44:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403f4138" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403f5588" loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403f4908" loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403f5948" loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403f4510" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403eae38" loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403f51d8" loc="41:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403468b8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403481d8" loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40346cf8" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4034a138" loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4034a650" loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403bac90" loc="76:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403cd010" loc="62:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40380820"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403ce250" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404df010" loc="113:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e2e28" loc="113:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404dfd58" loc="138:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404dfc00" loc="138:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404e2740" loc="104:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404df520" loc="130:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404e0de0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
              <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e0898" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404e0a78" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e0c58" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x405219e8" loc="177:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40521890" loc="177:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40519168" loc="88:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40519010" loc="88:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4051a010" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4051a6a8" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051a550" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40525bd8" loc="121:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40525870" loc="121:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40525a78" loc="121:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40519d50" loc="103:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405199e8" loc="103:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40519bf0" loc="103:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40524310" loc="147:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405241b8" loc="147:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40524e48" loc="162:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40524b18" loc="162:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40524ce8" loc="162:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d3648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405237c0" loc="136:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40523668" loc="136:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40520688" loc="187:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40520328" loc="187:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40520528" loc="187:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40520f00" loc="195:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404e9bb0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e9a58" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4051e5a0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051e448" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4051d558" loc="126:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051d1f8" loc="126:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4051d3d8" loc="126:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4051fbc0" loc="106:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4051f228" loc="94:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051eec0" loc="94:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4051f0c8" loc="94:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40527c08" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40534070" loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405344f0" loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40534d60" loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40533a80" loc="100:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40533f28" loc="117:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40534918" loc="77:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40532678" loc="134:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40532520" loc="134:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405277e0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40533210" loc="89:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40533638" loc="94:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x4050c178" loc="80:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4050eb48" loc="80:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4050ed60" loc="80:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4050c010" loc="80:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40517dd0" loc="135:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40517a70" loc="135:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40517c50" loc="135:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40517510" loc="123:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4050ce18" loc="96:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050ccc0" loc="96:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4050bbf8" loc="110:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050b8a0" loc="110:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4050ba98" loc="110:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4057bea8" loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057bea8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40588038" loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40588038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40586220" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40588038"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405860c8" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40586cb8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40586b60" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x405886c0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40588568" loc="49:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405847b0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40588038"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584440" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40584650" loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40588038"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4058e900" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058e568" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4058e7a0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4058d4a0" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058d348" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4058e090" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x405919e8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40591890" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4057e9e8" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057e890" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x405894f8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405893a0" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4057b010" loc="85:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40589e28" loc="85:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x405a6880" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a6728" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x405a7778" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7620" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x405a98c0" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x405a9768" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x405a91e0" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x405a9088" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x405a9eb8" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x405a9d60" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x405a6058" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7ed0" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405ae248" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405a5eb8" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405ae0e8" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x4059e518" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059e1c0" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x4059e3b8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x4059c4f8" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059c178" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x4059c398" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x4059eba0" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x4003a630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059ea48" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x4059db58" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059da00" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x40592cd8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40592b80" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x4059d2b8" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4059d160" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405b11c0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b1068" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405a35b0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3218" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x405a3450" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x405a2840" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a26e8" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405a21c8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a3df0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x405a2068" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405b1ae0" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b1988" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x405a1ca8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a1b50" loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405b56f8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b53b8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b5598" loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405b2208" loc="125:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b3e90" loc="125:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b2088" loc="125:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405b3930" loc="112:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405b4350" loc="89:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b41f8" loc="89:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405b3010" loc="100:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b4c90" loc="100:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405b4e88" loc="100:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405b9a58" loc="120:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405b9138" loc="97:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405acaf0" loc="88:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405b95e8" loc="102:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405b7168" loc="128:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405ce490" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405ce148" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x405ce330" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405cc010" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x405cb720" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x405ccf08" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x405cb3d8" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405cb5b8" loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405cca18" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405cc6c0" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405cc8b8" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x405ceae0" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x405ce988" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x405d94e0" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x405d9038" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/van9ogh/Projects/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405c4b68" loc="95:/home/van9ogh/Projects/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/van9ogh/Projects/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405cf070" loc="105:/home/van9ogh/Projects/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/van9ogh/Projects/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x405d5300" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5188" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x405cac98" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x404e7420"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x404e6470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cab00" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x405d5dc8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x404e6b30"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x404e5a88"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5c30" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x405c24e8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x405d17f0" loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x405d1388" loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x405c5640" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x405c2010" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x405c2a00" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x405c2ec0" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x405c5b48" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x405e15f0" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x405d3788" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x405e1188" loc="66:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x405e1030" loc="66:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x405d3ba0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x405d8c80" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405d8b28" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x405d3300" loc="51:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405d31a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x40611c28" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x406118c0" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x40611ac8" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x40612ef0" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x40612910" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40612520" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x406127b0" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40606d98" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40606c40" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40611440" loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40613610" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x406134b8" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40603750" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406035f8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x40610790" loc="117:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x40612010" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40613e80" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x406102c8" loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40603b98" loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40590808"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x40590c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40613038" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40606790" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406031c8" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40613a50" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x406048f0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406048f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40604da0" loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4060c578" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406048f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4060c248" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4060c418" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406048f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40620c68" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40620b10" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40628338" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406281e0" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x40619638" loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40590808"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x40590c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406143b8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406143b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40614520" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40624810" loc="109:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406254d0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406241c8" loc="103:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40625e48" loc="103:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40624068" loc="103:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40625940" loc="88:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40624ca0" loc="116:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40614b50" loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406149f8" loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40614520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40625070" loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4062e708" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4062c010" loc="60:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4062eb78" loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4062e218" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4061de88" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d38a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4062e0b8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d3b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x406265f0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4062b770" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4062ced8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4062b408" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4062b608" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4062a578" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4062bd18" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4062a210" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4062a410" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4061ef10" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4061eab0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4061e6a0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x4061e138" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406941a8" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1dc0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403b7010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x40697b90" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403aa2e0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403aa508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40697a38" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403aa2e0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403aa508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406966a0" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b2898"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403b2ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x406984f0" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a6198"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403a63c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40696cb0" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b2898"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403b2ac0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40696b58" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b2898"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403b2ac0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406947b8" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1dc0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403b7010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40694660" loc="59:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403b1dc0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403b7010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x40698ee0" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a88f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403a8b20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x40698a10" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403aa2e0"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403aa508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x40697548" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a6198"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403a63c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406973f0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a6198"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403a63c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x406961e0" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a88f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403a8b20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40696088" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a88f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403a8b20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4069a948" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a948"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406a4428" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406a42d0" loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406a5a28" loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4069ae40" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a948"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406a69a0" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406a6848" loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a948"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406a6de0" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406a5e88" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406a63c8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406a6270" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a948"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406a5210" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406a5608" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406a7930" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x4069e858" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406a0808" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406a7e28" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7930"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406a0c10" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4069ecb8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406a03c8" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406a0270" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a7930"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4069e038" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4069e430" loc="68:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4068c4d8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068c4d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4069dd28" loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4069d498" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4068c9c8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068c4d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4069c2e0" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4069c188" loc="104:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4069c770" loc="110:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4068b860" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4068b440" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4069d900" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4068b010" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068c4d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4068cde8" loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068c4d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4068bc68" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4069d070" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406a8010" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403983b0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403985d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406ba618" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a2388"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403a25b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406a8ae8" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039cc60"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4039ce88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406ba168" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039cc60"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4039ce88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406ba010" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039cc60"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4039ce88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406bac20" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a2388"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403a25b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406baac8" loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a2388"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403a25b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406a8630" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403983b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403985d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a84d8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403983b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403985d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406b57f0" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406b5cc0" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406b53d8" loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406b41a8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406b98f8" loc="21:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039d510"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4039d738"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406b9ee8" loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039d510"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4039d738"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406b9d90" loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039d510"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4039d738"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407836b8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407836b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40783820" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40783820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40783d08" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40783820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407807c0" loc="76:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407802c0" loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40780bc0" loc="82:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x407d0bb8" loc="54:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407e55b0" loc="66:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407e5168" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407e5010" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x407d06b0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407eaa50" loc="56:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407e89c8" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407ea658" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x407e8500" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x407e83a8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x407ea250" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407eaea0" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x407f4f20" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x4084a2b0" loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x4084a7a0" loc="31:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x4084ac80" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x4084d3c8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084d068" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4084d268" loc="62:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40864ae0" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40864580" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40864780" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40864978" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4084cd40" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084c9e0" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4084cbe0" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x4084e7a8" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x404e8120"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084e448" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4084e648" loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4084c198" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084dc10" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4084de10" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4084c030" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4086d768" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4086d1f8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4086d410" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4086d600" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4086bda8" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4086b628" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4086b840" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4086ba30" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4086bc38" loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x4086f378" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x4086f220" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x408c1ba0" loc="62:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c1a48" loc="62:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x408be7a0" loc="74:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408be648" loc="74:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x408be0c8" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408bede8" loc="81:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408bec90" loc="81:/home/van9ogh/Projects/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x408b9f00" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x408b9a40" loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408cc2e0" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408c7a38" loc="126:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408c9b60" loc="117:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408c6058" loc="128:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408c7ec8" loc="128:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408cde78" loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408c8b30" loc="122:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408c89d8" loc="122:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408cbd78" loc="113:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408cbc20" loc="113:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408ccb70" loc="97:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x408e2168" loc="141:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x408e2010" loc="141:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408c91f0" loc="114:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408c69e0" loc="131:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408c6888" loc="131:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x408e32c8" loc="136:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408c75f0" loc="125:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408c7498" loc="125:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x408e3b90" loc="140:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408c8168" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408c8010" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408cb168" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408cb010" loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408c9740" loc="116:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408c95e8" loc="116:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408c7010" loc="123:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408c6480" loc="129:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408c6df0" loc="132:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x408e3720" loc="138:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408c85a0" loc="120:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408cc708" loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408cb730" loc="109:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408cb5d8" loc="109:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4090c7d0" loc="95:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4090ccb8" loc="105:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/van9ogh/Projects/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40939c58" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409352c8" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409345a8" loc="90:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40934aa8" loc="98:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4094b940" loc="79:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40936300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4094b7e8" loc="79:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40936300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x409315d8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40931c98" loc="62:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40936300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40931b40" loc="62:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40936300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4094b258" loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40936300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x409f7b98" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40a0dea8" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40a0d928" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40a0dd48" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40a0d490" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40a0d010" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a10e00" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40a18090" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409faf20" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x409fa770" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409fa618" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a172a0" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a17148" loc="72:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a18968" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a18810" loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ae20c0" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ae20c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40ae25a0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b17308" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b17308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40b13a28" loc="136:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b158a8" loc="83:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40b14a00" loc="114:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40b146b8" loc="114:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40b148a0" loc="114:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40b14210" loc="98:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40b123e8" loc="151:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40b13e70" loc="144:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40b15d38" loc="92:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40b17960" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40b17808" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40b13408" loc="129:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40b130c0" loc="129:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40b132a8" loc="129:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40b15010" loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40b17ea0" loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b154e0" loc="78:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40bf47e8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40bf47e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40bf4e38" loc="64:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40bf47e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40bf4ce0" loc="64:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40bf47e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40d1e1c8" loc="31:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d20e10" loc="31:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40d1e068" loc="31:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40d23f18" loc="15:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40d20800" loc="23:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d20488" loc="23:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4050f8f8"/>
                <typename><typedef-ref name="message_t" ref="0x4050e6b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40d206a0" loc="23:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40d3d090" loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40d14c48" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40d1a7f8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40d13468" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40d12518" loc="94:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d123c0" loc="94:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40d13990" loc="79:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40d1af28" loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d1add0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40d12a20" loc="100:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40d13ef0" loc="85:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40d19878" loc="71:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40d19e40" loc="81:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40d19268" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40d19110" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40d18628" loc="91:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d184d0" loc="91:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40d1b7b8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40d15010" loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d1be48" loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40d156a8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40d15550" loc="80:/home/van9ogh/Projects/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ddfaf8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40ddf7a8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ddf998" loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40ddbef0" loc="79:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ddbd98" loc="79:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40dd9710" loc="90:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dd93c0" loc="90:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dd95b0" loc="90:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40ddb358" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40dd85b8" loc="99:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dd8068" loc="99:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dd8258" loc="99:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40dd8450" loc="99:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40ddb8e0" loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40dda9b0" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40dda460" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dda650" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40dda848" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40df8a80" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40df8928" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40df5378" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40df5010" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40df5218" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40de99e8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40de91a8" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40de6010" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40de7e80" loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40de76d8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40dec8f0" loc="40:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40decd30" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40de95e8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40de9de8" loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40de7328" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40de71d0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40de7aa8" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x40efd178" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40efeb60" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40efed18" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40efd010" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40efaf10" loc="95:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40efa788" loc="95:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40efa9a8" loc="95:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40efaba8" loc="96:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40efada0" loc="96:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40efa178" loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40efcbb8" loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40efcdd8" loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40efa010" loc="84:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x40ef9488" loc="103:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40efc298" loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40efdaf8" loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40efdcb0" loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40efded0" loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40efc128" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-06-04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x40f28280" loc="112:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f28128" loc="112:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40f2a760" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f2a010" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40f2a1c8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f2a3e8" loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40f2a5f0" loc="72:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40f29070" loc="83:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40f296c0" loc="91:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f29568" loc="91:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40f2c5c8" loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f2c088" loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40f2c240" loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f2c460" loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40f08db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40f29b48" loc="103:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x40f04380" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40f11578"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40f06d68" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40f04010" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40f11578"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40f04218" loc="42:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40f048c8" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f04770" loc="43:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x40f06908" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40f11578"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40f06340" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40f06598" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40f11578"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40f067a0" loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40f04c90" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40f17158" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x40f1a5f8" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x40f1a4a0" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x40f19010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40f1ae58" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x40f19800" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40f11a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40f19460" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x40f196a0" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40f11a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x40f19d70" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x40f19c18" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x40f1aa08" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x40f1a010" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40f11a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40f1dc18" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40f11010"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x40f1de58" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40f11a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="41:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
      <documentation loc="35:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x40f15278" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x40f16d28" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40f16ee0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f15110" loc="61:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x40f16408" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f160c8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f162a8" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x40f718d0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40f710f0" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x40f71320" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x40f71550" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40f71760" loc="51:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x40f6e010" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="65:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f70a00" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40f70c20" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40f70e30" loc="72:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x40f704d8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40f71ef8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40f70150" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40f70370" loc="63:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x41056010" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40f08798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/StorageMap.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-01-25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x41051230" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/StorageMap.nc">
        <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x410510d8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40f08b28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x410489c0" loc="30:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x410484a8" loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x41048350" loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
      <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x410b5618" loc="173:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="168:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x410b54c0" loc="173:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x410b9d80" loc="136:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="132:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x410b9c28" loc="136:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x410b8e70" loc="154:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="150:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x410b8d18" loc="154:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x410b7dd0" loc="166:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="156:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x410b7388" loc="166:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x410b75e8" loc="166:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x410b7a30" loc="167:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x410b7c60" loc="167:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x41081c70" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41081b18" loc="80:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x410804d8" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x41080180" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x41080378" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x4107e408" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="98:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x4107e088" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x4107e2a8" loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x4107ec38" loc="116:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="112:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4107eae0" loc="116:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x410b4d88" loc="194:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="189:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x410b4a38" loc="194:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x410b4c28" loc="194:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x410b8378" loc="144:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="138:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x410b8220" loc="144:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x410b9760" loc="131:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="126:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x410b8880" loc="149:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41081570" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x41084b00" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41084d60" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x410811d0" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x41081400" loc="74:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x410b9230" loc="125:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="118:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x410b90d8" loc="125:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x410b4398" loc="187:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="175:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x410b5af0" loc="187:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x410b5d50" loc="187:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x410b4010" loc="188:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x410b4228" loc="188:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x41080bf0" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
        <documentation loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41080a98" loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x410afe38" loc="50:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x410b3e10" loc="30:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x410b39d0" loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x410af2b0" loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x410ae4a0" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x410ae348" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x410af920" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x410af7c8" loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x41112090" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x41112a78" loc="73:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x410dab50" loc="46:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x411125a0" loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x41111070" loc="81:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x41104e60" loc="141:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x4110cbe8" loc="41:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x41102708" loc="163:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x411025b0" loc="163:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x41109c60" loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x41104870" loc="134:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41105ad0" loc="134:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41105ce0" loc="134:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41104010" loc="134:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x411044c8" loc="135:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x411046f8" loc="135:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x41107170" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41108d48" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41107010" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x41100ed0" loc="185:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x4110c7c8" loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x4110a240" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x4110a0e8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x411075e8" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x4110c2a8" loc="30:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x411096b0" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41109340" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41109550" loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41100870" loc="178:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41102b28" loc="178:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x41102d38" loc="178:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41100010" loc="178:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x411004c8" loc="179:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x411006f8" loc="179:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x41108910" loc="93:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x41108418" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x411080a8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x411082b8" loc="87:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x41103ce8" loc="157:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x411032a8" loc="157:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x411034b8" loc="157:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41103718" loc="157:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x41103958" loc="158:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x41103b70" loc="158:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x411054d0" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x41107a28" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x41107c88" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40f01110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x41105180" loc="120:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x41105360" loc="120:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x4110aee0" loc="61:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x4110aa18" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x4110a6a8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x4110a8b8" loc="55:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40f02e10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4110ebc0" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4110ebc0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4110ed28" loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4110ed28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x410fd358" loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4110ed28"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x410fd200" loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4110ed28"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x41160a68" loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x41160138" loc="31:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x411605d8" loc="35:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x41160f08" loc="47:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x4115f310" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4121e410" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4121e410"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x4121ebb8" loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4121e410"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4121ea60" loc="60:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4121e410"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41220e90" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41220e90"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x4121de50" loc="69:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4121d350" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41220e90"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4121d990" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41220e90"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x4121d838" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41220e90"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x412129b8" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x41212840" loc="47:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x41210570" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41210010" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x41210200" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x41210408" loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x41210d30" loc="50:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x41212070" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x41210998" loc="49:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x41212438" loc="46:/home/van9ogh/Projects/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x41237b50" loc="90:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x41237750" loc="85:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x412372a8" loc="80:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4123b998" loc="68:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4123be88" loc="74:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/home/van9ogh/Projects/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
      <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x412a5a58" loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x412a1010" loc="69:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="65:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a2e28" loc="69:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x412a15d0" loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a1478" loc="75:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x412a2420" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a22c8" loc="57:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x412a1d78" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="77:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a1a38" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x412a1c18" loc="82:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x412a5e60" loc="50:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="47:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x412a29d0" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="59:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412a2878" loc="63:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x412a0210" loc="88:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="84:/home/van9ogh/Projects/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="45:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="38:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x4131a860" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x4131a708" loc="64:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x4131a1d8" loc="53:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="48:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="43:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4133e178" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
        <documentation loc="45:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x412fcbd8" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x412fcd90" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x4133e010" loc="56:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4133d020" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
        <documentation loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4133eae8" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x4133eca0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x4133eea0" loc="68:/home/van9ogh/Projects/tinyos-main/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReprogramGuard" loc="1:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ReprogramGuard.nc">
      <function event="" provided="0" name="okToProgramDone" ref="0x41334968" loc="4:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ReprogramGuard.nc">
        <interfacedef-ref qname="ReprogramGuard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ok" ref="0x41334810" loc="4:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ReprogramGuard.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="okToProgram" ref="0x41334430" loc="3:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/ReprogramGuard.nc">
        <interfacedef-ref qname="ReprogramGuard"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x4135fce8" loc="32:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4135f7f0" loc="25:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x4135b1f0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x413598c8" loc="52:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x413598c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x41359d98" loc="58:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x41356578" loc="66:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x413598c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41356248" loc="66:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x41356418" loc="66:/home/van9ogh/Projects/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x413598c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4134b6a8" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x41351e80" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4134b0f0" loc="100:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4134b318" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4134b538" loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4134aa40" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4134a010" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4134a200" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x4134a408" loc="119:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x4134a660" loc="120:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x4134a8c8" loc="120:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4134f9e8" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4134f208" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4134f430" loc="70:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4134f658" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4134f878" loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4134ea48" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4134e4c0" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4134e170" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4134e360" loc="81:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x413407e0" loc="114:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x41347e60" loc="53:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038bdd0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4038a070"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x4133fc88" loc="140:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4133fb30" loc="140:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x41340ca0" loc="122:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x41342920" loc="82:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x41344490" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038bdd0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4038a070"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x41344338" loc="58:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038bdd0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4038a070"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x413411a8" loc="91:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x4133f5e0" loc="133:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x41383158" loc="150:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x41342d20" loc="86:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x41341a30" loc="99:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x41341600" loc="95:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x41341e68" loc="106:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4133f138" loc="127:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40343b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x41342010" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038e0d0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4038e478"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x41344e50" loc="69:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038e0d0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4038e478"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x413403e0" loc="110:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x41344978" loc="64:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038e0d0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4038e478"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x413424c0" loc="75:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x413838a8" loc="156:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41383750" loc="156:/home/van9ogh/Projects/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4003b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/van9ogh/Projects/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/van9ogh/Projects/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x413b14d8" loc="62:/home/van9ogh/Projects/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/van9ogh/Projects/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
      <documentation loc="1:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x413fe8d8" loc="12:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x413fe780" loc="12:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x413fb290" loc="13:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x40eebd90"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x40ee6568"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x413fecb8" loc="13:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x413feef8" loc="13:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x40eebd90"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x40ee6568"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x413fb128" loc="13:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="37:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManager.nc">
      <documentation loc="32:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x413fa058" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4034cbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x413fbec0" loc="39:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x413fa598" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x413fa440" loc="40:/home/van9ogh/Projects/tinyos-main/tos/lib/net/Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
